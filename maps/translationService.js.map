{"version":3,"file":"../background/translationService.js","names":["translationService","Utils","escapeHTML","unsafe","replace","unescapeHTML","GoogleHelper","googleTranslateTKK","shiftLeftOrRightThenSumOrXor","num","optString","i","length","acc","charAt","charCodeAt","Number","transformQuery","query","bytesArray","idx","charCode","calcHash","windowTkk","tkkSplited","split","tkkIndex","tkkKey","encondingRound","item","normalizedResult","toString","YandexHelper","translateSid","findSID","Promise","resolve","updateYandexSid","date","Date","setHours","getHours","setMinutes","getMinutes","getTime","now","http","XMLHttpRequest","open","send","onload","e","result","responseText","match","substring","onerror","onabort","ontimeout","console","error","finally","BingHelper","translate_IID_IG","updateBingSid","backup_result","data_iid_r","IG_r","params_RichTranslateHelper","params_AbusePreventionHelper","data_iid","IG","parseInt","Service","constructor","serviceName","baseURL","xhrMethod","cbTransformRequest","cbParseResponse","cbTransformResponse","cbGetExtraParameters","cbGetRequestBody","translationsInProgress","Map","removeTranslationsWithError","forEach","transInfo","key","status","delete","getRequests","sourceLanguage","targetLanguage","sourceArray2d","requests","currentTranslationsInProgress","currentRequest","currentSize","sourceArray","requestString","fixString","requestHash","join","progressInfo","get","push","promise_resolve","originalText","translatedText","detectedLanguage","_status","waitTranlate","set","cacheEntry","translationCache","makeRequest","reject","xhr","setRequestHeader","responseType","event","response","undefined","translate","dontSaveInPersistentCache","dontSortResults","promises","request","then","results","text","catch","all","map","str","googleService","index","responseJson","value","indexOf","slice","sentences","sentenceStartIndex","sentenceFinalIndex","resultArray","lastEndPos","r","matchAll","fullText","fullLength","pos","aTag","insideText","outsideText","lastOutsideText","resultStartAtIndex","indexes","filter","isNaN","finalResulArray","j","info","encodeURIComponent","yandexService","lang","startsWith","bingService","translations","language","replacements","search","deeplService","DeepLTab","waitFirstTranslationResult","listener","sender","sendResponse","action","chrome","runtime","onMessage","removeListener","addListener","setTimeout","tabs","id","tab","checkedLastError","sendMessage","frameId","create","url","serviceList","translateHTML","twpLang","getAlternativeService","service","translateText","translateSingleText","incognito","source"],"sources":["translationService.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst translationService = (function () {\r\n  const translationService = {};\r\n\r\n  class Utils {\r\n    /**\r\n     * Replace the characters `& < > \" '` with `&amp; &lt; &gt; &quot; &#39;`.\r\n     * @param {string} unsafe\r\n     * @returns {string} escapedString\r\n     */\r\n    static escapeHTML(unsafe) {\r\n      return unsafe\r\n        .replace(/\\&/g, \"&amp;\")\r\n        .replace(/\\</g, \"&lt;\")\r\n        .replace(/\\>/g, \"&gt;\")\r\n        .replace(/\\\"/g, \"&quot;\")\r\n        .replace(/\\'/g, \"&#39;\");\r\n    }\r\n\r\n    /**\r\n     * Replace the characters `&amp; &lt; &gt; &quot; &#39;` with `& < > \" '`.\r\n     * @param {string} unsafe\r\n     * @returns {string} unescapedString\r\n     */\r\n    static unescapeHTML(unsafe) {\r\n      return unsafe\r\n        .replace(/\\&amp;/g, \"&\")\r\n        .replace(/\\&lt;/g, \"<\")\r\n        .replace(/\\&gt;/g, \">\")\r\n        .replace(/\\&quot;/g, '\"')\r\n        .replace(/\\&\\#39;/g, \"'\");\r\n    }\r\n  }\r\n\r\n  class GoogleHelper {\r\n    static get googleTranslateTKK() {\r\n      return \"448487.932609646\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} num\r\n     * @param {string} optString\r\n     * @returns {number}\r\n     */\r\n    static shiftLeftOrRightThenSumOrXor(num, optString) {\r\n      for (let i = 0; i < optString.length - 2; i += 3) {\r\n        /** @type {string|number} */\r\n        let acc = optString.charAt(i + 2);\r\n        if (\"a\" <= acc) {\r\n          acc = acc.charCodeAt(0) - 87;\r\n        } else {\r\n          acc = Number(acc);\r\n        }\r\n        if (optString.charAt(i + 1) == \"+\") {\r\n          acc = num >>> acc;\r\n        } else {\r\n          acc = num << acc;\r\n        }\r\n        if (optString.charAt(i) == \"+\") {\r\n          num += acc & 4294967295;\r\n        } else {\r\n          num ^= acc;\r\n        }\r\n      }\r\n      return num;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} query\r\n     * @returns {Array<number>}\r\n     */\r\n    static transformQuery(query) {\r\n      /** @type {Array<number>} */\r\n      const bytesArray = [];\r\n      let idx = 0;\r\n      for (let i = 0; i < query.length; i++) {\r\n        let charCode = query.charCodeAt(i);\r\n\r\n        if (128 > charCode) {\r\n          bytesArray[idx++] = charCode;\r\n        } else {\r\n          if (2048 > charCode) {\r\n            bytesArray[idx++] = (charCode >> 6) | 192;\r\n          } else {\r\n            if (\r\n              55296 == (charCode & 64512) &&\r\n              i + 1 < query.length &&\r\n              56320 == (query.charCodeAt(i + 1) & 64512)\r\n            ) {\r\n              charCode =\r\n                65536 +\r\n                ((charCode & 1023) << 10) +\r\n                (query.charCodeAt(++i) & 1023);\r\n              bytesArray[idx++] = (charCode >> 18) | 240;\r\n              bytesArray[idx++] = ((charCode >> 12) & 63) | 128;\r\n            } else {\r\n              bytesArray[idx++] = (charCode >> 12) | 224;\r\n            }\r\n            bytesArray[idx++] = ((charCode >> 6) & 63) | 128;\r\n          }\r\n          bytesArray[idx++] = (charCode & 63) | 128;\r\n        }\r\n      }\r\n      return bytesArray;\r\n    }\r\n\r\n    /**\r\n     * Calculates the hash (TK) of a query for google translator.\r\n     * @param {string} query\r\n     * @returns {string}\r\n     */\r\n    static calcHash(query) {\r\n      const windowTkk = GoogleHelper.googleTranslateTKK;\r\n      const tkkSplited = windowTkk.split(\".\");\r\n      const tkkIndex = Number(tkkSplited[0]) || 0;\r\n      const tkkKey = Number(tkkSplited[1]) || 0;\r\n\r\n      const bytesArray = GoogleHelper.transformQuery(query);\r\n\r\n      let encondingRound = tkkIndex;\r\n      for (const item of bytesArray) {\r\n        encondingRound += item;\r\n        encondingRound = GoogleHelper.shiftLeftOrRightThenSumOrXor(\r\n          encondingRound,\r\n          \"+-a^+6\"\r\n        );\r\n      }\r\n      encondingRound = GoogleHelper.shiftLeftOrRightThenSumOrXor(\r\n        encondingRound,\r\n        \"+-3^+b+-f\"\r\n      );\r\n\r\n      encondingRound ^= tkkKey;\r\n      if (encondingRound <= 0) {\r\n        encondingRound = (encondingRound & 2147483647) + 2147483648;\r\n      }\r\n\r\n      const normalizedResult = encondingRound % 1000000;\r\n      return normalizedResult.toString() + \".\" + (normalizedResult ^ tkkIndex);\r\n    }\r\n  }\r\n\r\n  class YandexHelper {\r\n    /** @type {number} */\r\n    static #lastRequestSidTime = null;\r\n    /** @type {string} */\r\n    static #translateSid = null;\r\n    /** @type {boolean} */\r\n    static #SIDNotFound = false;\r\n    /** @type {Promise<void>} */\r\n    static #findPromise = null;\r\n\r\n    static get translateSid() {\r\n      return YandexHelper.#translateSid;\r\n    }\r\n\r\n    /**\r\n     * Find the SID of Yandex Translator. The SID value is used in translation requests.\r\n     * @returns {Promise<void>}\r\n     */\r\n    static async findSID() {\r\n      if (YandexHelper.#findPromise) return await YandexHelper.#findPromise;\r\n      YandexHelper.#findPromise = new Promise((resolve) => {\r\n        let updateYandexSid = false;\r\n        if (YandexHelper.#lastRequestSidTime) {\r\n          const date = new Date();\r\n          if (YandexHelper.#translateSid) {\r\n            date.setHours(date.getHours() - 12);\r\n          } else if (YandexHelper.#SIDNotFound) {\r\n            date.setMinutes(date.getMinutes() - 30);\r\n          } else {\r\n            date.setMinutes(date.getMinutes() - 2);\r\n          }\r\n          if (date.getTime() > YandexHelper.#lastRequestSidTime) {\r\n            updateYandexSid = true;\r\n          }\r\n        } else {\r\n          updateYandexSid = true;\r\n        }\r\n\r\n        if (updateYandexSid) {\r\n          YandexHelper.#lastRequestSidTime = Date.now();\r\n\r\n          const http = new XMLHttpRequest();\r\n          http.open(\r\n            \"GET\",\r\n            \"https://translate.yandex.net/website-widget/v1/widget.js?widgetId=ytWidget&pageLang=es&widgetTheme=light&autoMode=false\"\r\n          );\r\n          http.send();\r\n          http.onload = (e) => {\r\n            const result = http.responseText.match(/sid\\:\\s\\'[0-9a-f\\.]+/);\r\n            if (result && result[0] && result[0].length > 7) {\r\n              YandexHelper.#translateSid = result[0].substring(6);\r\n              YandexHelper.#SIDNotFound = false;\r\n            } else {\r\n              YandexHelper.#SIDNotFound = true;\r\n            }\r\n            resolve();\r\n          };\r\n          http.onerror =\r\n            http.onabort =\r\n            http.ontimeout =\r\n              (e) => {\r\n                console.error(e);\r\n                resolve();\r\n              };\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n\r\n      YandexHelper.#findPromise.finally(() => {\r\n        YandexHelper.#findPromise = null;\r\n      });\r\n\r\n      return await YandexHelper.#findPromise;\r\n    }\r\n  }\r\n\r\n  class BingHelper {\r\n    /** @type {number} */\r\n    static #lastRequestSidTime = null;\r\n    /** @type {string} */\r\n    static #translateSid = null;\r\n    /** @type {string} */\r\n    static #translate_IID_IG = null;\r\n    /** @type {boolean} */\r\n    static #SIDNotFound = false;\r\n    /** @type {Promise<void>} */\r\n    static #sidPromise = null;\r\n\r\n    static get translateSid() {\r\n      return BingHelper.#translateSid;\r\n    }\r\n\r\n    static get translate_IID_IG() {\r\n      return BingHelper.#translate_IID_IG;\r\n    }\r\n    /**\r\n     * Find the SID (IID and IG) of Bing Translator. The SID value is used in translation requests.\r\n     * @returns {Promise<void>}\r\n     */\r\n    static async findSID() {\r\n      if (BingHelper.#sidPromise) return await BingHelper.#sidPromise;\r\n      BingHelper.#sidPromise = new Promise((resolve) => {\r\n        let updateBingSid = false;\r\n        if (BingHelper.#lastRequestSidTime) {\r\n          const date = new Date();\r\n          if (BingHelper.#translateSid) {\r\n            date.setHours(date.getHours() - 12);\r\n          } else if (BingHelper.#SIDNotFound) {\r\n            date.setMinutes(date.getMinutes() - 30);\r\n          } else {\r\n            date.setMinutes(date.getMinutes() - 2);\r\n          }\r\n          if (date.getTime() > BingHelper.#lastRequestSidTime) {\r\n            updateBingSid = true;\r\n          }\r\n        } else {\r\n          updateBingSid = true;\r\n        }\r\n\r\n        if (updateBingSid) {\r\n          BingHelper.#lastRequestSidTime = Date.now();\r\n\r\n          const http = new XMLHttpRequest();\r\n          http.open(\"GET\", \"https://www.bing.com/translator\");\r\n          http.send();\r\n          http.onload = (e) => {\r\n            const result = http.responseText.match(\r\n              /params_RichTranslateHelper\\s=\\s\\[[^\\]]+/\r\n            );\r\n            const backup_result = http.responseText.match(\r\n              /params_AbusePreventionHelper\\s=\\s\\[[^\\]]+/\r\n            );\r\n            const data_iid_r = http.responseText.match(\r\n              /data-iid\\=\\\"[a-zA-Z0-9\\.]+/\r\n            );\r\n            const IG_r = http.responseText.match(/IG\\:\\\"[a-zA-Z0-9\\.]+/);\r\n            if (\r\n              result &&\r\n              result[0] &&\r\n              result[0].length > 50 &&\r\n              data_iid_r &&\r\n              data_iid_r[0] &&\r\n              IG_r &&\r\n              IG_r[0]\r\n            ) {\r\n              const params_RichTranslateHelper = result[0]\r\n                .substring(\"params_RichTranslateHelper = [\".length)\r\n                .split(\",\");\r\n              const params_AbusePreventionHelper = backup_result[0]\r\n                .substring(\"params_AbusePreventionHelper = [\".length)\r\n                .split(\",\");\r\n              const data_iid = data_iid_r[0].substring('data-iid=\"'.length);\r\n              const IG = IG_r[0].substring('IG:\"'.length);\r\n              //IID & IG\r\n              if (data_iid && IG) {\r\n                BingHelper.#translate_IID_IG = `IG=${IG}&IID=${data_iid}`;\r\n              }\r\n              //SID\r\n              if (\r\n                params_RichTranslateHelper &&\r\n                params_RichTranslateHelper[0] &&\r\n                params_RichTranslateHelper[1] &&\r\n                parseInt(params_RichTranslateHelper[0])\r\n              ) {\r\n                BingHelper.#translateSid = `&token=${params_RichTranslateHelper[1].substring(\r\n                  1,\r\n                  params_RichTranslateHelper[1].length - 1\r\n                )}&key=${parseInt(params_RichTranslateHelper[0])}`;\r\n                BingHelper.#SIDNotFound = false;\r\n              } else if (\r\n                params_AbusePreventionHelper &&\r\n                params_AbusePreventionHelper[0] &&\r\n                params_AbusePreventionHelper[1] &&\r\n                parseInt(params_AbusePreventionHelper[0])\r\n              ) {\r\n                BingHelper.#translateSid = `&token=${params_AbusePreventionHelper[1].substring(\r\n                  1,\r\n                  params_AbusePreventionHelper[1].length - 1\r\n                )}&key=${parseInt(params_AbusePreventionHelper[0])}`;\r\n                BingHelper.#SIDNotFound = false;\r\n              } else {\r\n                BingHelper.#SIDNotFound = true;\r\n              }\r\n            } else {\r\n              BingHelper.#SIDNotFound = true;\r\n            }\r\n            resolve();\r\n          };\r\n          http.onerror =\r\n            http.onabort =\r\n            http.ontimeout =\r\n              (e) => {\r\n                console.error(e);\r\n                resolve();\r\n              };\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n\r\n      BingHelper.#sidPromise.finally(() => {\r\n        BingHelper.#sidPromise = null;\r\n      });\r\n\r\n      return await BingHelper.#sidPromise;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Base class to create new translation services.\r\n   */\r\n  class Service {\r\n    /**\r\n     * Returns a string with additional parameters to be concatenated to the request URL.\r\n     * @callback callback_cbParameters\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<TranslationInfo>} requests\r\n     * @returns {string}\r\n     */\r\n\r\n    /**\r\n     * Takes `sourceArray` and returns a request string to the translation service.\r\n     * @callback callback_cbTransformRequest\r\n     * @param {string[]} sourceArray\r\n     * @returns {string}\r\n     */\r\n\r\n    /**\r\n     * @typedef {{text: string, detectedLanguage: string}} Service_Single_Result_Response\r\n     */\r\n\r\n    /**\r\n     * Receives the response from the *http request* and returns `Service_Single_Result_Response[]`.\r\n     *\r\n     * Returns a string with the body of a request of type **POST**.\r\n     * @callback callback_cbParseResponse\r\n     * @param {Object} response\r\n     * @returns {Array<Service_Single_Result_Response>}\r\n     */\r\n\r\n    /**\r\n     * Takes a string formatted with the translated text and returns a `resultArray`.\r\n     * @callback callback_cbTransformResponse\r\n     * @param {String} response\r\n     * @param {boolean} dontSortResults\r\n     * @returns {string[]} resultArray\r\n     */\r\n\r\n    /** @typedef {\"complete\" | \"translating\" | \"error\"} TranslationStatus */\r\n    /**\r\n     * @typedef {Object} TranslationInfo\r\n     * @property {String} originalText\r\n     * @property {String} translatedText\r\n     * @property {String} detectedLanguage\r\n     * @property {TranslationStatus} status\r\n     * @property {Promise<void>} waitTranlate\r\n     */\r\n\r\n    /**\r\n     * Initializes the **Service** class with information about the new translation service.\r\n     * @param {string} serviceName\r\n     * @param {string} baseURL\r\n     * @param {\"GET\" | \"POST\"} xhrMethod\r\n     * @param {callback_cbTransformRequest} cbTransformRequest Takes `sourceArray` and returns a request string to the translation service.\r\n     * @param {callback_cbParseResponse} cbParseResponse Receives the response from the *http request* and returns `Service_Single_Result_Response[]`.\r\n     * @param {callback_cbTransformResponse} cbTransformResponse Takes a string formatted with the translated text and returns a `resultArray`.\r\n     * @param {callback_cbParameters} cbGetExtraParameters Returns a string with additional parameters to be concatenated to the request URL.\r\n     * @param {callback_cbParameters} cbGetRequestBody Returns a string with the body of a request of type **POST**.\r\n     */\r\n    constructor(\r\n      serviceName,\r\n      baseURL,\r\n      xhrMethod = \"GET\",\r\n      cbTransformRequest,\r\n      cbParseResponse,\r\n      cbTransformResponse,\r\n      cbGetExtraParameters = null,\r\n      cbGetRequestBody = null\r\n    ) {\r\n      this.serviceName = serviceName;\r\n      this.baseURL = baseURL;\r\n      this.xhrMethod = xhrMethod;\r\n      this.cbTransformRequest = cbTransformRequest;\r\n      this.cbParseResponse = cbParseResponse;\r\n      this.cbTransformResponse = cbTransformResponse;\r\n      this.cbGetExtraParameters = cbGetExtraParameters;\r\n      this.cbGetRequestBody = cbGetRequestBody;\r\n      /**\r\n       * @type {Map<string, TranslationInfo>}\r\n       *\r\n       * It works as an in-memory translation cache.\r\n       * Ensures that two identical requests share the same `XMLHttpRequest`.\r\n       * */\r\n      this.translationsInProgress = new Map();\r\n    }\r\n\r\n    /**\r\n     * Removes all translations with `status` **error** and are in `translationsInProgress`.\r\n     *\r\n     * Sometimes there is a device translation error due to internet connection problems.\r\n     * Clearing translationsInProgress ensures that the translation will be retried.\r\n     */\r\n    removeTranslationsWithError() {\r\n      this.translationsInProgress.forEach((transInfo, key) => {\r\n        if (transInfo.status === \"error\") {\r\n          this.translationsInProgress.delete(key);\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Receives the `sourceArray2d` parameter and prepares the requests.\r\n     * Calls `cbTransformRequest` for each `sourceArray` of `sourceArray2d`.\r\n     * The `currentTranslationsInProgress` array will be the **final result** with requests already completed or in progress. And the `requests` array will only contain the new requests that need to be made.\r\n     *\r\n     * Checks if there is already an identical request in progress or if it is already in the translation cache.\r\n     * If it doesn't exist, add it to `requests` to make a new *http request*.\r\n     *\r\n     * Requests longer than **800 characters** will be split into new requests.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<string[]>} sourceArray2d\r\n     * @returns {Promise<[Array<TranslationInfo[]>, TranslationInfo[]]>} `requests`, `currentTranslationsInProgress`\r\n     */\r\n    async getRequests(sourceLanguage, targetLanguage, sourceArray2d) {\r\n      /** @type {Array<TranslationInfo[]>} */\r\n      const requests = [];\r\n      /** @type {TranslationInfo[]} */\r\n      const currentTranslationsInProgress = [];\r\n\r\n      let currentRequest = [];\r\n      let currentSize = 0;\r\n\r\n      for (const sourceArray of sourceArray2d) {\r\n        const requestString = this.fixString(\r\n          this.cbTransformRequest(sourceArray)\r\n        );\r\n        const requestHash = [\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requestString,\r\n        ].join(\", \");\r\n\r\n        const progressInfo = this.translationsInProgress.get(requestHash);\r\n        if (progressInfo) {\r\n          currentTranslationsInProgress.push(progressInfo);\r\n        } else {\r\n          /** @type {TranslationStatus} */\r\n          let status = \"translating\";\r\n          /** @type {() => void} */\r\n          let promise_resolve = null;\r\n\r\n          /** @type {TranslationInfo} */\r\n          const progressInfo = {\r\n            originalText: requestString,\r\n            translatedText: null,\r\n            detectedLanguage: null,\r\n            get status() {\r\n              return status;\r\n            },\r\n            set status(_status) {\r\n              status = _status;\r\n              promise_resolve();\r\n            },\r\n            waitTranlate: new Promise((resolve) => (promise_resolve = resolve)),\r\n          };\r\n\r\n          currentTranslationsInProgress.push(progressInfo);\r\n          this.translationsInProgress.set(requestHash, progressInfo);\r\n\r\n          //cast\r\n          const cacheEntry = await translationCache.get(\r\n            this.serviceName,\r\n            sourceLanguage,\r\n            targetLanguage,\r\n            requestString\r\n          );\r\n          if (cacheEntry) {\r\n            progressInfo.translatedText = cacheEntry.translatedText;\r\n            progressInfo.detectedLanguage = cacheEntry.detectedLanguage;\r\n            progressInfo.status = \"complete\";\r\n            //this.translationsInProgress.delete([sourceLanguage, targetLanguage, requestString])\r\n          } else {\r\n            currentRequest.push(progressInfo);\r\n            currentSize += progressInfo.originalText.length;\r\n            if (currentSize > 800) {\r\n              requests.push(currentRequest);\r\n              currentSize = 0;\r\n              currentRequest = [];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentRequest.length > 0) {\r\n        requests.push(currentRequest);\r\n        currentRequest = [];\r\n        currentSize = 0;\r\n      }\r\n\r\n      return [requests, currentTranslationsInProgress];\r\n    }\r\n\r\n    /**\r\n     * Makes a request using the *XMLHttpRequest* API. Returns a promise that will be resolved with the result of the request. If the request fails, the promise will be rejected.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<TranslationInfo>} requests\r\n     * @returns {Promise<*>}\r\n     */\r\n    async makeRequest(sourceLanguage, targetLanguage, requests) {\r\n      return await new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\r\n          this.xhrMethod,\r\n          this.baseURL +\r\n            (this.cbGetExtraParameters\r\n              ? this.cbGetExtraParameters(\r\n                  sourceLanguage,\r\n                  targetLanguage,\r\n                  requests\r\n                )\r\n              : \"\")\r\n        );\r\n        xhr.setRequestHeader(\r\n          \"Content-Type\",\r\n          \"application/x-www-form-urlencoded\"\r\n        );\r\n        xhr.responseType = \"json\";\r\n\r\n        xhr.onload = (event) => {\r\n          resolve(xhr.response);\r\n        };\r\n\r\n        xhr.onerror =\r\n          xhr.onabort =\r\n          xhr.ontimeout =\r\n            (event) => {\r\n              console.error(event);\r\n              reject();\r\n            };\r\n\r\n        xhr.send(\r\n          this.cbGetExtraParameters\r\n            ? this.cbGetRequestBody(sourceLanguage, targetLanguage, requests)\r\n            : undefined\r\n        );\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Translates the `sourceArray2d`.\r\n     *\r\n     * If `dontSaveInPersistentCache` is **true** then the translation result will not be saved in the on-disk translation cache, only in the in-memory cache.\r\n     *\r\n     * The `dontSortResults` parameter is only valid when using the ***google*** translation service, if its value is **true** then the translation result will not be sorted.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<string[]>} sourceArray2d\r\n     * @param {boolean} dontSaveInPersistentCache\r\n     * @param {boolean} dontSortResults\r\n     * @returns {Promise<string[][]>}\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache = false,\r\n      dontSortResults = false\r\n    ) {\r\n      const [requests, currentTranslationsInProgress] = await this.getRequests(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d\r\n      );\r\n      /** @type {Promise<void>[]} */\r\n      const promises = [];\r\n\r\n      for (const request of requests) {\r\n        promises.push(\r\n          this.makeRequest(sourceLanguage, targetLanguage, request)\r\n            .then((response) => {\r\n              const results = this.cbParseResponse(response);\r\n              for (const idx in request) {\r\n                const result = results[idx];\r\n                this.cbTransformResponse(result.text, dontSortResults); // apenas para gerar error\r\n                const transInfo = request[idx];\r\n                transInfo.detectedLanguage = result.detectedLanguage || \"und\";\r\n                transInfo.translatedText = result.text;\r\n                transInfo.status = \"complete\";\r\n\r\n                if (\r\n                  dontSaveInPersistentCache === false &&\r\n                  transInfo.translatedText\r\n                ) {\r\n                  translationCache.set(\r\n                    this.serviceName,\r\n                    sourceLanguage,\r\n                    targetLanguage,\r\n                    transInfo.originalText,\r\n                    transInfo.translatedText,\r\n                    transInfo.detectedLanguage\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              console.error(e);\r\n              for (const transInfo of request) {\r\n                transInfo.status = \"error\";\r\n                //this.translationsInProgress.delete([sourceLanguage, targetLanguage, transInfo.originalText])\r\n              }\r\n            })\r\n        );\r\n      }\r\n      await Promise.all(\r\n        currentTranslationsInProgress.map((transInfo) => transInfo.waitTranlate)\r\n      );\r\n      return currentTranslationsInProgress.map((transInfo) =>\r\n        this.cbTransformResponse(transInfo.translatedText, dontSortResults)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * https://github.com/FilipePS/Traduzir-paginas-web/issues/484\r\n     * @param {string} str\r\n     * @returns {string} fixedStr\r\n     */\r\n    fixString(str) {\r\n      return str.replace(/\\u200b/g, \" \");\r\n    }\r\n  }\r\n\r\n  const googleService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"google\",\r\n        \"https://translate.googleapis.com/translate_a/t?anno=3&client=te&v=1.0&format=html\",\r\n        \"POST\",\r\n        function cbTransformRequest(sourceArray) {\r\n          sourceArray = sourceArray.map((text) => Utils.escapeHTML(text));\r\n          if (sourceArray.length > 1) {\r\n            sourceArray = sourceArray.map(\r\n              (text, index) => `<a i=${index}>${text}</a>`\r\n            );\r\n          }\r\n          // the <pre> tag is to preserve the text formating\r\n          return `<pre>${sourceArray.join(\"\")}</pre>`;\r\n        },\r\n        function cbParseResponse(response) {\r\n          /** @type {[Service_Single_Result_Response]} */\r\n          let responseJson;\r\n          if (typeof response === \"string\") {\r\n            responseJson = [{ text: response, detectedLanguage: null }];\r\n          } else if (typeof response[0] === \"string\") {\r\n            responseJson = response.map(\r\n              /** @returns {Service_Single_Result_Response} */ (\r\n                /** @type {string} */ value\r\n              ) => ({ text: value, detectedLanguage: null })\r\n            );\r\n          } else {\r\n            responseJson = response.map(\r\n              /** @returns {Service_Single_Result_Response} */ (\r\n                /** @type {[string, string]} */ value\r\n              ) => ({ text: value[0], detectedLanguage: value[1] })\r\n            );\r\n          }\r\n          return responseJson;\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          // remove the <pre> tag from the response\r\n          if (result.indexOf(\"<pre\") !== -1) {\r\n            result = result.replace(\"</pre>\", \"\");\r\n            const index = result.indexOf(\">\");\r\n            result = result.slice(index + 1);\r\n          }\r\n\r\n          /** @type {string[]} */\r\n          const sentences = []; // each translated sentence is inside of <b> tag\r\n\r\n          // The main objective is to remove the original text of each sentense that is inside the <i> tags.\r\n          // Keeping only the <a> tags\r\n          let idx = 0;\r\n          while (true) {\r\n            // each translated sentence is inside of <b> tag\r\n            const sentenceStartIndex = result.indexOf(\"<b>\", idx);\r\n            if (sentenceStartIndex === -1) break;\r\n\r\n            // the <i> tag is the original text in each sentence\r\n            const sentenceFinalIndex = result.indexOf(\r\n              \"<i>\",\r\n              sentenceStartIndex\r\n            );\r\n\r\n            if (sentenceFinalIndex === -1) {\r\n              sentences.push(result.slice(sentenceStartIndex + 3));\r\n              break;\r\n            } else {\r\n              sentences.push(\r\n                result.slice(sentenceStartIndex + 3, sentenceFinalIndex)\r\n              );\r\n            }\r\n            idx = sentenceFinalIndex;\r\n          }\r\n\r\n          // maybe the response don't have any sentence (does not have <i> and <b> tags), is this case just use de result\r\n          result = sentences.length > 0 ? sentences.join(\" \") : result;\r\n          // Remove the remaining </b> tags (usually the last)\r\n          result = result.replace(/\\<\\/b\\>/g, \"\");\r\n          // Capture each <a i={number}> and put it in an array, the </a> will be ignored\r\n          // maybe the same index appears several times\r\n          // maybe some text will be outside of <a i={number}> (Usually text before the first <a> tag, and some whitespace between the <a> tags),\r\n          // in this case, The outside text will be placed inside the <a i={number}> closer\r\n          // https://github.com/FilipePS/Traduzir-paginas-web/issues/449\r\n          // TODO lidar com tags dentro de tags e tags vazias\r\n          // https://de.wikipedia.org/wiki/Wikipedia:Hauptseite\r\n          // \"{\\\"originalText\\\":\\\"<pre><a i=0>\\\\nFür den </a><a i=1>37. Schreib­wettbewerb</a><a i=2> und den </a><a i=3>18. Miniaturwettbewerb</a><a i=4> können ab sofort Artikel nominiert werden.</a></pre>\\\",\\\"translatedText\\\":\\\"<pre><a i=0>\\\\n</a>Artigos já podem ser indicados <a i=0>para o</a> <a i=1>37º Concurso de Redação <a i=2>e</a></a> <a i=3><a i=4>18º</a> Concurso de Miniaturas</a> .</pre>\\\",\\\"detectedLanguage\\\":\\\"de\\\",\\\"status\\\":\\\"complete\\\",\\\"waitTranlate\\\":{}}\"\r\n          let resultArray = [];\r\n          let lastEndPos = 0;\r\n          for (const r of result.matchAll(\r\n            /(\\<a\\si\\=[0-9]+\\>)([^\\<\\>]*(?=\\<\\/a\\>))*/g\r\n          )) {\r\n            const fullText = r[0];\r\n            const fullLength = r[0].length;\r\n            const pos = r.index;\r\n            // if it is bigger then it has text outside the tags\r\n            if (pos > lastEndPos) {\r\n              const aTag = r[1];\r\n              const insideText = r[2] || \"\";\r\n              const outsideText = result\r\n                .slice(lastEndPos, pos)\r\n                .replace(/\\<\\/a\\>/g, \"\");\r\n              resultArray.push(aTag + outsideText + insideText);\r\n            } else {\r\n              resultArray.push(fullText);\r\n            }\r\n            lastEndPos = pos + fullLength;\r\n          }\r\n          // captures the final text outside the <a> tag\r\n          {\r\n            const lastOutsideText = result\r\n              .slice(lastEndPos)\r\n              .replace(/\\<\\/a\\>/g, \"\");\r\n            if (resultArray.length > 0) {\r\n              resultArray[resultArray.length - 1] += lastOutsideText;\r\n            }\r\n          }\r\n          // this is the old method, don't capture text outside of <a> tags\r\n          // let resultArray = result.match(\r\n          //   /\\<a\\si\\=[0-9]+\\>[^\\<\\>]*(?=\\<\\/a\\>)/g\r\n          // );\r\n\r\n          if (dontSortResults) {\r\n            // Should not sort the <a i={number}> of Google Translate result\r\n            // Instead of it, join the texts without sorting\r\n            // https://github.com/FilipePS/Traduzir-paginas-web/issues/163\r\n\r\n            if (resultArray && resultArray.length > 0) {\r\n              // get the text inside of <a i={number}>\r\n              // the indexes is not needed in this case\r\n              resultArray = resultArray.map((value) => {\r\n                const resultStartAtIndex = value.indexOf(\">\");\r\n                return value.slice(resultStartAtIndex + 1);\r\n              });\r\n            } else {\r\n              // maybe the response don't have any <a i={number}>\r\n              resultArray = [result];\r\n            }\r\n\r\n            // unescapeHTML\r\n            resultArray = resultArray.map((value) => Utils.unescapeHTML(value));\r\n\r\n            return resultArray;\r\n          } else {\r\n            // Sort Google translate results to keep the links with the correct name\r\n            // Note: the links may also disappear; http://web.archive.org/web/20220919162911/https://de.wikipedia.org/wiki/Wikipedia:Hauptseite\r\n            // each inline tag has a index starting with 0 <a i={number}>\r\n            let indexes;\r\n            if (resultArray && resultArray.length > 0) {\r\n              // get the indexed of <a i={number}>\r\n              indexes = resultArray\r\n                .map((value) => parseInt(value.match(/[0-9]+(?=\\>)/g)[0]))\r\n                .filter((value) => !isNaN(value));\r\n              // get the text inside of <a i={number}>\r\n              resultArray = resultArray.map((value) => {\r\n                const resultStartAtIndex = value.indexOf(\">\");\r\n                return value.slice(resultStartAtIndex + 1);\r\n              });\r\n            } else {\r\n              // maybe the response don't have any <a i={number}>\r\n              resultArray = [result];\r\n              indexes = [0];\r\n            }\r\n\r\n            // unescapeHTML\r\n            resultArray = resultArray.map((value) => Utils.unescapeHTML(value));\r\n\r\n            /** @type {string[]} */\r\n            const finalResulArray = [];\r\n            // sorte de results and put in finalResulArray\r\n            for (const j in indexes) {\r\n              if (finalResulArray[indexes[j]]) {\r\n                finalResulArray[indexes[j]] += \" \" + resultArray[j];\r\n              } else {\r\n                finalResulArray[indexes[j]] = resultArray[j];\r\n              }\r\n            }\r\n\r\n            return finalResulArray;\r\n          }\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return `&sl=${sourceLanguage}&tl=${targetLanguage}&tk=${GoogleHelper.calcHash(\r\n            requests.map((info) => info.originalText).join(\"\")\r\n          )}`;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return requests\r\n            .map((info) => `&q=${encodeURIComponent(info.originalText)}`)\r\n            .join(\"\");\r\n        }\r\n      );\r\n    }\r\n  })();\r\n\r\n  const yandexService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"yandex\",\r\n        \"https://translate.yandex.net/api/v1/tr.json/translate?srv=tr-url-widget\",\r\n        \"GET\",\r\n        function cbTransformRequest(sourceArray) {\r\n          return sourceArray\r\n            .map((value) => Utils.escapeHTML(value))\r\n            .join(\"<wbr>\");\r\n        },\r\n        function cbParseResponse(response) {\r\n          const lang = response.lang;\r\n          const detectedLanguage = lang ? lang.split(\"-\")[0] : null;\r\n          return response.text.map(\r\n            /** @return {Service_Single_Result_Response} */ (\r\n              /** @type {string} */ text\r\n            ) => ({ text, detectedLanguage })\r\n          );\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          return result\r\n            .split(\"<wbr>\")\r\n            .map((value) => Utils.unescapeHTML(value));\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return `&id=${YandexHelper.translateSid}-0-0&format=html&lang=${\r\n            sourceLanguage === \"auto\" ? \"\" : sourceLanguage + \"-\"\r\n          }${targetLanguage}${requests\r\n            .map((info) => `&text=${encodeURIComponent(info.originalText)}`)\r\n            .join(\"\")}`;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return undefined;\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} dontSortResults This parameter is not needed in this translation service\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      await YandexHelper.findSID();\r\n      if (!YandexHelper.translateSid) return;\r\n      if (sourceLanguage.startsWith(\"zh\")) sourceLanguage = \"zh\";\r\n      if (targetLanguage.startsWith(\"zh\")) targetLanguage = \"zh\";\r\n      return await super.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults\r\n      );\r\n    }\r\n  })();\r\n\r\n  const bingService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"bing\",\r\n        \"https://www.bing.com/ttranslatev3?isVertical=1\",\r\n        \"POST\",\r\n        function cbTransformRequest(sourceArray) {\r\n          return sourceArray\r\n            .map((value) => Utils.escapeHTML(value))\r\n            .join(\"<wbr>\");\r\n        },\r\n        function cbParseResponse(response) {\r\n          return [\r\n            {\r\n              text: response[0].translations[0].text,\r\n              detectedLanguage: response[0].detectedLanguage.language,\r\n            },\r\n          ];\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          return [Utils.unescapeHTML(result)];\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return `&${BingHelper.translate_IID_IG}`;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return `&fromLang=${sourceLanguage}${requests\r\n            .map((info) => `&text=${encodeURIComponent(info.originalText)}`)\r\n            .join(\"\")}&to=${targetLanguage}${BingHelper.translateSid}`;\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @param {string[][]} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n     * @param {boolean} dontSortResults - This parameter is not needed in this translation service\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      /** @type {{search: string, replace: string}[]} */\r\n      const replacements = [\r\n        {\r\n          search: \"auto\",\r\n          replace: \"auto-detect\",\r\n        },\r\n        {\r\n          search: \"zh-CN\",\r\n          replace: \"zh-Hans\",\r\n        },\r\n        {\r\n          search: \"zh-TW\",\r\n          replace: \"zh-Hant\",\r\n        },\r\n        {\r\n          search: \"tl\",\r\n          replace: \"fil\",\r\n        },\r\n        {\r\n          search: \"hmn\",\r\n          replace: \"mww\",\r\n        },\r\n        {\r\n          search: \"ckb\",\r\n          replace: \"kmr\",\r\n        },\r\n        {\r\n          search: \"mn\",\r\n          replace: \"mn-Cyrl\",\r\n        },\r\n        {\r\n          search: \"no\",\r\n          replace: \"nb\",\r\n        },\r\n        {\r\n          search: \"sr\",\r\n          replace: \"sr-Cyrl\",\r\n        },\r\n      ];\r\n      replacements.forEach((r) => {\r\n        if (targetLanguage === r.search) {\r\n          targetLanguage = r.replace;\r\n        }\r\n        if (sourceLanguage === r.search) {\r\n          sourceLanguage = r.replace;\r\n        }\r\n      });\r\n\r\n      await BingHelper.findSID();\r\n      if (!BingHelper.translate_IID_IG) return;\r\n\r\n      return await super.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults\r\n      );\r\n    }\r\n  })();\r\n\r\n  const deeplService = new (class {\r\n    constructor() {\r\n      this.DeepLTab = null;\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} sourceLanguage - This parameter is not used\r\n     * @param {*} targetLanguage\r\n     * @param {*} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n     * @param {*} dontSaveInPersistentCache - This parameter is not used\r\n     * @param {*} dontSortResults - This parameter is not used\r\n     * @returns\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      return await new Promise((resolve) => {\r\n        const waitFirstTranslationResult = () => {\r\n          const listener = (request, sender, sendResponse) => {\r\n            if (request.action === \"DeepL_firstTranslationResult\") {\r\n              resolve([[request.result]]);\r\n              chrome.runtime.onMessage.removeListener(listener);\r\n            }\r\n          };\r\n          chrome.runtime.onMessage.addListener(listener);\r\n\r\n          setTimeout(() => {\r\n            chrome.runtime.onMessage.removeListener(listener);\r\n            resolve([[\"\"]]);\r\n          }, 8000);\r\n        };\r\n\r\n        if (this.DeepLTab) {\r\n          chrome.tabs.get(this.DeepLTab.id, (tab) => {\r\n            checkedLastError();\r\n            if (tab) {\r\n              //chrome.tabs.update(tab.id, {active: true})\r\n              chrome.tabs.sendMessage(\r\n                tab.id,\r\n                {\r\n                  action: \"translateTextWithDeepL\",\r\n                  text: sourceArray2d[0][0],\r\n                  targetLanguage,\r\n                },\r\n                {\r\n                  frameId: 0,\r\n                },\r\n                (response) => {\r\n                  checkedLastError();\r\n                  resolve([[response]]);\r\n                }\r\n              );\r\n            } else {\r\n              chrome.tabs.create(\r\n                {\r\n                  url: `https://www.deepl.com/#!${targetLanguage}!#${encodeURIComponent(\r\n                    sourceArray2d[0][0]\r\n                  )}`,\r\n                },\r\n                (tab) => {\r\n                  this.DeepLTab = tab;\r\n                  waitFirstTranslationResult();\r\n                }\r\n              );\r\n              // resolve([[\"\"]])\r\n            }\r\n          });\r\n        } else {\r\n          chrome.tabs.create(\r\n            {\r\n              url: `https://www.deepl.com/#!${targetLanguage}!#${encodeURIComponent(\r\n                sourceArray2d[0][0]\r\n              )}`,\r\n            },\r\n            (tab) => {\r\n              this.DeepLTab = tab;\r\n              waitFirstTranslationResult();\r\n            }\r\n          );\r\n          // resolve([[\"\"]])\r\n        }\r\n      });\r\n    }\r\n  })();\r\n\r\n  /** @type {Map<string, Service>} */\r\n  const serviceList = new Map();\r\n\r\n  serviceList.set(\"google\", googleService);\r\n  serviceList.set(\"yandex\", yandexService);\r\n  serviceList.set(\"bing\", bingService);\r\n  serviceList.set(\r\n    \"deepl\",\r\n    /** @type {Service} */ /** @type {?} */ (deeplService)\r\n  );\r\n\r\n  translationService.translateHTML = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    sourceArray2d,\r\n    dontSaveInPersistentCache = false,\r\n    dontSortResults = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      true\r\n    );\r\n    const service = serviceList.get(serviceName) || serviceList.get(\"google\");\r\n    return await service.translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults\r\n    );\r\n  };\r\n\r\n  translationService.translateText = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    sourceArray,\r\n    dontSaveInPersistentCache = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      false\r\n    );\r\n    const service = serviceList.get(serviceName) || serviceList.get(\"google\");\r\n    return (\r\n      await service.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        [sourceArray],\r\n        dontSaveInPersistentCache\r\n      )\r\n    )[0];\r\n  };\r\n\r\n  translationService.translateSingleText = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    originalText,\r\n    dontSaveInPersistentCache = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      false\r\n    );\r\n    const service = serviceList.get(serviceName) || serviceList.get(\"google\");\r\n    return (\r\n      await service.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        [[originalText]],\r\n        dontSaveInPersistentCache\r\n      )\r\n    )[0][0];\r\n  };\r\n\r\n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n    // If the translation request came from an incognito window, the translation should not be cached on disk.\r\n    const dontSaveInPersistentCache = sender.tab ? sender.tab.incognito : false;\r\n    if (request.action === \"translateHTML\") {\r\n      translationService\r\n        .translateHTML(\r\n          request.translationService,\r\n          \"auto\",\r\n          request.targetLanguage,\r\n          request.sourceArray2d,\r\n          dontSaveInPersistentCache,\r\n          request.dontSortResults\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"translateText\") {\r\n      translationService\r\n        .translateText(\r\n          request.translationService,\r\n          \"auto\",\r\n          request.targetLanguage,\r\n          request.sourceArray,\r\n          dontSaveInPersistentCache\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"translateSingleText\") {\r\n      translationService\r\n        .translateSingleText(\r\n          request.translationService,\r\n          \"auto\",\r\n          request.targetLanguage,\r\n          request.source,\r\n          dontSaveInPersistentCache\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"removeTranslationsWithError\") {\r\n      serviceList.forEach((service) => {\r\n        if (service.removeTranslationsWithError) {\r\n          service.removeTranslationsWithError();\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return translationService;\r\n})();\r\n"],"mappings":"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"}