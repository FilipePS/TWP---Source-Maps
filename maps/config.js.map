{"version":3,"file":"../lib/config.js","names":["twpConfig","observers","defaultTargetLanguages","defaultConfig","pageTranslatorService","textTranslatorService","ttsSpeed","enableDeepL","targetLanguage","targetLanguageTextTranslation","targetLanguages","alwaysTranslateSites","neverTranslateSites","sitesToTranslateWhenHovering","langsToTranslateWhenHovering","alwaysTranslateLangs","neverTranslateLangs","customDictionary","Map","showTranslatePageContextMenu","showTranslateSelectedContextMenu","showButtonInTheAddressBar","showOriginalTextWhenHovering","showTranslateSelectedButton","showPopupMobile","useOldPopup","darkMode","popupBlueWhenSiteIsTranslated","popupPanelSection","showReleaseNotes","dontShowIfPageLangIsTargetLang","dontShowIfPageLangIsUnknown","dontShowIfSelectedTextIsTargetLang","dontShowIfSelectedTextIsUnknown","hotkeys","expandPanelTranslateSelectedText","translateTag_pre","dontSortResults","translateDynamicallyCreatedContent","autoTranslateWhenClickingALink","translateSelectedWhenPressTwice","translateTextOverMouseWhenPressTwice","translateClickingOnce","config","structuredClone","onReadyObservers","configIsReady","onReadyResolvePromise","onReadyPromise","Promise","resolve","readyConfig","forEach","callback","onReady","push","get","name","set","value","obj","toObjectOrArrayIfTypeIsMapOrSet","chrome","storage","local","export","r","timeStamp","Date","now","version","runtime","getManifest","key","JSON","stringify","import","configJSON","newconfig","parse","fixObjectType","browser","commands","update","shortcut","reload","restoreToDefault","Object","keys","info","suggested_key","default","onChanged","addListener","changes","areaName","newValue","i18n","getAcceptLanguages","acceptedLanguages","onGot","some","tl","lang","length","twpLang","fixTLanguageCode","indexOf","pop","map","getAll","results","result","e","console","error","addInArray","configName","array","addInMap","removeFromArray","index","splice","removeFromMap","delete","addSiteToTranslateWhenHovering","hostname","removeSiteFromTranslateWhenHovering","addLangToTranslateWhenHovering","removeLangFromTranslateWhenHovering","addSiteToAlwaysTranslate","removeSiteFromAlwaysTranslate","addSiteToNeverTranslate","addKeyWordTocustomDictionary","removeSiteFromNeverTranslate","removeKeyWordFromcustomDictionary","keyWord","addLangToAlwaysTranslate","removeLangFromAlwaysTranslate","addLangToNeverTranslate","removeLangFromNeverTranslate","addTargetLanguage","unshift","setTargetLanguage","forTextToo","setTargetLanguageTextTranslation","entries","Set","fromEntries","Array","from"],"sources":["config.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst twpConfig = (function () {\r\n  /** @type {function[]} */\r\n  const observers = [];\r\n  const defaultTargetLanguages = [\"en\", \"es\", \"de\"];\r\n  /**\r\n   * all configName available\r\n   * @typedef {\"pageTranslatorService\" | \"textTranslatorService\" | \"ttsSpeed\" | \"enableDeepL\" | \"targetLanguage\" | \"targetLanguageTextTranslation\" | \"targetLanguages\" | \"alwaysTranslateSites\" | \"neverTranslateSites\" | \"sitesToTranslateWhenHovering\" | \"langsToTranslateWhenHovering\" | \"alwaysTranslateLangs\" | \"neverTranslateLangs\" | \"customDictionary\" | \"showTranslatePageContextMenu\" | \"showTranslateSelectedContextMenu\" | \"showButtonInTheAddressBar\" | \"showOriginalTextWhenHovering\" | \"showTranslateSelectedButton\" | \"showPopupMobile\" | \"useOldPopup\" | \"darkMode\" | \"popupBlueWhenSiteIsTranslated\" | \"popupPanelSection\" | \"showReleaseNotes\" | \"dontShowIfPageLangIsTargetLang\" | \"dontShowIfPageLangIsUnknown\" | \"dontShowIfSelectedTextIsTargetLang\" | \"dontShowIfSelectedTextIsUnknown\" | \"hotkeys\" | \"expandPanelTranslateSelectedText\" | \"translateTag_pre\" | \"dontSortResults\" | \"translateDynamicallyCreatedContent\" | \"autoTranslateWhenClickingALink\" | \"translateSelectedWhenPressTwice\" | \"translateTextOverMouseWhenPressTwice\" | \"translateClickingOnce\"} DefaultConfigNames\r\n   */\r\n  const defaultConfig = {\r\n    pageTranslatorService: \"google\", // google yandex\r\n    textTranslatorService: \"google\", // google yandex bing deepl\r\n    ttsSpeed: 1.0,\r\n    enableDeepL: \"yes\",\r\n    targetLanguage: null,\r\n    targetLanguageTextTranslation: null,\r\n    targetLanguages: [], // \"en\", \"es\", \"de\"\r\n    alwaysTranslateSites: [],\r\n    neverTranslateSites: [],\r\n    sitesToTranslateWhenHovering: [],\r\n    langsToTranslateWhenHovering: [],\r\n    alwaysTranslateLangs: [],\r\n    neverTranslateLangs: [],\r\n    customDictionary: new Map(),\r\n    showTranslatePageContextMenu: \"yes\",\r\n    showTranslateSelectedContextMenu: \"yes\",\r\n    showButtonInTheAddressBar: \"yes\",\r\n    showOriginalTextWhenHovering: \"no\",\r\n    showTranslateSelectedButton: \"yes\",\r\n    showPopupMobile: \"yes\", // yes no threeFingersOnTheScreen\r\n    useOldPopup: \"yes\",\r\n    darkMode: \"auto\", // auto yes no\r\n    popupBlueWhenSiteIsTranslated: \"yes\",\r\n    popupPanelSection: 1,\r\n    showReleaseNotes: \"yes\",\r\n    dontShowIfPageLangIsTargetLang: \"no\",\r\n    dontShowIfPageLangIsUnknown: \"no\",\r\n    dontShowIfSelectedTextIsTargetLang: \"no\",\r\n    dontShowIfSelectedTextIsUnknown: \"no\",\r\n    hotkeys: {}, // Hotkeys are obtained from the manifest file\r\n    expandPanelTranslateSelectedText: \"no\",\r\n    translateTag_pre: \"yes\",\r\n    dontSortResults: \"no\",\r\n    translateDynamicallyCreatedContent: \"yes\",\r\n    autoTranslateWhenClickingALink: \"no\",\r\n    translateSelectedWhenPressTwice: \"no\",\r\n    translateTextOverMouseWhenPressTwice: \"no\",\r\n    translateClickingOnce: \"no\",\r\n  };\r\n  const config = structuredClone(defaultConfig);\r\n\r\n  let onReadyObservers = [];\r\n  let configIsReady = false;\r\n  let onReadyResolvePromise;\r\n  const onReadyPromise = new Promise(\r\n    (resolve) => (onReadyResolvePromise = resolve)\r\n  );\r\n\r\n  /**\r\n   * this function is executed when de config is ready\r\n   */\r\n  function readyConfig() {\r\n    configIsReady = true;\r\n    onReadyObservers.forEach((callback) => callback());\r\n    onReadyObservers = [];\r\n    onReadyResolvePromise();\r\n  }\r\n\r\n  const twpConfig = {};\r\n\r\n  /**\r\n   * create a listener to run when the settings are ready\r\n   * @param {function} callback\r\n   * @returns {Promise}\r\n   */\r\n  twpConfig.onReady = function (callback) {\r\n    if (callback) {\r\n      if (configIsReady) {\r\n        callback();\r\n      } else {\r\n        onReadyObservers.push(callback);\r\n      }\r\n    }\r\n    return onReadyPromise;\r\n  };\r\n\r\n  /**\r\n   * get the value of a config\r\n   * @example\r\n   * twpConfig.get(\"targetLanguages\")\r\n   * // returns [\"en\", \"es\", \"de\"]\r\n   * @param {DefaultConfigNames} name\r\n   * @returns {*} value\r\n   */\r\n  twpConfig.get = function (name) {\r\n    return config[name];\r\n  };\r\n\r\n  /**\r\n   * set the value of a config\r\n   * @example\r\n   * twpConfig.set(\"showReleaseNotes\", \"no\")\r\n   * @param {DefaultConfigNames} name\r\n   * @param {*} value\r\n   */\r\n  twpConfig.set = function (name, value) {\r\n    // @ts-ignore\r\n    config[name] = value;\r\n    const obj = {};\r\n    obj[name] = toObjectOrArrayIfTypeIsMapOrSet(value);\r\n    chrome.storage.local.set(obj);\r\n    observers.forEach((callback) => callback(name, value));\r\n  };\r\n\r\n  /**\r\n   * export config as JSON string\r\n   * @returns {string} configJSON\r\n   */\r\n  twpConfig.export = function () {\r\n    const r = {\r\n      timeStamp: Date.now(),\r\n      version: chrome.runtime.getManifest().version,\r\n    };\r\n\r\n    for (const key in defaultConfig) {\r\n      //@ts-ignore\r\n      r[key] = toObjectOrArrayIfTypeIsMapOrSet(twpConfig.get(key));\r\n    }\r\n\r\n    return JSON.stringify(r, null, 4);\r\n  };\r\n\r\n  /**\r\n   * import config and reload the extension\r\n   * @param {string} configJSON\r\n   */\r\n  twpConfig.import = function (configJSON) {\r\n    const newconfig = JSON.parse(configJSON);\r\n\r\n    for (const key in defaultConfig) {\r\n      if (typeof newconfig[key] !== \"undefined\") {\r\n        let value = newconfig[key];\r\n        value = fixObjectType(key, value);\r\n        //@ts-ignore\r\n        twpConfig.set(key, value);\r\n      }\r\n    }\r\n\r\n    if (\r\n      typeof browser !== \"undefined\" &&\r\n      typeof browser.commands !== \"undefined\"\r\n    ) {\r\n      for (const name in config.hotkeys) {\r\n        browser.commands.update({\r\n          name: name,\r\n          shortcut: config.hotkeys[name],\r\n        });\r\n      }\r\n    }\r\n\r\n    chrome.runtime.reload();\r\n  };\r\n\r\n  /**\r\n   * restore the config to default and reaload the extension\r\n   */\r\n  twpConfig.restoreToDefault = function () {\r\n    // try to reset the keyboard shortcuts\r\n    if (\r\n      typeof browser !== \"undefined\" &&\r\n      typeof browser.commands !== \"undefined\"\r\n    ) {\r\n      for (const name of Object.keys(\r\n        chrome.runtime.getManifest().commands || {}\r\n      )) {\r\n        const info = chrome.runtime.getManifest().commands[name];\r\n        if (info.suggested_key && info.suggested_key.default) {\r\n          browser.commands.update({\r\n            name: name,\r\n            shortcut: info.suggested_key.default,\r\n          });\r\n        } else {\r\n          browser.commands.update({\r\n            name: name,\r\n            shortcut: \"\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    twpConfig.import(JSON.stringify(defaultConfig));\r\n  };\r\n\r\n  /**\r\n   * create a listener to run when a config changes\r\n   * @param {function} callback\r\n   */\r\n  twpConfig.onChanged = function (callback) {\r\n    observers.push(callback);\r\n  };\r\n\r\n  // listen to storage changes\r\n  chrome.storage.onChanged.addListener((changes, areaName) => {\r\n    twpConfig.onReady(function () {\r\n      if (areaName === \"local\") {\r\n        for (const name in changes) {\r\n          const newValue = changes[name].newValue;\r\n          if (config[name] !== newValue) {\r\n            config[name] = fixObjectType(name, newValue);\r\n            observers.forEach((callback) => callback(name, newValue));\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n\r\n  // load config\r\n  chrome.i18n.getAcceptLanguages((acceptedLanguages) => {\r\n    chrome.storage.local.get(null, (onGot) => {\r\n      // load config; convert object/array to map/set if necessary\r\n      for (const name in onGot) {\r\n        config[name] = fixObjectType(name, onGot[name]);\r\n      }\r\n\r\n      // if there are any targetLanguage undefined, replace them\r\n      if (config.targetLanguages.some((tl) => !tl)) {\r\n        config.targetLanguages = [...defaultTargetLanguages];\r\n        chrome.storage.local.set({\r\n          targetLanguages: config.targetLanguages,\r\n        });\r\n      }\r\n\r\n      // Probably at this point it doesn't have 3 target languages.\r\n\r\n      // try to get the 3 target languages through the user defined languages in the browser configuration.\r\n      for (let lang of acceptedLanguages) {\r\n        if (config.targetLanguages.length >= 3) break;\r\n        lang = twpLang.fixTLanguageCode(lang);\r\n        if (lang && config.targetLanguages.indexOf(lang) === -1) {\r\n          config.targetLanguages.push(lang);\r\n        }\r\n      }\r\n\r\n      // then try to use de array defaultTargetLanguages [\"en\", \"es\", \"de\"]\r\n      for (const lang in defaultTargetLanguages) {\r\n        if (config.targetLanguages.length >= 3) break;\r\n        if (\r\n          config.targetLanguages.indexOf(defaultTargetLanguages[lang]) === -1\r\n        ) {\r\n          config.targetLanguages.push(defaultTargetLanguages[lang]);\r\n        }\r\n      }\r\n\r\n      // if targetLanguages is bigger than 3 remove the surplus\r\n      while (config.targetLanguages.length > 3) config.targetLanguages.pop();\r\n\r\n      /*\r\n      // remove the duplicates languages\r\n      config.targetLanguages = [... new Set(config.targetLanguages)]\r\n      //*\r\n      // then try to use de array defaultTargetLanguages [\"en\", \"es\", \"de\"]\r\n      for (const lang of defaultTargetLanguages) {\r\n        if (config.targetLanguages.length >= 3) break;\r\n        if (config.targetLanguages.indexOf(lang) === -1) {\r\n          config.targetLanguages.push(lang);\r\n        }\r\n      }\r\n      //*/\r\n\r\n      // if targetLanguage does not exits in targetLanguages, then set it to targetLanguages[0]\r\n      if (\r\n        !config.targetLanguage ||\r\n        config.targetLanguages.indexOf(config.targetLanguage) === -1\r\n      ) {\r\n        config.targetLanguage = config.targetLanguages[0];\r\n      }\r\n\r\n      // if targetLanguageTextTranslation does not exits in targetLanguages, then set it to targetLanguages[0]\r\n      if (\r\n        !config.targetLanguageTextTranslation ||\r\n        config.targetLanguages.indexOf(config.targetLanguageTextTranslation) ===\r\n          -1\r\n      ) {\r\n        config.targetLanguageTextTranslation = config.targetLanguages[0];\r\n      }\r\n\r\n      // fix targetLanguages\r\n      config.targetLanguages = config.targetLanguages.map((lang) =>\r\n        twpLang.fixTLanguageCode(lang)\r\n      );\r\n      // fix neverTranslateLangs\r\n      config.neverTranslateLangs = config.neverTranslateLangs.map((lang) =>\r\n        twpLang.fixTLanguageCode(lang)\r\n      );\r\n      // fix alwaysTranslateLangs\r\n      config.alwaysTranslateLangs = config.alwaysTranslateLangs.map((lang) =>\r\n        twpLang.fixTLanguageCode(lang)\r\n      );\r\n      // fix targetLanguage\r\n      config.targetLanguage = twpLang.fixTLanguageCode(config.targetLanguage);\r\n      // fix targetLanguageTextTranslation\r\n      config.targetLanguageTextTranslation = twpLang.fixTLanguageCode(\r\n        config.targetLanguageTextTranslation\r\n      );\r\n\r\n      // if targetLanguage does not exits in targetLanguages, then set it to targetLanguages[0]\r\n      if (config.targetLanguages.indexOf(config.targetLanguage) === -1) {\r\n        config.targetLanguage = config.targetLanguages[0];\r\n      }\r\n      // if targetLanguageTextTranslation does not exits in targetLanguages, then set it to targetLanguages[0]\r\n      if (\r\n        config.targetLanguages.indexOf(config.targetLanguageTextTranslation) ===\r\n        -1\r\n      ) {\r\n        config.targetLanguageTextTranslation = config.targetLanguages[0];\r\n      }\r\n\r\n      // try to save de keyboard shortcuts in the config\r\n      if (typeof chrome.commands !== \"undefined\") {\r\n        chrome.commands.getAll((results) => {\r\n          try {\r\n            for (const result of results) {\r\n              config.hotkeys[result.name] = result.shortcut;\r\n            }\r\n            twpConfig.set(\"hotkeys\", config.hotkeys);\r\n          } catch (e) {\r\n            console.error(e);\r\n          } finally {\r\n            readyConfig();\r\n          }\r\n        });\r\n      } else {\r\n        readyConfig();\r\n      }\r\n    });\r\n  });\r\n\r\n  function addInArray(configName, value) {\r\n    const array = twpConfig.get(configName);\r\n    if (array.indexOf(value) === -1) {\r\n      array.push(value);\r\n      twpConfig.set(configName, array);\r\n    }\r\n  }\r\n\r\n  function addInMap(configName, key, value) {\r\n    let map = twpConfig.get(configName);\r\n    if (typeof map.get(key) === \"undefined\") {\r\n      map.set(key, value);\r\n      twpConfig.set(configName, map);\r\n    }\r\n  }\r\n\r\n  function removeFromArray(configName, value) {\r\n    const array = twpConfig.get(configName);\r\n    const index = array.indexOf(value);\r\n    if (index > -1) {\r\n      array.splice(index, 1);\r\n      twpConfig.set(configName, array);\r\n    }\r\n  }\r\n\r\n  function removeFromMap(configName, key) {\r\n    const map = twpConfig.get(configName);\r\n    if (typeof map.get(key) !== \"undefined\") {\r\n      map.delete(key);\r\n      twpConfig.set(configName, map);\r\n    }\r\n  }\r\n\r\n  twpConfig.addSiteToTranslateWhenHovering = function (hostname) {\r\n    addInArray(\"sitesToTranslateWhenHovering\", hostname);\r\n  };\r\n\r\n  twpConfig.removeSiteFromTranslateWhenHovering = function (hostname) {\r\n    removeFromArray(\"sitesToTranslateWhenHovering\", hostname);\r\n  };\r\n\r\n  twpConfig.addLangToTranslateWhenHovering = function (lang) {\r\n    addInArray(\"langsToTranslateWhenHovering\", lang);\r\n  };\r\n\r\n  twpConfig.removeLangFromTranslateWhenHovering = function (lang) {\r\n    removeFromArray(\"langsToTranslateWhenHovering\", lang);\r\n  };\r\n\r\n  twpConfig.addSiteToAlwaysTranslate = function (hostname) {\r\n    addInArray(\"alwaysTranslateSites\", hostname);\r\n    removeFromArray(\"neverTranslateSites\", hostname);\r\n  };\r\n  twpConfig.removeSiteFromAlwaysTranslate = function (hostname) {\r\n    removeFromArray(\"alwaysTranslateSites\", hostname);\r\n  };\r\n  twpConfig.addSiteToNeverTranslate = function (hostname) {\r\n    addInArray(\"neverTranslateSites\", hostname);\r\n    removeFromArray(\"alwaysTranslateSites\", hostname);\r\n    removeFromArray(\"sitesToTranslateWhenHovering\", hostname);\r\n  };\r\n  twpConfig.addKeyWordTocustomDictionary = function (key, value) {\r\n    addInMap(\"customDictionary\", key, value);\r\n  };\r\n  twpConfig.removeSiteFromNeverTranslate = function (hostname) {\r\n    removeFromArray(\"neverTranslateSites\", hostname);\r\n  };\r\n  twpConfig.removeKeyWordFromcustomDictionary = function (keyWord) {\r\n    removeFromMap(\"customDictionary\", keyWord);\r\n  };\r\n  twpConfig.addLangToAlwaysTranslate = function (lang, hostname) {\r\n    addInArray(\"alwaysTranslateLangs\", lang);\r\n    removeFromArray(\"neverTranslateLangs\", lang);\r\n\r\n    if (hostname) {\r\n      removeFromArray(\"neverTranslateSites\", hostname);\r\n    }\r\n  };\r\n  twpConfig.removeLangFromAlwaysTranslate = function (lang) {\r\n    removeFromArray(\"alwaysTranslateLangs\", lang);\r\n  };\r\n  twpConfig.addLangToNeverTranslate = function (lang, hostname) {\r\n    addInArray(\"neverTranslateLangs\", lang);\r\n    removeFromArray(\"alwaysTranslateLangs\", lang);\r\n    removeFromArray(\"langsToTranslateWhenHovering\", lang);\r\n\r\n    if (hostname) {\r\n      removeFromArray(\"alwaysTranslateSites\", hostname);\r\n    }\r\n  };\r\n  twpConfig.removeLangFromNeverTranslate = function (lang) {\r\n    removeFromArray(\"neverTranslateLangs\", lang);\r\n  };\r\n\r\n  /**\r\n   * Add a new lang to the targetLanguages and remove the last target language. If the language is already in the targetLanguages then move it to the first position\r\n   * @example\r\n   * addTargetLanguage(\"de\")\r\n   * @param {string} lang - langCode\r\n   * @returns\r\n   */\r\n  function addTargetLanguage(lang) {\r\n    const targetLanguages = twpConfig.get(\"targetLanguages\");\r\n    lang = twpLang.fixTLanguageCode(lang);\r\n    if (!lang) return;\r\n\r\n    const index = targetLanguages.indexOf(lang);\r\n    if (index === -1) {\r\n      targetLanguages.unshift(lang);\r\n      targetLanguages.pop();\r\n    } else {\r\n      targetLanguages.splice(index, 1);\r\n      targetLanguages.unshift(lang);\r\n    }\r\n\r\n    twpConfig.set(\"targetLanguages\", targetLanguages);\r\n  }\r\n\r\n  /**\r\n   * set lang as target language for page translation only (not text translation)\r\n   *\r\n   * if the lang in not in targetLanguages then call addTargetLanguage\r\n   * @example\r\n   * twpConfig.setTargetLanguage(\"de\",  true)\r\n   * @param {string} lang - langCode\r\n   * @param {boolean} forTextToo - also call setTargetLanguageTextTranslation\r\n   * @returns\r\n   */\r\n  twpConfig.setTargetLanguage = function (lang, forTextToo = false) {\r\n    const targetLanguages = twpConfig.get(\"targetLanguages\");\r\n    lang = twpLang.fixTLanguageCode(lang);\r\n    if (!lang) return;\r\n\r\n    if (targetLanguages.indexOf(lang) === -1 || forTextToo) {\r\n      addTargetLanguage(lang);\r\n    }\r\n\r\n    twpConfig.set(\"targetLanguage\", lang);\r\n\r\n    if (forTextToo) {\r\n      twpConfig.setTargetLanguageTextTranslation(lang);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * set lang as target language for text translation only (not page translation)\r\n   * @example\r\n   * twpConfig.setTargetLanguage(\"de\")\r\n   * @param {string} lang - langCode\r\n   * @returns\r\n   */\r\n  twpConfig.setTargetLanguageTextTranslation = function (lang) {\r\n    lang = twpLang.fixTLanguageCode(lang);\r\n    if (!lang) return;\r\n\r\n    twpConfig.set(\"targetLanguageTextTranslation\", lang);\r\n  };\r\n\r\n  /**\r\n   * convert object to map or set if necessary, otherwise return the value itself\r\n   * @example\r\n   * fixObjectType(\"customDictionary\", {})\r\n   * // returns Map\r\n   * fixObjectType(\"targetLanguages\", [\"en\", \"es\", \"de\"])\r\n   * // return [\"en\", \"es\", \"de\"] -- Array\r\n   * @param {string} key\r\n   * @param {*} value\r\n   * @returns {Map | Set | *}\r\n   */\r\n  function fixObjectType(key, value) {\r\n    if (defaultConfig[key] instanceof Map) {\r\n      return new Map(Object.entries(value));\r\n    } else if (defaultConfig[key] instanceof Set) {\r\n      return new Set(value);\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * convert map and set to object and array respectively, otherwise return the value itself\r\n   * @example\r\n   * toObjectOrArrayIfTypeIsMapOrSet(new Map())\r\n   * // returns {}\r\n   * toObjectOrArrayIfTypeIsMapOrSet({})\r\n   * // returns {}\r\n   * @param {Map | Set | *} value\r\n   * @returns {Object | Array | *}\r\n   */\r\n  function toObjectOrArrayIfTypeIsMapOrSet(value) {\r\n    if (value instanceof Map) {\r\n      return Object.fromEntries(value);\r\n    } else if (value instanceof Set) {\r\n      return Array.from(value);\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  return twpConfig;\r\n})();\r\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAI,YAAY;EAC7B;EACA,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,sBAAsB,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EACjD;AACF;AACA;AACA;EACE,MAAMC,aAAa,GAAG;IACpBC,qBAAqB,EAAE,QAAQ;IAAE;IACjCC,qBAAqB,EAAE,QAAQ;IAAE;IACjCC,QAAQ,EAAE,GAAG;IACbC,WAAW,EAAE,KAAK;IAClBC,cAAc,EAAE,IAAI;IACpBC,6BAA6B,EAAE,IAAI;IACnCC,eAAe,EAAE,EAAE;IAAE;IACrBC,oBAAoB,EAAE,EAAE;IACxBC,mBAAmB,EAAE,EAAE;IACvBC,4BAA4B,EAAE,EAAE;IAChCC,4BAA4B,EAAE,EAAE;IAChCC,oBAAoB,EAAE,EAAE;IACxBC,mBAAmB,EAAE,EAAE;IACvBC,gBAAgB,EAAE,IAAIC,GAAG,EAAE;IAC3BC,4BAA4B,EAAE,KAAK;IACnCC,gCAAgC,EAAE,KAAK;IACvCC,yBAAyB,EAAE,KAAK;IAChCC,4BAA4B,EAAE,IAAI;IAClCC,2BAA2B,EAAE,KAAK;IAClCC,eAAe,EAAE,KAAK;IAAE;IACxBC,WAAW,EAAE,KAAK;IAClBC,QAAQ,EAAE,MAAM;IAAE;IAClBC,6BAA6B,EAAE,KAAK;IACpCC,iBAAiB,EAAE,CAAC;IACpBC,gBAAgB,EAAE,KAAK;IACvBC,8BAA8B,EAAE,IAAI;IACpCC,2BAA2B,EAAE,IAAI;IACjCC,kCAAkC,EAAE,IAAI;IACxCC,+BAA+B,EAAE,IAAI;IACrCC,OAAO,EAAE,CAAC,CAAC;IAAE;IACbC,gCAAgC,EAAE,IAAI;IACtCC,gBAAgB,EAAE,KAAK;IACvBC,eAAe,EAAE,IAAI;IACrBC,kCAAkC,EAAE,KAAK;IACzCC,8BAA8B,EAAE,IAAI;IACpCC,+BAA+B,EAAE,IAAI;IACrCC,oCAAoC,EAAE,IAAI;IAC1CC,qBAAqB,EAAE;EACzB,CAAC;EACD,MAAMC,MAAM,GAAGC,eAAe,CAACzC,aAAa,CAAC;EAE7C,IAAI0C,gBAAgB,GAAG,EAAE;EACzB,IAAIC,aAAa,GAAG,KAAK;EACzB,IAAIC,qBAAqB;EACzB,MAAMC,cAAc,GAAG,IAAIC,OAAO,CAC/BC,OAAO,IAAMH,qBAAqB,GAAGG,OAAQ,CAC/C;;EAED;AACF;AACA;EACE,SAASC,WAAW,GAAG;IACrBL,aAAa,GAAG,IAAI;IACpBD,gBAAgB,CAACO,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,EAAE,CAAC;IAClDR,gBAAgB,GAAG,EAAE;IACrBE,qBAAqB,EAAE;EACzB;EAEA,MAAM/C,SAAS,GAAG,CAAC,CAAC;;EAEpB;AACF;AACA;AACA;AACA;EACEA,SAAS,CAACsD,OAAO,GAAG,UAAUD,QAAQ,EAAE;IACtC,IAAIA,QAAQ,EAAE;MACZ,IAAIP,aAAa,EAAE;QACjBO,QAAQ,EAAE;MACZ,CAAC,MAAM;QACLR,gBAAgB,CAACU,IAAI,CAACF,QAAQ,CAAC;MACjC;IACF;IACA,OAAOL,cAAc;EACvB,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACEhD,SAAS,CAACwD,GAAG,GAAG,UAAUC,IAAI,EAAE;IAC9B,OAAOd,MAAM,CAACc,IAAI,CAAC;EACrB,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEzD,SAAS,CAAC0D,GAAG,GAAG,UAAUD,IAAI,EAAEE,KAAK,EAAE;IACrC;IACAhB,MAAM,CAACc,IAAI,CAAC,GAAGE,KAAK;IACpB,MAAMC,GAAG,GAAG,CAAC,CAAC;IACdA,GAAG,CAACH,IAAI,CAAC,GAAGI,+BAA+B,CAACF,KAAK,CAAC;IAClDG,MAAM,CAACC,OAAO,CAACC,KAAK,CAACN,GAAG,CAACE,GAAG,CAAC;IAC7B3D,SAAS,CAACmD,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,CAACI,IAAI,EAAEE,KAAK,CAAC,CAAC;EACxD,CAAC;;EAED;AACF;AACA;AACA;EACE3D,SAAS,CAACiE,MAAM,GAAG,YAAY;IAC7B,MAAMC,CAAC,GAAG;MACRC,SAAS,EAAEC,IAAI,CAACC,GAAG,EAAE;MACrBC,OAAO,EAAER,MAAM,CAACS,OAAO,CAACC,WAAW,EAAE,CAACF;IACxC,CAAC;IAED,KAAK,MAAMG,GAAG,IAAItE,aAAa,EAAE;MAC/B;MACA+D,CAAC,CAACO,GAAG,CAAC,GAAGZ,+BAA+B,CAAC7D,SAAS,CAACwD,GAAG,CAACiB,GAAG,CAAC,CAAC;IAC9D;IAEA,OAAOC,IAAI,CAACC,SAAS,CAACT,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;EACnC,CAAC;;EAED;AACF;AACA;AACA;EACElE,SAAS,CAAC4E,MAAM,GAAG,UAAUC,UAAU,EAAE;IACvC,MAAMC,SAAS,GAAGJ,IAAI,CAACK,KAAK,CAACF,UAAU,CAAC;IAExC,KAAK,MAAMJ,GAAG,IAAItE,aAAa,EAAE;MAC/B,IAAI,OAAO2E,SAAS,CAACL,GAAG,CAAC,KAAK,WAAW,EAAE;QACzC,IAAId,KAAK,GAAGmB,SAAS,CAACL,GAAG,CAAC;QAC1Bd,KAAK,GAAGqB,aAAa,CAACP,GAAG,EAAEd,KAAK,CAAC;QACjC;QACA3D,SAAS,CAAC0D,GAAG,CAACe,GAAG,EAAEd,KAAK,CAAC;MAC3B;IACF;IAEA,IACE,OAAOsB,OAAO,KAAK,WAAW,IAC9B,OAAOA,OAAO,CAACC,QAAQ,KAAK,WAAW,EACvC;MACA,KAAK,MAAMzB,IAAI,IAAId,MAAM,CAACT,OAAO,EAAE;QACjC+C,OAAO,CAACC,QAAQ,CAACC,MAAM,CAAC;UACtB1B,IAAI,EAAEA,IAAI;UACV2B,QAAQ,EAAEzC,MAAM,CAACT,OAAO,CAACuB,IAAI;QAC/B,CAAC,CAAC;MACJ;IACF;IAEAK,MAAM,CAACS,OAAO,CAACc,MAAM,EAAE;EACzB,CAAC;;EAED;AACF;AACA;EACErF,SAAS,CAACsF,gBAAgB,GAAG,YAAY;IACvC;IACA,IACE,OAAOL,OAAO,KAAK,WAAW,IAC9B,OAAOA,OAAO,CAACC,QAAQ,KAAK,WAAW,EACvC;MACA,KAAK,MAAMzB,IAAI,IAAI8B,MAAM,CAACC,IAAI,CAC5B1B,MAAM,CAACS,OAAO,CAACC,WAAW,EAAE,CAACU,QAAQ,IAAI,CAAC,CAAC,CAC5C,EAAE;QACD,MAAMO,IAAI,GAAG3B,MAAM,CAACS,OAAO,CAACC,WAAW,EAAE,CAACU,QAAQ,CAACzB,IAAI,CAAC;QACxD,IAAIgC,IAAI,CAACC,aAAa,IAAID,IAAI,CAACC,aAAa,CAACC,OAAO,EAAE;UACpDV,OAAO,CAACC,QAAQ,CAACC,MAAM,CAAC;YACtB1B,IAAI,EAAEA,IAAI;YACV2B,QAAQ,EAAEK,IAAI,CAACC,aAAa,CAACC;UAC/B,CAAC,CAAC;QACJ,CAAC,MAAM;UACLV,OAAO,CAACC,QAAQ,CAACC,MAAM,CAAC;YACtB1B,IAAI,EAAEA,IAAI;YACV2B,QAAQ,EAAE;UACZ,CAAC,CAAC;QACJ;MACF;IACF;IAEApF,SAAS,CAAC4E,MAAM,CAACF,IAAI,CAACC,SAAS,CAACxE,aAAa,CAAC,CAAC;EACjD,CAAC;;EAED;AACF;AACA;AACA;EACEH,SAAS,CAAC4F,SAAS,GAAG,UAAUvC,QAAQ,EAAE;IACxCpD,SAAS,CAACsD,IAAI,CAACF,QAAQ,CAAC;EAC1B,CAAC;;EAED;EACAS,MAAM,CAACC,OAAO,CAAC6B,SAAS,CAACC,WAAW,CAAC,CAACC,OAAO,EAAEC,QAAQ,KAAK;IAC1D/F,SAAS,CAACsD,OAAO,CAAC,YAAY;MAC5B,IAAIyC,QAAQ,KAAK,OAAO,EAAE;QACxB,KAAK,MAAMtC,IAAI,IAAIqC,OAAO,EAAE;UAC1B,MAAME,QAAQ,GAAGF,OAAO,CAACrC,IAAI,CAAC,CAACuC,QAAQ;UACvC,IAAIrD,MAAM,CAACc,IAAI,CAAC,KAAKuC,QAAQ,EAAE;YAC7BrD,MAAM,CAACc,IAAI,CAAC,GAAGuB,aAAa,CAACvB,IAAI,EAAEuC,QAAQ,CAAC;YAC5C/F,SAAS,CAACmD,OAAO,CAAEC,QAAQ,IAAKA,QAAQ,CAACI,IAAI,EAAEuC,QAAQ,CAAC,CAAC;UAC3D;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;EACAlC,MAAM,CAACmC,IAAI,CAACC,kBAAkB,CAAEC,iBAAiB,IAAK;IACpDrC,MAAM,CAACC,OAAO,CAACC,KAAK,CAACR,GAAG,CAAC,IAAI,EAAG4C,KAAK,IAAK;MACxC;MACA,KAAK,MAAM3C,IAAI,IAAI2C,KAAK,EAAE;QACxBzD,MAAM,CAACc,IAAI,CAAC,GAAGuB,aAAa,CAACvB,IAAI,EAAE2C,KAAK,CAAC3C,IAAI,CAAC,CAAC;MACjD;;MAEA;MACA,IAAId,MAAM,CAACjC,eAAe,CAAC2F,IAAI,CAAEC,EAAE,IAAK,CAACA,EAAE,CAAC,EAAE;QAC5C3D,MAAM,CAACjC,eAAe,GAAG,CAAC,GAAGR,sBAAsB,CAAC;QACpD4D,MAAM,CAACC,OAAO,CAACC,KAAK,CAACN,GAAG,CAAC;UACvBhD,eAAe,EAAEiC,MAAM,CAACjC;QAC1B,CAAC,CAAC;MACJ;;MAEA;;MAEA;MACA,KAAK,IAAI6F,IAAI,IAAIJ,iBAAiB,EAAE;QAClC,IAAIxD,MAAM,CAACjC,eAAe,CAAC8F,MAAM,IAAI,CAAC,EAAE;QACxCD,IAAI,GAAGE,OAAO,CAACC,gBAAgB,CAACH,IAAI,CAAC;QACrC,IAAIA,IAAI,IAAI5D,MAAM,CAACjC,eAAe,CAACiG,OAAO,CAACJ,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;UACvD5D,MAAM,CAACjC,eAAe,CAAC6C,IAAI,CAACgD,IAAI,CAAC;QACnC;MACF;;MAEA;MACA,KAAK,MAAMA,IAAI,IAAIrG,sBAAsB,EAAE;QACzC,IAAIyC,MAAM,CAACjC,eAAe,CAAC8F,MAAM,IAAI,CAAC,EAAE;QACxC,IACE7D,MAAM,CAACjC,eAAe,CAACiG,OAAO,CAACzG,sBAAsB,CAACqG,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EACnE;UACA5D,MAAM,CAACjC,eAAe,CAAC6C,IAAI,CAACrD,sBAAsB,CAACqG,IAAI,CAAC,CAAC;QAC3D;MACF;;MAEA;MACA,OAAO5D,MAAM,CAACjC,eAAe,CAAC8F,MAAM,GAAG,CAAC,EAAE7D,MAAM,CAACjC,eAAe,CAACkG,GAAG,EAAE;;MAEtE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEM;MACA,IACE,CAACjE,MAAM,CAACnC,cAAc,IACtBmC,MAAM,CAACjC,eAAe,CAACiG,OAAO,CAAChE,MAAM,CAACnC,cAAc,CAAC,KAAK,CAAC,CAAC,EAC5D;QACAmC,MAAM,CAACnC,cAAc,GAAGmC,MAAM,CAACjC,eAAe,CAAC,CAAC,CAAC;MACnD;;MAEA;MACA,IACE,CAACiC,MAAM,CAAClC,6BAA6B,IACrCkC,MAAM,CAACjC,eAAe,CAACiG,OAAO,CAAChE,MAAM,CAAClC,6BAA6B,CAAC,KAClE,CAAC,CAAC,EACJ;QACAkC,MAAM,CAAClC,6BAA6B,GAAGkC,MAAM,CAACjC,eAAe,CAAC,CAAC,CAAC;MAClE;;MAEA;MACAiC,MAAM,CAACjC,eAAe,GAAGiC,MAAM,CAACjC,eAAe,CAACmG,GAAG,CAAEN,IAAI,IACvDE,OAAO,CAACC,gBAAgB,CAACH,IAAI,CAAC,CAC/B;MACD;MACA5D,MAAM,CAAC3B,mBAAmB,GAAG2B,MAAM,CAAC3B,mBAAmB,CAAC6F,GAAG,CAAEN,IAAI,IAC/DE,OAAO,CAACC,gBAAgB,CAACH,IAAI,CAAC,CAC/B;MACD;MACA5D,MAAM,CAAC5B,oBAAoB,GAAG4B,MAAM,CAAC5B,oBAAoB,CAAC8F,GAAG,CAAEN,IAAI,IACjEE,OAAO,CAACC,gBAAgB,CAACH,IAAI,CAAC,CAC/B;MACD;MACA5D,MAAM,CAACnC,cAAc,GAAGiG,OAAO,CAACC,gBAAgB,CAAC/D,MAAM,CAACnC,cAAc,CAAC;MACvE;MACAmC,MAAM,CAAClC,6BAA6B,GAAGgG,OAAO,CAACC,gBAAgB,CAC7D/D,MAAM,CAAClC,6BAA6B,CACrC;;MAED;MACA,IAAIkC,MAAM,CAACjC,eAAe,CAACiG,OAAO,CAAChE,MAAM,CAACnC,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;QAChEmC,MAAM,CAACnC,cAAc,GAAGmC,MAAM,CAACjC,eAAe,CAAC,CAAC,CAAC;MACnD;MACA;MACA,IACEiC,MAAM,CAACjC,eAAe,CAACiG,OAAO,CAAChE,MAAM,CAAClC,6BAA6B,CAAC,KACpE,CAAC,CAAC,EACF;QACAkC,MAAM,CAAClC,6BAA6B,GAAGkC,MAAM,CAACjC,eAAe,CAAC,CAAC,CAAC;MAClE;;MAEA;MACA,IAAI,OAAOoD,MAAM,CAACoB,QAAQ,KAAK,WAAW,EAAE;QAC1CpB,MAAM,CAACoB,QAAQ,CAAC4B,MAAM,CAAEC,OAAO,IAAK;UAClC,IAAI;YACF,KAAK,MAAMC,MAAM,IAAID,OAAO,EAAE;cAC5BpE,MAAM,CAACT,OAAO,CAAC8E,MAAM,CAACvD,IAAI,CAAC,GAAGuD,MAAM,CAAC5B,QAAQ;YAC/C;YACApF,SAAS,CAAC0D,GAAG,CAAC,SAAS,EAAEf,MAAM,CAACT,OAAO,CAAC;UAC1C,CAAC,CAAC,OAAO+E,CAAC,EAAE;YACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;UAClB,CAAC,SAAS;YACR9D,WAAW,EAAE;UACf;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLA,WAAW,EAAE;MACf;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,SAASiE,UAAU,CAACC,UAAU,EAAE1D,KAAK,EAAE;IACrC,MAAM2D,KAAK,GAAGtH,SAAS,CAACwD,GAAG,CAAC6D,UAAU,CAAC;IACvC,IAAIC,KAAK,CAACX,OAAO,CAAChD,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MAC/B2D,KAAK,CAAC/D,IAAI,CAACI,KAAK,CAAC;MACjB3D,SAAS,CAAC0D,GAAG,CAAC2D,UAAU,EAAEC,KAAK,CAAC;IAClC;EACF;EAEA,SAASC,QAAQ,CAACF,UAAU,EAAE5C,GAAG,EAAEd,KAAK,EAAE;IACxC,IAAIkD,GAAG,GAAG7G,SAAS,CAACwD,GAAG,CAAC6D,UAAU,CAAC;IACnC,IAAI,OAAOR,GAAG,CAACrD,GAAG,CAACiB,GAAG,CAAC,KAAK,WAAW,EAAE;MACvCoC,GAAG,CAACnD,GAAG,CAACe,GAAG,EAAEd,KAAK,CAAC;MACnB3D,SAAS,CAAC0D,GAAG,CAAC2D,UAAU,EAAER,GAAG,CAAC;IAChC;EACF;EAEA,SAASW,eAAe,CAACH,UAAU,EAAE1D,KAAK,EAAE;IAC1C,MAAM2D,KAAK,GAAGtH,SAAS,CAACwD,GAAG,CAAC6D,UAAU,CAAC;IACvC,MAAMI,KAAK,GAAGH,KAAK,CAACX,OAAO,CAAChD,KAAK,CAAC;IAClC,IAAI8D,KAAK,GAAG,CAAC,CAAC,EAAE;MACdH,KAAK,CAACI,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MACtBzH,SAAS,CAAC0D,GAAG,CAAC2D,UAAU,EAAEC,KAAK,CAAC;IAClC;EACF;EAEA,SAASK,aAAa,CAACN,UAAU,EAAE5C,GAAG,EAAE;IACtC,MAAMoC,GAAG,GAAG7G,SAAS,CAACwD,GAAG,CAAC6D,UAAU,CAAC;IACrC,IAAI,OAAOR,GAAG,CAACrD,GAAG,CAACiB,GAAG,CAAC,KAAK,WAAW,EAAE;MACvCoC,GAAG,CAACe,MAAM,CAACnD,GAAG,CAAC;MACfzE,SAAS,CAAC0D,GAAG,CAAC2D,UAAU,EAAER,GAAG,CAAC;IAChC;EACF;EAEA7G,SAAS,CAAC6H,8BAA8B,GAAG,UAAUC,QAAQ,EAAE;IAC7DV,UAAU,CAAC,8BAA8B,EAAEU,QAAQ,CAAC;EACtD,CAAC;EAED9H,SAAS,CAAC+H,mCAAmC,GAAG,UAAUD,QAAQ,EAAE;IAClEN,eAAe,CAAC,8BAA8B,EAAEM,QAAQ,CAAC;EAC3D,CAAC;EAED9H,SAAS,CAACgI,8BAA8B,GAAG,UAAUzB,IAAI,EAAE;IACzDa,UAAU,CAAC,8BAA8B,EAAEb,IAAI,CAAC;EAClD,CAAC;EAEDvG,SAAS,CAACiI,mCAAmC,GAAG,UAAU1B,IAAI,EAAE;IAC9DiB,eAAe,CAAC,8BAA8B,EAAEjB,IAAI,CAAC;EACvD,CAAC;EAEDvG,SAAS,CAACkI,wBAAwB,GAAG,UAAUJ,QAAQ,EAAE;IACvDV,UAAU,CAAC,sBAAsB,EAAEU,QAAQ,CAAC;IAC5CN,eAAe,CAAC,qBAAqB,EAAEM,QAAQ,CAAC;EAClD,CAAC;EACD9H,SAAS,CAACmI,6BAA6B,GAAG,UAAUL,QAAQ,EAAE;IAC5DN,eAAe,CAAC,sBAAsB,EAAEM,QAAQ,CAAC;EACnD,CAAC;EACD9H,SAAS,CAACoI,uBAAuB,GAAG,UAAUN,QAAQ,EAAE;IACtDV,UAAU,CAAC,qBAAqB,EAAEU,QAAQ,CAAC;IAC3CN,eAAe,CAAC,sBAAsB,EAAEM,QAAQ,CAAC;IACjDN,eAAe,CAAC,8BAA8B,EAAEM,QAAQ,CAAC;EAC3D,CAAC;EACD9H,SAAS,CAACqI,4BAA4B,GAAG,UAAU5D,GAAG,EAAEd,KAAK,EAAE;IAC7D4D,QAAQ,CAAC,kBAAkB,EAAE9C,GAAG,EAAEd,KAAK,CAAC;EAC1C,CAAC;EACD3D,SAAS,CAACsI,4BAA4B,GAAG,UAAUR,QAAQ,EAAE;IAC3DN,eAAe,CAAC,qBAAqB,EAAEM,QAAQ,CAAC;EAClD,CAAC;EACD9H,SAAS,CAACuI,iCAAiC,GAAG,UAAUC,OAAO,EAAE;IAC/Db,aAAa,CAAC,kBAAkB,EAAEa,OAAO,CAAC;EAC5C,CAAC;EACDxI,SAAS,CAACyI,wBAAwB,GAAG,UAAUlC,IAAI,EAAEuB,QAAQ,EAAE;IAC7DV,UAAU,CAAC,sBAAsB,EAAEb,IAAI,CAAC;IACxCiB,eAAe,CAAC,qBAAqB,EAAEjB,IAAI,CAAC;IAE5C,IAAIuB,QAAQ,EAAE;MACZN,eAAe,CAAC,qBAAqB,EAAEM,QAAQ,CAAC;IAClD;EACF,CAAC;EACD9H,SAAS,CAAC0I,6BAA6B,GAAG,UAAUnC,IAAI,EAAE;IACxDiB,eAAe,CAAC,sBAAsB,EAAEjB,IAAI,CAAC;EAC/C,CAAC;EACDvG,SAAS,CAAC2I,uBAAuB,GAAG,UAAUpC,IAAI,EAAEuB,QAAQ,EAAE;IAC5DV,UAAU,CAAC,qBAAqB,EAAEb,IAAI,CAAC;IACvCiB,eAAe,CAAC,sBAAsB,EAAEjB,IAAI,CAAC;IAC7CiB,eAAe,CAAC,8BAA8B,EAAEjB,IAAI,CAAC;IAErD,IAAIuB,QAAQ,EAAE;MACZN,eAAe,CAAC,sBAAsB,EAAEM,QAAQ,CAAC;IACnD;EACF,CAAC;EACD9H,SAAS,CAAC4I,4BAA4B,GAAG,UAAUrC,IAAI,EAAE;IACvDiB,eAAe,CAAC,qBAAqB,EAAEjB,IAAI,CAAC;EAC9C,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACE,SAASsC,iBAAiB,CAACtC,IAAI,EAAE;IAC/B,MAAM7F,eAAe,GAAGV,SAAS,CAACwD,GAAG,CAAC,iBAAiB,CAAC;IACxD+C,IAAI,GAAGE,OAAO,CAACC,gBAAgB,CAACH,IAAI,CAAC;IACrC,IAAI,CAACA,IAAI,EAAE;IAEX,MAAMkB,KAAK,GAAG/G,eAAe,CAACiG,OAAO,CAACJ,IAAI,CAAC;IAC3C,IAAIkB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB/G,eAAe,CAACoI,OAAO,CAACvC,IAAI,CAAC;MAC7B7F,eAAe,CAACkG,GAAG,EAAE;IACvB,CAAC,MAAM;MACLlG,eAAe,CAACgH,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;MAChC/G,eAAe,CAACoI,OAAO,CAACvC,IAAI,CAAC;IAC/B;IAEAvG,SAAS,CAAC0D,GAAG,CAAC,iBAAiB,EAAEhD,eAAe,CAAC;EACnD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEV,SAAS,CAAC+I,iBAAiB,GAAG,UAAUxC,IAAI,EAAEyC,UAAU,GAAG,KAAK,EAAE;IAChE,MAAMtI,eAAe,GAAGV,SAAS,CAACwD,GAAG,CAAC,iBAAiB,CAAC;IACxD+C,IAAI,GAAGE,OAAO,CAACC,gBAAgB,CAACH,IAAI,CAAC;IACrC,IAAI,CAACA,IAAI,EAAE;IAEX,IAAI7F,eAAe,CAACiG,OAAO,CAACJ,IAAI,CAAC,KAAK,CAAC,CAAC,IAAIyC,UAAU,EAAE;MACtDH,iBAAiB,CAACtC,IAAI,CAAC;IACzB;IAEAvG,SAAS,CAAC0D,GAAG,CAAC,gBAAgB,EAAE6C,IAAI,CAAC;IAErC,IAAIyC,UAAU,EAAE;MACdhJ,SAAS,CAACiJ,gCAAgC,CAAC1C,IAAI,CAAC;IAClD;EACF,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;EACEvG,SAAS,CAACiJ,gCAAgC,GAAG,UAAU1C,IAAI,EAAE;IAC3DA,IAAI,GAAGE,OAAO,CAACC,gBAAgB,CAACH,IAAI,CAAC;IACrC,IAAI,CAACA,IAAI,EAAE;IAEXvG,SAAS,CAAC0D,GAAG,CAAC,+BAA+B,EAAE6C,IAAI,CAAC;EACtD,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASvB,aAAa,CAACP,GAAG,EAAEd,KAAK,EAAE;IACjC,IAAIxD,aAAa,CAACsE,GAAG,CAAC,YAAYvD,GAAG,EAAE;MACrC,OAAO,IAAIA,GAAG,CAACqE,MAAM,CAAC2D,OAAO,CAACvF,KAAK,CAAC,CAAC;IACvC,CAAC,MAAM,IAAIxD,aAAa,CAACsE,GAAG,CAAC,YAAY0E,GAAG,EAAE;MAC5C,OAAO,IAAIA,GAAG,CAACxF,KAAK,CAAC;IACvB,CAAC,MAAM;MACL,OAAOA,KAAK;IACd;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASE,+BAA+B,CAACF,KAAK,EAAE;IAC9C,IAAIA,KAAK,YAAYzC,GAAG,EAAE;MACxB,OAAOqE,MAAM,CAAC6D,WAAW,CAACzF,KAAK,CAAC;IAClC,CAAC,MAAM,IAAIA,KAAK,YAAYwF,GAAG,EAAE;MAC/B,OAAOE,KAAK,CAACC,IAAI,CAAC3F,KAAK,CAAC;IAC1B,CAAC,MAAM;MACL,OAAOA,KAAK;IACd;EACF;EAEA,OAAO3D,SAAS;AAClB,CAAC,EAAG"}