{"version":3,"file":"../../background/translationService.js","names":["translationService","Utils","escapeHTML","unsafe","bingMarkFrontPart","bingMarkSecondPart","replaceAll","replace","unescapeHTML","GoogleHelper","googleTranslateTKK","shiftLeftOrRightThenSumOrXor","num","optString","i","length","acc","charAt","charCodeAt","Number","transformQuery","query","bytesArray","idx","charCode","calcHash","windowTkk","tkkSplited","split","tkkIndex","tkkKey","encondingRound","item","normalizedResult","toString","GoogleHelper_v2","translateAuth","_translateAuth","_","findAuth","_authPromise","Promise","resolve","updateGoogleAuth","_lastRequestAuthTime","date","Date","setMinutes","getMinutes","_AuthNotFound","getTime","now","alternativeKey","TextDecoder","decode","Uint8Array","http","XMLHttpRequest","open","send","onload","e","responseText","result","match","console","log","onerror","onabort","ontimeout","error","finally","YandexHelper","translateSid","_translateSid","findSID","_findPromise","updateYandexSid","_lastRequestSidTime","_SIDNotFound","substring","BingHelper","_translateAuth2","_authPromise2","updateBingAuth","_lastRequestAuthTime2","_AuthNotFound2","Service","constructor","serviceName","baseURL","xhrMethod","cbTransformRequest","cbParseResponse","cbTransformResponse","cbGetExtraParameters","cbGetRequestBody","cbGetExtraHeaders","translationsInProgress","Map","removeTranslationsWithError","forEach","transInfo","key","status","delete","getRequests","sourceLanguage","targetLanguage","sourceArray2d","requests","currentTranslationsInProgress","currentRequest","currentSize","sourceArray","requestString","fixString","requestHash","join","progressInfo","get","push","promise_resolve","originalText","translatedText","detectedLanguage","_status","waitTranlate","set","cacheEntry","translationCache","makeRequest","reject","xhr","headers","header","setRequestHeader","name","value","responseType","event","response","undefined","translate","dontSaveInPersistentCache","dontSortResults","promises","request","then","results","text","catch","all","map","str","googleService","index","responseJson","indexOf","slice","sentences","sentenceStartIndex","sentenceFinalIndex","resultArray","lastEndPos","r","matchAll","fullText","fullLength","pos","aTag","insideText","outsideText","lastOutsideText","indexes","parseInt","filter","isNaN","resultStartAtIndex","finalResulArray","j","JSON","stringify","info","replacements","search","yandexService","lang","encodeURIComponent","bingService","id","_r$detectedLanguage","translations","language","parser","DOMParser","doc","parseFromString","currText","body","childNodes","node","nodeName","textContent","deeplService","DeepLTab","waitFirstTranslationResult","listener","sender","sendResponse","action","chrome","runtime","onMessage","removeListener","addListener","setTimeout","tabs","tab","checkedLastError","sendMessage","frameId","tabsCreate","createLibreService","url","apiKey","params","URLSearchParams","append","createDeeplFreeApiService","detected_source_language","startsWith","serviceList","getSafeServiceByName","twpConfig","includes","find","cs","translateHTML","twpLang","getAlternativeService","service","translateText","translateSingleText","incognito","source","libre","deepl_freeapi","onReady","_proxyServers$google","proxyServers","google","translateServer","URL","host","onChanged","newValue","_newValue$google"],"sources":["translationService.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst translationService = (function () {\r\n  const translationService = {};\r\n\r\n  class Utils {\r\n    /**\r\n     * Replace the characters `& < > \" '` with `&amp; &lt; &gt; &quot; &#39;`.\r\n     *\r\n     * Note: For bing translation, we want to use its custom dictionary feature,\r\n     * we have to keep certain html tags, so we need to avoid them from being escaped.\r\n     * These symbols are nothing, just to ensure that there are no such symbols in the original text.\r\n     *\r\n     * @param {string} unsafe\r\n     * @returns {string} escapedString\r\n     */\r\n    static escapeHTML(unsafe) {\r\n      const bingMarkFrontPart = '<mstrans:dictionary translation=\"';\r\n      const bingMarkSecondPart = '\"></mstrans:dictionary>';\r\n\r\n      unsafe = unsafe\r\n        .replaceAll(bingMarkFrontPart, \"@-/629^*\")\r\n        .replaceAll(bingMarkSecondPart, \"^$537+*\");\r\n\r\n      unsafe = unsafe\r\n        .replace(/\\&/g, \"&amp;\")\r\n        .replace(/\\</g, \"&lt;\")\r\n        .replace(/\\>/g, \"&gt;\")\r\n        .replace(/\\\"/g, \"&quot;\")\r\n        .replace(/\\'/g, \"&#39;\");\r\n\r\n      unsafe = unsafe\r\n        .replaceAll(\"@-/629^*\", bingMarkFrontPart)\r\n        .replaceAll(\"^$537+*\", bingMarkSecondPart);\r\n\r\n      return unsafe;\r\n    }\r\n\r\n    /**\r\n     * Replace the characters `&amp; &lt; &gt; &quot; &#39;` with `& < > \" '`.\r\n     * @param {string} unsafe\r\n     * @returns {string} unescapedString\r\n     */\r\n    static unescapeHTML(unsafe) {\r\n      return unsafe\r\n        .replace(/\\&amp;/g, \"&\")\r\n        .replace(/\\&lt;/g, \"<\")\r\n        .replace(/\\&gt;/g, \">\")\r\n        .replace(/\\&quot;/g, '\"')\r\n        .replace(/\\&\\#39;/g, \"'\");\r\n    }\r\n  }\r\n\r\n  class GoogleHelper {\r\n    static get googleTranslateTKK() {\r\n      return \"448487.932609646\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} num\r\n     * @param {string} optString\r\n     * @returns {number}\r\n     */\r\n    static shiftLeftOrRightThenSumOrXor(num, optString) {\r\n      for (let i = 0; i < optString.length - 2; i += 3) {\r\n        /** @type {string|number} */\r\n        let acc = optString.charAt(i + 2);\r\n        if (\"a\" <= acc) {\r\n          acc = acc.charCodeAt(0) - 87;\r\n        } else {\r\n          acc = Number(acc);\r\n        }\r\n        if (optString.charAt(i + 1) == \"+\") {\r\n          acc = num >>> acc;\r\n        } else {\r\n          acc = num << acc;\r\n        }\r\n        if (optString.charAt(i) == \"+\") {\r\n          num += acc & 4294967295;\r\n        } else {\r\n          num ^= acc;\r\n        }\r\n      }\r\n      return num;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} query\r\n     * @returns {Array<number>}\r\n     */\r\n    static transformQuery(query) {\r\n      /** @type {Array<number>} */\r\n      const bytesArray = [];\r\n      let idx = 0;\r\n      for (let i = 0; i < query.length; i++) {\r\n        let charCode = query.charCodeAt(i);\r\n\r\n        if (128 > charCode) {\r\n          bytesArray[idx++] = charCode;\r\n        } else {\r\n          if (2048 > charCode) {\r\n            bytesArray[idx++] = (charCode >> 6) | 192;\r\n          } else {\r\n            if (\r\n              55296 == (charCode & 64512) &&\r\n              i + 1 < query.length &&\r\n              56320 == (query.charCodeAt(i + 1) & 64512)\r\n            ) {\r\n              charCode =\r\n                65536 +\r\n                ((charCode & 1023) << 10) +\r\n                (query.charCodeAt(++i) & 1023);\r\n              bytesArray[idx++] = (charCode >> 18) | 240;\r\n              bytesArray[idx++] = ((charCode >> 12) & 63) | 128;\r\n            } else {\r\n              bytesArray[idx++] = (charCode >> 12) | 224;\r\n            }\r\n            bytesArray[idx++] = ((charCode >> 6) & 63) | 128;\r\n          }\r\n          bytesArray[idx++] = (charCode & 63) | 128;\r\n        }\r\n      }\r\n      return bytesArray;\r\n    }\r\n\r\n    /**\r\n     * Calculates the hash (TK) of a query for google translator.\r\n     * @param {string} query\r\n     * @returns {string}\r\n     */\r\n    static calcHash(query) {\r\n      const windowTkk = GoogleHelper.googleTranslateTKK;\r\n      const tkkSplited = windowTkk.split(\".\");\r\n      const tkkIndex = Number(tkkSplited[0]) || 0;\r\n      const tkkKey = Number(tkkSplited[1]) || 0;\r\n\r\n      const bytesArray = GoogleHelper.transformQuery(query);\r\n\r\n      let encondingRound = tkkIndex;\r\n      for (const item of bytesArray) {\r\n        encondingRound += item;\r\n        encondingRound = GoogleHelper.shiftLeftOrRightThenSumOrXor(\r\n          encondingRound,\r\n          \"+-a^+6\"\r\n        );\r\n      }\r\n      encondingRound = GoogleHelper.shiftLeftOrRightThenSumOrXor(\r\n        encondingRound,\r\n        \"+-3^+b+-f\"\r\n      );\r\n\r\n      encondingRound ^= tkkKey;\r\n      if (encondingRound <= 0) {\r\n        encondingRound = (encondingRound & 2147483647) + 2147483648;\r\n      }\r\n\r\n      const normalizedResult = encondingRound % 1000000;\r\n      return normalizedResult.toString() + \".\" + (normalizedResult ^ tkkIndex);\r\n    }\r\n  }\r\n\r\n  class GoogleHelper_v2 {\r\n    /** @type {number} */\r\n    static #lastRequestAuthTime = null;\r\n    /** @type {string} */\r\n    static #translateAuth = null;\r\n    /** @type {boolean} */\r\n    static #AuthNotFound = false;\r\n    /** @type {Promise<void>} */\r\n    static #authPromise = null;\r\n\r\n    static get translateAuth() {\r\n      return GoogleHelper_v2.#translateAuth;\r\n    }\r\n\r\n    /**\r\n     * Find the Auth of Google Translator. The Auth value is used in translation requests.\r\n     * @returns {Promise<void>}\r\n     */\r\n    static async findAuth() {\r\n      if (GoogleHelper_v2.#authPromise)\r\n        return await GoogleHelper_v2.#authPromise;\r\n\r\n      GoogleHelper_v2.#authPromise = new Promise((resolve) => {\r\n        let updateGoogleAuth = false;\r\n        if (GoogleHelper_v2.#lastRequestAuthTime) {\r\n          const date = new Date();\r\n          if (GoogleHelper_v2.#translateAuth) {\r\n            date.setMinutes(date.getMinutes() - 20);\r\n          } else if (GoogleHelper_v2.#AuthNotFound) {\r\n            date.setMinutes(date.getMinutes() - 5);\r\n          } else {\r\n            date.setMinutes(date.getMinutes() - 1);\r\n          }\r\n          if (date.getTime() > GoogleHelper_v2.#lastRequestAuthTime) {\r\n            updateGoogleAuth = true;\r\n          }\r\n        } else {\r\n          updateGoogleAuth = true;\r\n        }\r\n\r\n        if (updateGoogleAuth) {\r\n          GoogleHelper_v2.#lastRequestAuthTime = Date.now();\r\n\r\n          const alternativeKey = new TextDecoder().decode(\r\n            new Uint8Array([\r\n              65, 73, 122, 97, 83, 121, 65, 84, 66, 88, 97, 106, 118, 122, 81,\r\n              76, 84, 68, 72, 69, 81, 98, 99, 112, 113, 48, 73, 104, 101, 48,\r\n              118, 87, 68, 72, 109, 79, 53, 50, 48,\r\n            ])\r\n          );\r\n\r\n          const http = new XMLHttpRequest();\r\n          http.open(\r\n            \"GET\",\r\n            \"https://translate.googleapis.com/_/translate_http/_/js/k=translate_http.tr.en_US.YusFYy3P_ro.O/am=AAg/d=1/exm=el_conf/ed=1/rs=AN8SPfq1Hb8iJRleQqQc8zhdzXmF9E56eQ/m=el_main\"\r\n          );\r\n          http.send();\r\n          http.onload = (e) => {\r\n            if (http.responseText && http.responseText.length > 1) {\r\n              const result = http.responseText.match(\r\n                /['\"]x\\-goog\\-api\\-key['\"]\\s*\\:\\s*['\"](\\w{39})['\"]/i\r\n              );\r\n              console.log(result);\r\n              if (result && result.length === 2) {\r\n                GoogleHelper_v2.#translateAuth = result[1];\r\n                GoogleHelper_v2.#AuthNotFound = false;\r\n              } else {\r\n                GoogleHelper_v2.#AuthNotFound = true;\r\n                GoogleHelper_v2.#translateAuth = alternativeKey;\r\n              }\r\n            } else {\r\n              GoogleHelper_v2.#AuthNotFound = true;\r\n              GoogleHelper_v2.#translateAuth = alternativeKey;\r\n            }\r\n            resolve();\r\n          };\r\n          http.onerror =\r\n            http.onabort =\r\n            http.ontimeout =\r\n              (e) => {\r\n                console.error(e);\r\n                GoogleHelper_v2.#translateAuth = alternativeKey;\r\n                resolve();\r\n              };\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n\r\n      GoogleHelper_v2.#authPromise.finally(() => {\r\n        GoogleHelper_v2.#authPromise = null;\r\n      });\r\n\r\n      return await GoogleHelper_v2.#authPromise;\r\n    }\r\n  }\r\n\r\n  class YandexHelper {\r\n    /** @type {number} */\r\n    static #lastRequestSidTime = null;\r\n    /** @type {string} */\r\n    static #translateSid = null;\r\n    /** @type {boolean} */\r\n    static #SIDNotFound = false;\r\n    /** @type {Promise<void>} */\r\n    static #findPromise = null;\r\n\r\n    static get translateSid() {\r\n      return YandexHelper.#translateSid;\r\n    }\r\n\r\n    /**\r\n     * Find the SID of Yandex Translator. The SID value is used in translation requests.\r\n     * @returns {Promise<void>}\r\n     */\r\n    static async findSID() {\r\n      if (YandexHelper.#findPromise) return await YandexHelper.#findPromise;\r\n      YandexHelper.#findPromise = new Promise((resolve) => {\r\n        let updateYandexSid = false;\r\n        if (YandexHelper.#lastRequestSidTime) {\r\n          const date = new Date();\r\n          if (YandexHelper.#translateSid) {\r\n            date.setMinutes(date.getMinutes() - 20);\r\n          } else if (YandexHelper.#SIDNotFound) {\r\n            date.setMinutes(date.getMinutes() - 5);\r\n          } else {\r\n            date.setMinutes(date.getMinutes() - 1);\r\n          }\r\n          if (date.getTime() > YandexHelper.#lastRequestSidTime) {\r\n            updateYandexSid = true;\r\n          }\r\n        } else {\r\n          updateYandexSid = true;\r\n        }\r\n\r\n        if (updateYandexSid) {\r\n          YandexHelper.#lastRequestSidTime = Date.now();\r\n\r\n          const http = new XMLHttpRequest();\r\n          http.open(\r\n            \"GET\",\r\n            \"https://translate.yandex.net/website-widget/v1/widget.js?widgetId=ytWidget&pageLang=es&widgetTheme=light&autoMode=false\"\r\n          );\r\n          http.send();\r\n          http.onload = (e) => {\r\n            const result = http.responseText.match(/sid\\:\\s\\'[0-9a-f\\.]+/);\r\n            if (result && result[0] && result[0].length > 7) {\r\n              YandexHelper.#translateSid = result[0].substring(6);\r\n              YandexHelper.#SIDNotFound = false;\r\n            } else {\r\n              YandexHelper.#SIDNotFound = true;\r\n            }\r\n            resolve();\r\n          };\r\n          http.onerror =\r\n            http.onabort =\r\n            http.ontimeout =\r\n              (e) => {\r\n                console.error(e);\r\n                resolve();\r\n              };\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n\r\n      YandexHelper.#findPromise.finally(() => {\r\n        YandexHelper.#findPromise = null;\r\n      });\r\n\r\n      return await YandexHelper.#findPromise;\r\n    }\r\n  }\r\n\r\n  class BingHelper {\r\n    /** @type {number} */\r\n    static #lastRequestAuthTime = null;\r\n    /** @type {string} */\r\n    static #translateAuth = null;\r\n    /** @type {boolean} */\r\n    static #AuthNotFound = false;\r\n    /** @type {Promise<void>} */\r\n    static #authPromise = null;\r\n\r\n    static get translateAuth() {\r\n      return BingHelper.#translateAuth;\r\n    }\r\n\r\n    /**\r\n     * Find the Auth of Bing Translator. The Auth value is used in translation requests.\r\n     * @returns {Promise<void>}\r\n     */\r\n    static async findAuth() {\r\n      if (BingHelper.#authPromise) return await BingHelper.#authPromise;\r\n\r\n      BingHelper.#authPromise = new Promise((resolve) => {\r\n        let updateBingAuth = false;\r\n        if (BingHelper.#lastRequestAuthTime) {\r\n          const date = new Date();\r\n          if (BingHelper.#translateAuth) {\r\n            date.setMinutes(date.getMinutes() - 8);\r\n          } else if (BingHelper.#AuthNotFound) {\r\n            date.setMinutes(date.getMinutes() - 5);\r\n          } else {\r\n            date.setMinutes(date.getMinutes() - 1);\r\n          }\r\n          if (date.getTime() > BingHelper.#lastRequestAuthTime) {\r\n            updateBingAuth = true;\r\n          }\r\n        } else {\r\n          updateBingAuth = true;\r\n        }\r\n\r\n        if (updateBingAuth) {\r\n          BingHelper.#lastRequestAuthTime = Date.now();\r\n\r\n          const http = new XMLHttpRequest();\r\n          http.open(\"GET\", \"https://edge.microsoft.com/translate/auth\");\r\n          http.send();\r\n          http.onload = (e) => {\r\n            if (http.responseText && http.responseText.length > 1) {\r\n              BingHelper.#translateAuth = http.responseText;\r\n              BingHelper.#AuthNotFound = false;\r\n            } else {\r\n              BingHelper.#AuthNotFound = true;\r\n            }\r\n            resolve();\r\n          };\r\n          http.onerror =\r\n            http.onabort =\r\n            http.ontimeout =\r\n              (e) => {\r\n                console.error(e);\r\n                resolve();\r\n              };\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n\r\n      BingHelper.#authPromise.finally(() => {\r\n        BingHelper.#authPromise = null;\r\n      });\r\n\r\n      return await BingHelper.#authPromise;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a string with additional parameters to be concatenated to the request URL.\r\n   * @callback callback_cbParameters\r\n   * @param {string} sourceLanguage\r\n   * @param {string} targetLanguage\r\n   * @param {Array<TranslationInfo>} requests\r\n   * @returns {string}\r\n   */\r\n\r\n  /**\r\n   * Takes `sourceArray` and returns a request string to the translation service.\r\n   * @callback callback_cbTransformRequest\r\n   * @param {string[]} sourceArray\r\n   * @returns {string}\r\n   */\r\n\r\n  /**\r\n   * @typedef {{text: string, detectedLanguage: string}} Service_Single_Result_Response\r\n   */\r\n\r\n  /**\r\n   * Receives the response from the *http request* and returns `Service_Single_Result_Response[]`.\r\n   *\r\n   * Returns a string with the body of a request of type **POST**.\r\n   * @callback callback_cbParseResponse\r\n   * @param {Object} response\r\n   * @returns {Array<Service_Single_Result_Response>}\r\n   */\r\n\r\n  /**\r\n   * Takes a string formatted with the translated text and returns a `resultArray`.\r\n   * @callback callback_cbTransformResponse\r\n   * @param {String} result\r\n   * @param {boolean} dontSortResults\r\n   * @returns {string[]} resultArray\r\n   */\r\n\r\n  /**\r\n   * Return extra headers for the request.\r\n   * @callback callback_cbGetExtraHeaders\r\n   * @returns {Array<{name: string, value: string}>} headers\r\n   */\r\n\r\n  /** @typedef {\"complete\" | \"translating\" | \"error\"} TranslationStatus */\r\n  /**\r\n   * @typedef {Object} TranslationInfo\r\n   * @property {String} originalText\r\n   * @property {String} translatedText\r\n   * @property {String} detectedLanguage\r\n   * @property {TranslationStatus} status\r\n   * @property {Promise<void>} waitTranlate\r\n   */\r\n\r\n  /**\r\n   * Base class to create new translation services.\r\n   */\r\n  class Service {\r\n    /**\r\n     * Initializes the **Service** class with information about the new translation service.\r\n     * @param {string} serviceName\r\n     * @param {string} baseURL\r\n     * @param {\"GET\" | \"POST\"} xhrMethod\r\n     * @param {callback_cbTransformRequest} cbTransformRequest Takes `sourceArray` and returns a request string to the translation service.\r\n     * @param {callback_cbParseResponse} cbParseResponse Receives the response from the *http request* and returns `Service_Single_Result_Response[]`.\r\n     * @param {callback_cbTransformResponse} cbTransformResponse Takes a string formatted with the translated text and returns a `resultArray`.\r\n     * @param {callback_cbParameters} cbGetExtraParameters Returns a string with additional parameters to be concatenated to the request URL.\r\n     * @param {callback_cbParameters} cbGetRequestBody Returns a string with the body of a request of type **POST**.\r\n     * @param {callback_cbGetExtraHeaders} cbGetExtraHeaders Return extra headers for the request.\r\n     */\r\n    constructor(\r\n      serviceName,\r\n      baseURL,\r\n      xhrMethod = \"GET\",\r\n      cbTransformRequest,\r\n      cbParseResponse,\r\n      cbTransformResponse,\r\n      cbGetExtraParameters = null,\r\n      cbGetRequestBody = null,\r\n      cbGetExtraHeaders = null\r\n    ) {\r\n      this.serviceName = serviceName;\r\n      this.baseURL = baseURL;\r\n      this.xhrMethod = xhrMethod;\r\n      this.cbTransformRequest = cbTransformRequest;\r\n      this.cbParseResponse = cbParseResponse;\r\n      this.cbTransformResponse = cbTransformResponse;\r\n      this.cbGetExtraParameters = cbGetExtraParameters;\r\n      this.cbGetRequestBody = cbGetRequestBody;\r\n      this.cbGetExtraHeaders = cbGetExtraHeaders;\r\n\r\n      /**\r\n       * @type {Map<string, TranslationInfo>}\r\n       *\r\n       * It works as an in-memory translation cache.\r\n       * Ensures that two identical requests share the same `XMLHttpRequest`.\r\n       * */\r\n      this.translationsInProgress = new Map();\r\n    }\r\n\r\n    /**\r\n     * Removes all translations with `status` **error** and are in `translationsInProgress`.\r\n     *\r\n     * Sometimes there is a device translation error due to internet connection problems.\r\n     * Clearing translationsInProgress ensures that the translation will be retried.\r\n     */\r\n    removeTranslationsWithError() {\r\n      this.translationsInProgress.forEach((transInfo, key) => {\r\n        if (transInfo.status === \"error\") {\r\n          this.translationsInProgress.delete(key);\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Receives the `sourceArray2d` parameter and prepares the requests.\r\n     * Calls `cbTransformRequest` for each `sourceArray` of `sourceArray2d`.\r\n     * The `currentTranslationsInProgress` array will be the **final result** with requests already completed or in progress. And the `requests` array will only contain the new requests that need to be made.\r\n     *\r\n     * Checks if there is already an identical request in progress or if it is already in the translation cache.\r\n     * If it doesn't exist, add it to `requests` to make a new *http request*.\r\n     *\r\n     * Requests longer than **800 characters** will be split into new requests.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<string[]>} sourceArray2d\r\n     * @returns {Promise<[Array<TranslationInfo[]>, TranslationInfo[]]>} `requests`, `currentTranslationsInProgress`\r\n     */\r\n    async getRequests(sourceLanguage, targetLanguage, sourceArray2d) {\r\n      /** @type {Array<TranslationInfo[]>} */\r\n      const requests = [];\r\n      /** @type {TranslationInfo[]} */\r\n      const currentTranslationsInProgress = [];\r\n\r\n      let currentRequest = [];\r\n      let currentSize = 0;\r\n\r\n      for (const sourceArray of sourceArray2d) {\r\n        const requestString = this.fixString(\r\n          this.cbTransformRequest(sourceArray)\r\n        );\r\n        const requestHash = [\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requestString,\r\n        ].join(\", \");\r\n\r\n        const progressInfo = this.translationsInProgress.get(requestHash);\r\n        if (progressInfo) {\r\n          currentTranslationsInProgress.push(progressInfo);\r\n        } else {\r\n          /** @type {TranslationStatus} */\r\n          let status = \"translating\";\r\n          /** @type {() => void} */\r\n          let promise_resolve = null;\r\n\r\n          /** @type {TranslationInfo} */\r\n          const progressInfo = {\r\n            originalText: requestString,\r\n            translatedText: null,\r\n            detectedLanguage: null,\r\n            get status() {\r\n              return status;\r\n            },\r\n            set status(_status) {\r\n              status = _status;\r\n              promise_resolve();\r\n            },\r\n            waitTranlate: new Promise((resolve) => (promise_resolve = resolve)),\r\n          };\r\n\r\n          currentTranslationsInProgress.push(progressInfo);\r\n          this.translationsInProgress.set(requestHash, progressInfo);\r\n\r\n          //cast\r\n          const cacheEntry = await translationCache.get(\r\n            this.serviceName,\r\n            sourceLanguage,\r\n            targetLanguage,\r\n            requestString\r\n          );\r\n          if (cacheEntry) {\r\n            progressInfo.translatedText = cacheEntry.translatedText;\r\n            progressInfo.detectedLanguage = cacheEntry.detectedLanguage;\r\n            progressInfo.status = \"complete\";\r\n            //this.translationsInProgress.delete([sourceLanguage, targetLanguage, requestString])\r\n          } else {\r\n            currentRequest.push(progressInfo);\r\n            currentSize += progressInfo.originalText.length;\r\n            if (currentSize > 800) {\r\n              requests.push(currentRequest);\r\n              currentSize = 0;\r\n              currentRequest = [];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentRequest.length > 0) {\r\n        requests.push(currentRequest);\r\n        currentRequest = [];\r\n        currentSize = 0;\r\n      }\r\n\r\n      return [requests, currentTranslationsInProgress];\r\n    }\r\n\r\n    /**\r\n     * Makes a request using the *XMLHttpRequest* API. Returns a promise that will be resolved with the result of the request. If the request fails, the promise will be rejected.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<TranslationInfo>} requests\r\n     * @returns {Promise<*>}\r\n     */\r\n    async makeRequest(sourceLanguage, targetLanguage, requests) {\r\n      return await new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\r\n          this.xhrMethod,\r\n          this.baseURL +\r\n            (this.cbGetExtraParameters\r\n              ? this.cbGetExtraParameters(\r\n                  sourceLanguage,\r\n                  targetLanguage,\r\n                  requests\r\n                )\r\n              : \"\")\r\n        );\r\n\r\n        if (this.cbGetExtraHeaders) {\r\n          const headers = this.cbGetExtraHeaders();\r\n          headers.forEach((header) => {\r\n            xhr.setRequestHeader(header.name, header.value);\r\n          });\r\n        }\r\n\r\n        xhr.responseType = \"json\";\r\n\r\n        xhr.onload = (event) => {\r\n          resolve(xhr.response);\r\n        };\r\n\r\n        xhr.onerror =\r\n          xhr.onabort =\r\n          xhr.ontimeout =\r\n            (event) => {\r\n              console.error(event);\r\n              reject();\r\n            };\r\n\r\n        xhr.send(\r\n          this.cbGetRequestBody\r\n            ? this.cbGetRequestBody(sourceLanguage, targetLanguage, requests)\r\n            : undefined\r\n        );\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Translates the `sourceArray2d`.\r\n     *\r\n     * If `dontSaveInPersistentCache` is **true** then the translation result will not be saved in the on-disk translation cache, only in the in-memory cache.\r\n     *\r\n     * The `dontSortResults` parameter is only valid when using the ***google*** translation service, if its value is **true** then the translation result will not be sorted.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<string[]>} sourceArray2d\r\n     * @param {boolean} dontSaveInPersistentCache\r\n     * @param {boolean} dontSortResults\r\n     * @returns {Promise<string[][]>}\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache = false,\r\n      dontSortResults = false\r\n    ) {\r\n      const [requests, currentTranslationsInProgress] = await this.getRequests(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d\r\n      );\r\n      /** @type {Promise<void>[]} */\r\n      const promises = [];\r\n\r\n      for (const request of requests) {\r\n        promises.push(\r\n          this.makeRequest(sourceLanguage, targetLanguage, request)\r\n            .then((response) => {\r\n              const results = this.cbParseResponse(response);\r\n              for (const idx in request) {\r\n                const result = results[idx];\r\n                this.cbTransformResponse(result.text, dontSortResults); // apenas para gerar error\r\n                const transInfo = request[idx];\r\n                transInfo.detectedLanguage = result.detectedLanguage || \"und\";\r\n                transInfo.translatedText = result.text;\r\n                transInfo.status = \"complete\";\r\n\r\n                if (\r\n                  dontSaveInPersistentCache === false &&\r\n                  transInfo.translatedText\r\n                ) {\r\n                  translationCache.set(\r\n                    this.serviceName,\r\n                    sourceLanguage,\r\n                    targetLanguage,\r\n                    transInfo.originalText,\r\n                    transInfo.translatedText,\r\n                    transInfo.detectedLanguage\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              console.error(e);\r\n              for (const transInfo of request) {\r\n                transInfo.status = \"error\";\r\n                //this.translationsInProgress.delete([sourceLanguage, targetLanguage, transInfo.originalText])\r\n              }\r\n            })\r\n        );\r\n      }\r\n      await Promise.all(\r\n        currentTranslationsInProgress.map((transInfo) => transInfo.waitTranlate)\r\n      );\r\n      return currentTranslationsInProgress.map((transInfo) =>\r\n        this.cbTransformResponse(transInfo.translatedText, dontSortResults)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * https://github.com/FilipePS/Traduzir-paginas-web/issues/484\r\n     * @param {string} str\r\n     * @returns {string} fixedStr\r\n     */\r\n    fixString(str) {\r\n      return str.replace(/\\u200b/g, \" \");\r\n    }\r\n  }\r\n\r\n  const googleService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"google\",\r\n        \"https://translate-pa.googleapis.com/v1/translateHtml\",\r\n        \"POST\",\r\n        function cbTransformRequest(sourceArray) {\r\n          sourceArray = sourceArray.map((text) => Utils.escapeHTML(text));\r\n          if (sourceArray.length > 1) {\r\n            sourceArray = sourceArray.map(\r\n              (text, index) => `<a i=${index}>${text}</a>`\r\n            );\r\n          }\r\n          // the <pre> tag is to preserve the text formating\r\n          return `<pre>${sourceArray.join(\"\")}</pre>`;\r\n        },\r\n        function cbParseResponse(response) {\r\n          /** @type {[Service_Single_Result_Response]} */\r\n          let responseJson;\r\n          // if (typeof response === \"string\") {\r\n          //   responseJson = [{ text: response, detectedLanguage: null }];\r\n          // } else if (typeof response[0] === \"string\") {\r\n          //   responseJson = response.map(\r\n          //     /** @returns {Service_Single_Result_Response} */ (\r\n          //       /** @type {string} */ value\r\n          //     ) => ({ text: value, detectedLanguage: null })\r\n          //   );\r\n          // } else {\r\n          //   responseJson = response.map(\r\n          //     /** @returns {Service_Single_Result_Response} */ (\r\n          //       /** @type {[string, string]} */ value\r\n          //     ) => ({ text: value[0], detectedLanguage: value[1] })\r\n          //   );\r\n          // }\r\n          responseJson = response[0].map(\r\n            /** @returns {Service_Single_Result_Response} */ (\r\n              /** @type {string} */ value,\r\n              /** @type {number} */ index\r\n            ) => ({ text: value, detectedLanguage: response[1][index] })\r\n          );\r\n          return responseJson;\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          // remove the <pre> tag from the response\r\n          if (result.indexOf(\"<pre\") !== -1) {\r\n            result = result.replace(\"</pre>\", \"\");\r\n            const index = result.indexOf(\">\");\r\n            result = result.slice(index + 1);\r\n          }\r\n\r\n          /** @type {string[]} */\r\n          const sentences = []; // each translated sentence is inside of <b> tag\r\n\r\n          // The main objective is to remove the original text of each sentense that is inside the <i> tags.\r\n          // Keeping only the <a> tags\r\n          let idx = 0;\r\n          while (true) {\r\n            // each translated sentence is inside of <b> tag\r\n            const sentenceStartIndex = result.indexOf(\"<b>\", idx);\r\n            if (sentenceStartIndex === -1) break;\r\n\r\n            // the <i> tag is the original text in each sentence\r\n            const sentenceFinalIndex = result.indexOf(\r\n              \"<i>\",\r\n              sentenceStartIndex\r\n            );\r\n\r\n            if (sentenceFinalIndex === -1) {\r\n              sentences.push(result.slice(sentenceStartIndex + 3));\r\n              break;\r\n            } else {\r\n              sentences.push(\r\n                result.slice(sentenceStartIndex + 3, sentenceFinalIndex)\r\n              );\r\n            }\r\n            idx = sentenceFinalIndex;\r\n          }\r\n\r\n          // maybe the response don't have any sentence (does not have <i> and <b> tags), is this case just use de result\r\n          result = sentences.length > 0 ? sentences.join(\" \") : result;\r\n          // Remove the remaining </b> tags (usually the last)\r\n          result = result.replace(/\\<\\/b\\>/g, \"\");\r\n          // Capture each <a i={number}> and put it in an array, the </a> will be ignored\r\n          // maybe the same index appears several times\r\n          // maybe some text will be outside of <a i={number}> (Usually text before the first <a> tag, and some whitespace between the <a> tags),\r\n          // in this case, The outside text will be placed inside the <a i={number}> closer\r\n          // https://github.com/FilipePS/Traduzir-paginas-web/issues/449\r\n          // TODO lidar com tags dentro de tags e tags vazias\r\n          // https://de.wikipedia.org/wiki/Wikipedia:Hauptseite\r\n          // \"{\\\"originalText\\\":\\\"<pre><a i=0>\\\\nFür den </a><a i=1>37. Schreib­wettbewerb</a><a i=2> und den </a><a i=3>18. Miniaturwettbewerb</a><a i=4> können ab sofort Artikel nominiert werden.</a></pre>\\\",\\\"translatedText\\\":\\\"<pre><a i=0>\\\\n</a>Artigos já podem ser indicados <a i=0>para o</a> <a i=1>37º Concurso de Redação <a i=2>e</a></a> <a i=3><a i=4>18º</a> Concurso de Miniaturas</a> .</pre>\\\",\\\"detectedLanguage\\\":\\\"de\\\",\\\"status\\\":\\\"complete\\\",\\\"waitTranlate\\\":{}}\"\r\n          let resultArray = [];\r\n          let lastEndPos = 0;\r\n          for (const r of result.matchAll(\r\n            /(\\<a\\si\\=[0-9]+\\>)([^\\<\\>]*(?=\\<\\/a\\>))*/g\r\n          )) {\r\n            const fullText = r[0];\r\n            const fullLength = r[0].length;\r\n            const pos = r.index;\r\n            // if it is bigger then it has text outside the tags\r\n            if (pos > lastEndPos) {\r\n              const aTag = r[1];\r\n              const insideText = r[2] || \"\";\r\n              const outsideText = result\r\n                .slice(lastEndPos, pos)\r\n                .replace(/\\<\\/a\\>/g, \"\");\r\n              resultArray.push(aTag + outsideText + insideText);\r\n            } else {\r\n              resultArray.push(fullText);\r\n            }\r\n            lastEndPos = pos + fullLength;\r\n          }\r\n\r\n          // captures the final text outside the <a> tag\r\n          {\r\n            const lastOutsideText = result\r\n              .slice(lastEndPos)\r\n              .replace(/\\<\\/a\\>/g, \"\");\r\n            if (resultArray.length > 0) {\r\n              resultArray[resultArray.length - 1] += lastOutsideText;\r\n            }\r\n          }\r\n          // this is the old method, don't capture text outside of <a> tags\r\n          // let resultArray = result.match(\r\n          //   /\\<a\\si\\=[0-9]+\\>[^\\<\\>]*(?=\\<\\/a\\>)/g\r\n          // );\r\n\r\n          let indexes;\r\n          // each inline tag has a index starting with 0 <a i={number}>\r\n          if (resultArray && resultArray.length > 0) {\r\n            // get the indexed of <a i={number}>\r\n            indexes = resultArray\r\n              .map((value) => parseInt(value.match(/[0-9]+(?=\\>)/g)[0]))\r\n              .filter((value) => !isNaN(value));\r\n            // get the text inside of <a i={number}>\r\n            resultArray = resultArray.map((value) => {\r\n              const resultStartAtIndex = value.indexOf(\">\");\r\n              return value.slice(resultStartAtIndex + 1);\r\n            });\r\n          } else {\r\n            // maybe the response don't have any <a i={number}>\r\n            resultArray = [result];\r\n            indexes = [0];\r\n          }\r\n\r\n          // unescapeHTML\r\n          resultArray = resultArray.map((value) => Utils.unescapeHTML(value));\r\n\r\n          if (dontSortResults) {\r\n            // Should not sort the <a i={number}> of Google Translate result\r\n            // Instead of it, join the texts without sorting\r\n            // https://github.com/FilipePS/Traduzir-paginas-web/issues/163\r\n\r\n            // /** @type {string[]} */\r\n            // const finalResulArray = [];\r\n\r\n            // for (const j in indexes) {\r\n            //   finalResulArray[indexes[j]] = \"\";\r\n            // }\r\n\r\n            // resultArray.forEach((text, i) => {\r\n            //   finalResulArray[\r\n            //     Math.floor(i * (finalResulArray.length / resultArray.length))\r\n            //   ] += text;\r\n            // });\r\n\r\n            // return finalResulArray;\r\n            return resultArray;\r\n          } else {\r\n            // Sort Google translate results to keep the links with the correct name\r\n            // Note: the links may also disappear; http://web.archive.org/web/20220919162911/https://de.wikipedia.org/wiki/Wikipedia:Hauptseite\r\n\r\n            /** @type {string[]} */\r\n            const finalResulArray = [];\r\n\r\n            for (const j in indexes) {\r\n              if (finalResulArray[indexes[j]]) {\r\n                finalResulArray[indexes[j]] += \" \" + resultArray[j];\r\n              } else {\r\n                finalResulArray[indexes[j]] = resultArray[j];\r\n              }\r\n            }\r\n\r\n            return finalResulArray;\r\n          }\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return ``;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return JSON.stringify([\r\n            [\r\n              requests.map((info) => info.originalText),\r\n              sourceLanguage,\r\n              targetLanguage,\r\n            ],\r\n            \"te\",\r\n          ]);\r\n        },\r\n        function cbGetExtraHeaders() {\r\n          return [\r\n            {\r\n              name: \"Content-Type\",\r\n              value: \"application/application/json+protobuf\",\r\n            },\r\n            {\r\n              name: \"X-goog-api-key\",\r\n              value: GoogleHelper_v2.translateAuth,\r\n            },\r\n          ];\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @param {string[][]} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n     * @param {boolean} dontSortResults - Whether the translation result should be sorted according to ID <a i=ID>.\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      /** @type {{search: string, replace: string}[]} */\r\n      const replacements = [\r\n        {\r\n          search: \"prs\",\r\n          replace: \"fa-AF\",\r\n        },\r\n      ];\r\n      replacements.forEach((r) => {\r\n        if (targetLanguage === r.search) {\r\n          targetLanguage = r.replace;\r\n        }\r\n        if (sourceLanguage === r.search) {\r\n          sourceLanguage = r.replace;\r\n        }\r\n      });\r\n\r\n      await GoogleHelper_v2.findAuth();\r\n      if (!GoogleHelper_v2.translateAuth) return;\r\n\r\n      return await super.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults\r\n      );\r\n    }\r\n  })();\r\n\r\n  const yandexService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"yandex\",\r\n        \"https://translate.yandex.net/api/v1/tr.json/translate?srv=tr-url-widget\",\r\n        \"GET\",\r\n        function cbTransformRequest(sourceArray) {\r\n          return sourceArray\r\n            .map((value) => Utils.escapeHTML(value))\r\n            .join(\"<wbr>\");\r\n        },\r\n        function cbParseResponse(response) {\r\n          const lang = response.lang;\r\n          const detectedLanguage = lang ? lang.split(\"-\")[0] : null;\r\n          return response.text.map(\r\n            /** @return {Service_Single_Result_Response} */ (\r\n              /** @type {string} */ text\r\n            ) => ({ text, detectedLanguage })\r\n          );\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          return result\r\n            .split(\"<wbr>\")\r\n            .map((value) => Utils.unescapeHTML(value));\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return `&id=${YandexHelper.translateSid}-0-0&format=html&lang=${\r\n            sourceLanguage === \"auto\" ? \"\" : sourceLanguage + \"-\"\r\n          }${targetLanguage}${requests\r\n            .map((info) => `&text=${encodeURIComponent(info.originalText)}`)\r\n            .join(\"\")}`;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return undefined;\r\n        },\r\n        function cbGetExtraHeaders() {\r\n          return [\r\n            {\r\n              name: \"Content-Type\",\r\n              value: \"application/x-www-form-urlencoded\",\r\n            },\r\n          ];\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} dontSortResults This parameter is not needed in this translation service\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      await YandexHelper.findSID();\r\n      if (!YandexHelper.translateSid) return;\r\n      /** @type {{search: string, replace: string}[]} */\r\n      const replacements = [\r\n        {\r\n          search: \"zh-CN\",\r\n          replace: \"zh\",\r\n        },\r\n        {\r\n          search: \"zh-TW\",\r\n          replace: \"zh\",\r\n        },\r\n        {\r\n          search: \"fr-CA\",\r\n          replace: \"fr\",\r\n        },\r\n        {\r\n          search: \"pt\",\r\n          replace: \"pt-BR\",\r\n        },\r\n        {\r\n          search: \"pt-PT\",\r\n          replace: \"pt\",\r\n        },\r\n      ];\r\n      replacements.forEach((r) => {\r\n        if (targetLanguage === r.search) {\r\n          targetLanguage = r.replace;\r\n        }\r\n        if (sourceLanguage === r.search) {\r\n          sourceLanguage = r.replace;\r\n        }\r\n      });\r\n\r\n      return await super.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults\r\n      );\r\n    }\r\n  })();\r\n\r\n  const bingService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"bing\",\r\n        \"https://api-edge.cognitive.microsofttranslator.com/translate?api-version=3.0&includeSentenceLength=true\",\r\n        \"POST\",\r\n        function cbTransformRequest(sourceArray) {\r\n          let id = 10;\r\n          return sourceArray\r\n            .map((value) => {\r\n              const r = `<b${id}>${Utils.escapeHTML(value)}</b${id}>`;\r\n              id++;\r\n              return r;\r\n            })\r\n            .join(\"\");\r\n        },\r\n        function cbParseResponse(response) {\r\n          return response.map(\r\n            /** @return {Service_Single_Result_Response} */\r\n            (/** @type {object} */ r) => ({\r\n              text: r.translations[0].text,\r\n              detectedLanguage: r.detectedLanguage?.language,\r\n            })\r\n          );\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          const resultArray = [];\r\n\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(result, \"text/html\");\r\n          let currText = \"\";\r\n          doc.body.childNodes.forEach((node) => {\r\n            if (dontSortResults) {\r\n              if (node.nodeName == \"#text\") {\r\n                currText += node.textContent;\r\n              } else {\r\n                resultArray.push(currText + node.textContent);\r\n                currText = \"\";\r\n              }\r\n            } else {\r\n              if (node.nodeName == \"#text\") {\r\n                currText += node.textContent;\r\n              } else {\r\n                const id = parseInt(node.nodeName.slice(1)) - 10;\r\n                resultArray[id] = currText + node.textContent;\r\n                currText = \"\";\r\n              }\r\n            }\r\n          });\r\n\r\n          return resultArray;\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return `${\r\n            sourceLanguage !== \"auto-detect\" ? \"&from=\" + sourceLanguage : \"\"\r\n          }&to=${targetLanguage}`;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return JSON.stringify(\r\n            requests.map((info) => ({\r\n              text: info.originalText,\r\n            }))\r\n          );\r\n        },\r\n        function cbGetExtraHeaders() {\r\n          return [\r\n            {\r\n              name: \"Content-Type\",\r\n              value: \"application/json\",\r\n            },\r\n            {\r\n              name: \"authorization\",\r\n              value: \"Bearer \" + BingHelper.translateAuth,\r\n            },\r\n          ];\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @param {string[][]} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n     * @param {boolean} dontSortResults - This parameter is not needed in this translation service\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      /** @type {{search: string, replace: string}[]} */\r\n      const replacements = [\r\n        {\r\n          search: \"auto\",\r\n          replace: \"auto-detect\",\r\n        },\r\n        {\r\n          search: \"zh-CN\",\r\n          replace: \"zh-Hans\",\r\n        },\r\n        {\r\n          search: \"zh-TW\",\r\n          replace: \"zh-Hant\",\r\n        },\r\n        {\r\n          search: \"tl\",\r\n          replace: \"fil\",\r\n        },\r\n        {\r\n          search: \"hmn\",\r\n          replace: \"mww\",\r\n        },\r\n        {\r\n          search: \"ku\",\r\n          replace: \"kmr\",\r\n        },\r\n        {\r\n          search: \"ckb\",\r\n          replace: \"ku\",\r\n        },\r\n        {\r\n          search: \"mn\",\r\n          replace: \"mn-Cyrl\",\r\n        },\r\n        {\r\n          search: \"no\",\r\n          replace: \"nb\",\r\n        },\r\n        {\r\n          search: \"lg\",\r\n          replace: \"lug\",\r\n        },\r\n        {\r\n          search: \"sr\",\r\n          replace: \"sr-Cyrl\",\r\n        },\r\n        {\r\n          search: \"mni-Mtei\",\r\n          replace: \"mni\",\r\n        },\r\n      ];\r\n      replacements.forEach((r) => {\r\n        if (targetLanguage === r.search) {\r\n          targetLanguage = r.replace;\r\n        }\r\n        if (sourceLanguage === r.search) {\r\n          sourceLanguage = r.replace;\r\n        }\r\n      });\r\n\r\n      await BingHelper.findAuth();\r\n      if (!BingHelper.translateAuth) return;\r\n\r\n      return await super.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults\r\n      );\r\n    }\r\n  })();\r\n\r\n  const deeplService = new (class {\r\n    constructor() {\r\n      this.DeepLTab = null;\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} sourceLanguage - This parameter is not used\r\n     * @param {*} targetLanguage\r\n     * @param {*} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n     * @param {*} dontSaveInPersistentCache - This parameter is not used\r\n     * @param {*} dontSortResults - This parameter is not used\r\n     * @returns\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      if (targetLanguage === \"pt\") {\r\n        targetLanguage = \"pt-BR\";\r\n      } else if (targetLanguage === \"no\") {\r\n        targetLanguage = \"nb\";\r\n      } else if (targetLanguage == \"zh-CN\") {\r\n        targetLanguage = \"zh-Hans\";\r\n      } else if (targetLanguage == \"zh-TW\") {\r\n        targetLanguage = \"zh\";\r\n      }\r\n\r\n      return await new Promise((resolve) => {\r\n        const waitFirstTranslationResult = () => {\r\n          const listener = (request, sender, sendResponse) => {\r\n            if (request.action === \"DeepL_firstTranslationResult\") {\r\n              resolve([[request.result]]);\r\n              chrome.runtime.onMessage.removeListener(listener);\r\n            }\r\n          };\r\n          chrome.runtime.onMessage.addListener(listener);\r\n\r\n          setTimeout(() => {\r\n            chrome.runtime.onMessage.removeListener(listener);\r\n            resolve([[\"\"]]);\r\n          }, 8000);\r\n        };\r\n\r\n        if (this.DeepLTab) {\r\n          chrome.tabs.get(this.DeepLTab.id, (tab) => {\r\n            checkedLastError();\r\n            if (tab) {\r\n              //chrome.tabs.update(tab.id, {active: true})\r\n              chrome.tabs.sendMessage(\r\n                tab.id,\r\n                {\r\n                  action: \"translateTextWithDeepL\",\r\n                  text: sourceArray2d[0][0],\r\n                  targetLanguage,\r\n                },\r\n                {\r\n                  frameId: 0,\r\n                },\r\n                (response) => {\r\n                  checkedLastError();\r\n                  resolve([[response]]);\r\n                }\r\n              );\r\n            } else {\r\n              tabsCreate(\r\n                `https://www.deepl.com/#!${targetLanguage}!#${encodeURIComponent(\r\n                  sourceArray2d[0][0]\r\n                )}`,\r\n                (tab) => {\r\n                  this.DeepLTab = tab;\r\n                  waitFirstTranslationResult();\r\n                }\r\n              );\r\n              // resolve([[\"\"]])\r\n            }\r\n          });\r\n        } else {\r\n          tabsCreate(\r\n            `https://www.deepl.com/#!${targetLanguage}!#${encodeURIComponent(\r\n              sourceArray2d[0][0]\r\n            )}`,\r\n            (tab) => {\r\n              this.DeepLTab = tab;\r\n              waitFirstTranslationResult();\r\n            }\r\n          );\r\n          // resolve([[\"\"]])\r\n        }\r\n      });\r\n    }\r\n  })();\r\n\r\n  /**\r\n   * Creates the libreTranslate translation service from URL and apiKey\r\n   * @param {string} url\r\n   * @param {string} apiKey\r\n   * @returns {Service} libreService\r\n   */\r\n  const createLibreService = (url, apiKey) => {\r\n    return new (class extends Service {\r\n      constructor() {\r\n        super(\r\n          \"libre\",\r\n          url,\r\n          \"POST\",\r\n          function cbTransformRequest(sourceArray) {\r\n            return sourceArray[0];\r\n          },\r\n          function cbParseResponse(response) {\r\n            return [\r\n              {\r\n                text: response.translatedText,\r\n                detectedLanguage: response.detectedLanguage.language,\r\n              },\r\n            ];\r\n          },\r\n          function cbTransformResponse(result, dontSortResults) {\r\n            return [result];\r\n          },\r\n          null,\r\n          function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n            const params = new URLSearchParams();\r\n            params.append(\"q\", requests[0].originalText);\r\n            params.append(\"source\", sourceLanguage);\r\n            params.append(\"target\", targetLanguage);\r\n            params.append(\"format\", \"text\");\r\n            params.append(\"api_key\", apiKey);\r\n            return params.toString();\r\n          },\r\n          function cbGetExtraHeaders() {\r\n            return [\r\n              {\r\n                name: \"Content-Type\",\r\n                value: \"application/x-www-form-urlencoded\",\r\n              },\r\n            ];\r\n          }\r\n        );\r\n      }\r\n\r\n      /**\r\n       *\r\n       * @param {string} sourceLanguage - This parameter is not used\r\n       * @param {*} targetLanguage\r\n       * @param {*} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n       * @param {*} dontSaveInPersistentCache - This parameter is not used\r\n       * @param {*} dontSortResults - This parameter is not used\r\n       * @returns\r\n       */\r\n      /*\r\n      async translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults = false\r\n      ) {\r\n      }\r\n      //*/\r\n    })();\r\n  };\r\n\r\n  /**\r\n   * Creates the DeepLFreeApi translation service\r\n   * @param {string} apiKey\r\n   * @returns {Service} libreService\r\n   */\r\n  const createDeeplFreeApiService = (apiKey) => {\r\n    return new (class extends Service {\r\n      constructor() {\r\n        super(\r\n          \"deepl\",\r\n          \"https://api-free.deepl.com/v2/translate\",\r\n          \"POST\",\r\n          function cbTransformRequest(sourceArray) {\r\n            return sourceArray[0];\r\n          },\r\n          function cbParseResponse(response) {\r\n            return [\r\n              {\r\n                text: response.translations[0].text,\r\n                detectedLanguage:\r\n                  response.translations[0].detected_source_language,\r\n              },\r\n            ];\r\n          },\r\n          function cbTransformResponse(result, dontSortResults) {\r\n            return [result];\r\n          },\r\n          null,\r\n          function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n            const params = new URLSearchParams();\r\n            params.append(\"text\", requests[0].originalText);\r\n            if (sourceLanguage !== \"auto\") {\r\n              // params.append(\"source_lang\", sourceLanguage);\r\n            }\r\n            if (targetLanguage === \"pt\") {\r\n              targetLanguage = \"pt-BR\";\r\n            } else if (targetLanguage === \"no\") {\r\n              targetLanguage = \"nb\";\r\n            } else if (targetLanguage.startsWith(\"zh-\")) {\r\n              targetLanguage = \"zh\";\r\n            } else if (targetLanguage.startsWith(\"fr-\")) {\r\n              targetLanguage = \"fr\";\r\n            }\r\n            params.append(\"target_lang\", targetLanguage);\r\n            return params.toString();\r\n          },\r\n          function cbGetExtraHeaders() {\r\n            return [\r\n              {\r\n                name: \"Content-Type\",\r\n                value: \"application/x-www-form-urlencoded\",\r\n              },\r\n              {\r\n                name: \"Authorization\",\r\n                value: \"DeepL-Auth-Key \" + apiKey,\r\n              },\r\n            ];\r\n          }\r\n        );\r\n      }\r\n\r\n      /**\r\n       *\r\n       * @param {string} sourceLanguage - This parameter is not used\r\n       * @param {*} targetLanguage\r\n       * @param {*} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n       * @param {*} dontSaveInPersistentCache - This parameter is not used\r\n       * @param {*} dontSortResults - This parameter is not used\r\n       * @returns\r\n       */\r\n      /*\r\n      async translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults = false\r\n      ) {\r\n      }\r\n      //*/\r\n    })();\r\n  };\r\n\r\n  /** @type {Map<string, Service>} */\r\n  const serviceList = new Map();\r\n\r\n  serviceList.set(\"google\", googleService);\r\n  serviceList.set(\"yandex\", yandexService);\r\n  serviceList.set(\"bing\", bingService);\r\n  serviceList.set(\r\n    \"deepl\",\r\n    /** @type {Service} */ /** @type {?} */ (deeplService)\r\n  );\r\n\r\n  /**\r\n   * Get translation service from your name\r\n   * Make sure the service is enabled\r\n   * @param {string} serviceName\r\n   * @returns {Service} service\r\n   */\r\n  const getSafeServiceByName = (serviceName) => {\r\n    if (\r\n      twpConfig.get(\"enabledServices\").includes(serviceName) ||\r\n      twpConfig.get(\"customServices\").find((cs) => cs.name === serviceName)\r\n    ) {\r\n      return serviceList.get(serviceName);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  translationService.translateHTML = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    sourceArray2d,\r\n    dontSaveInPersistentCache = false,\r\n    dontSortResults = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      true\r\n    );\r\n    const service = getSafeServiceByName(serviceName);\r\n    return await service.translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults\r\n    );\r\n  };\r\n\r\n  translationService.translateText = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    sourceArray,\r\n    dontSaveInPersistentCache = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      false\r\n    );\r\n    const service = getSafeServiceByName(serviceName);\r\n    return (\r\n      await service.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray.map((text) => [text]),\r\n        dontSaveInPersistentCache\r\n      )\r\n    ).map((result) => result[0]);\r\n  };\r\n\r\n  translationService.translateSingleText = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    originalText,\r\n    dontSaveInPersistentCache = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      false\r\n    );\r\n    const service = getSafeServiceByName(serviceName);\r\n    return (\r\n      await service.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        [[originalText]],\r\n        dontSaveInPersistentCache\r\n      )\r\n    )[0][0];\r\n  };\r\n\r\n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n    // If the translation request came from an incognito window, the translation should not be cached on disk.\r\n    let dontSaveInPersistentCache = true;\r\n    if (twpConfig.get(\"enableDiskCache\") !== \"yes\") {\r\n      dontSaveInPersistentCache = true;\r\n    } else {\r\n      dontSaveInPersistentCache = sender.tab ? sender.tab.incognito : false;\r\n    }\r\n\r\n    if (request.action === \"translateHTML\") {\r\n      translationService\r\n        .translateHTML(\r\n          request.translationService,\r\n          request.sourceLanguage,\r\n          request.targetLanguage,\r\n          request.sourceArray2d,\r\n          dontSaveInPersistentCache,\r\n          request.dontSortResults\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"translateText\") {\r\n      translationService\r\n        .translateText(\r\n          request.translationService,\r\n          request.sourceLanguage,\r\n          request.targetLanguage,\r\n          request.sourceArray,\r\n          dontSaveInPersistentCache\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"translateSingleText\") {\r\n      translationService\r\n        .translateSingleText(\r\n          request.translationService,\r\n          request.sourceLanguage,\r\n          request.targetLanguage,\r\n          request.source,\r\n          dontSaveInPersistentCache\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"removeTranslationsWithError\") {\r\n      serviceList.forEach((service) => {\r\n        if (service.removeTranslationsWithError) {\r\n          service.removeTranslationsWithError();\r\n        }\r\n      });\r\n    } else if (request.action === \"createLibreService\") {\r\n      serviceList.set(\r\n        \"libre\",\r\n        createLibreService(request.libre.url, request.libre.apiKey)\r\n      );\r\n    } else if (request.action === \"removeLibreService\") {\r\n      serviceList.delete(\"libre\");\r\n    } else if (request.action === \"createDeeplFreeApiService\") {\r\n      serviceList.set(\r\n        \"deepl\",\r\n        createDeeplFreeApiService(request.deepl_freeapi.apiKey)\r\n      );\r\n    } else if (request.action === \"removeDeeplFreeApiService\") {\r\n      serviceList.set(\r\n        \"deepl\",\r\n        /** @type {Service} */ /** @type {?} */ (deeplService)\r\n      );\r\n    }\r\n  });\r\n\r\n  twpConfig.onReady(function () {\r\n    if (twpConfig.get(\"customServices\").find((cs) => cs.name === \"libre\")) {\r\n      const libre = twpConfig\r\n        .get(\"customServices\")\r\n        .find((cs) => cs.name === \"libre\");\r\n      serviceList.set(\"libre\", createLibreService(libre.url, libre.apiKey));\r\n    }\r\n\r\n    if (\r\n      twpConfig.get(\"customServices\").find((cs) => cs.name === \"deepl_freeapi\")\r\n    ) {\r\n      const deepl_freeapi = twpConfig\r\n        .get(\"customServices\")\r\n        .find((cs) => cs.name === \"deepl_freeapi\");\r\n      serviceList.set(\"deepl\", createDeeplFreeApiService(deepl_freeapi.apiKey));\r\n    }\r\n\r\n    const proxyServers = twpConfig.get(\"proxyServers\");\r\n    if (proxyServers?.google?.translateServer) {\r\n      const url = new URL(googleService.baseURL);\r\n      url.host = proxyServers.google.translateServer;\r\n      googleService.baseURL = url.toString();\r\n    }\r\n  });\r\n\r\n  twpConfig.onChanged((name, newValue) => {\r\n    if (name === \"proxyServers\") {\r\n      if (newValue?.google?.translateServer) {\r\n        const url = new URL(googleService.baseURL);\r\n        url.host = newValue.google.translateServer;\r\n        googleService.baseURL = url.toString();\r\n      } else {\r\n        const url = new URL(googleService.baseURL);\r\n        url.host = \"translate.googleapis.com\";\r\n        googleService.baseURL = url.toString();\r\n      }\r\n    }\r\n  });\r\n\r\n  return translationService;\r\n})();\r\n"],"mappings":"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","ignoreList":[]}