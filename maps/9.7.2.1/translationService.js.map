{"version":3,"file":"../../background/translationService.js","names":["_classStaticPrivateFieldSpecSet","receiver","classConstructor","descriptor","value","_classCheckPrivateStaticAccess","_classCheckPrivateStaticFieldDescriptor","_classApplyDescriptorSet","set","call","writable","TypeError","_classStaticPrivateFieldSpecGet","_classApplyDescriptorGet","action","undefined","get","translationService","Utils","escapeHTML","unsafe","replace","unescapeHTML","GoogleHelper","googleTranslateTKK","shiftLeftOrRightThenSumOrXor","num","optString","i","length","acc","charAt","charCodeAt","Number","transformQuery","query","bytesArray","idx","charCode","calcHash","windowTkk","tkkSplited","split","tkkIndex","tkkKey","encondingRound","item","normalizedResult","toString","YandexHelper","translateSid","_translateSid","findSID","_findPromise","Promise","resolve","updateYandexSid","_lastRequestSidTime","date","Date","setMinutes","getMinutes","_SIDNotFound","getTime","now","http","XMLHttpRequest","open","send","onload","e","result","responseText","match","substring","onerror","onabort","ontimeout","console","error","finally","BingHelper","translateAuth","_translateAuth","findAuth","_authPromise","updateBingAuth","_lastRequestAuthTime","_AuthNotFound","Service","constructor","serviceName","baseURL","xhrMethod","cbTransformRequest","cbParseResponse","cbTransformResponse","cbGetExtraParameters","cbGetRequestBody","cbGetExtraHeaders","translationsInProgress","Map","removeTranslationsWithError","forEach","transInfo","key","status","delete","getRequests","sourceLanguage","targetLanguage","sourceArray2d","requests","currentTranslationsInProgress","currentRequest","currentSize","sourceArray","requestString","fixString","requestHash","join","progressInfo","push","promise_resolve","originalText","translatedText","detectedLanguage","_status","waitTranlate","cacheEntry","translationCache","makeRequest","reject","xhr","headers","header","setRequestHeader","name","responseType","event","response","translate","dontSaveInPersistentCache","dontSortResults","promises","request","then","results","text","catch","all","map","str","googleService","index","responseJson","indexOf","slice","sentences","sentenceStartIndex","sentenceFinalIndex","resultArray","lastEndPos","r","matchAll","fullText","fullLength","pos","aTag","insideText","outsideText","lastOutsideText","resultStartAtIndex","indexes","parseInt","filter","isNaN","finalResulArray","j","info","encodeURIComponent","yandexService","lang","startsWith","bingService","id","_r$detectedLanguage","translations","language","parser","DOMParser","doc","parseFromString","currText","body","childNodes","node","nodeName","textContent","JSON","stringify","replacements","search","deeplService","DeepLTab","waitFirstTranslationResult","listener","sender","sendResponse","chrome","runtime","onMessage","removeListener","addListener","setTimeout","tabs","tab","checkedLastError","sendMessage","frameId","create","url","serviceList","translateHTML","twpLang","getAlternativeService","service","translateText","translateSingleText","twpConfig","incognito","source"],"sources":["translationService.js"],"sourcesContent":["\"use strict\";\r\n\r\nconst translationService = (function () {\r\n  const translationService = {};\r\n\r\n  class Utils {\r\n    /**\r\n     * Replace the characters `& < > \" '` with `&amp; &lt; &gt; &quot; &#39;`.\r\n     * @param {string} unsafe\r\n     * @returns {string} escapedString\r\n     */\r\n    static escapeHTML(unsafe) {\r\n      return unsafe\r\n        .replace(/\\&/g, \"&amp;\")\r\n        .replace(/\\</g, \"&lt;\")\r\n        .replace(/\\>/g, \"&gt;\")\r\n        .replace(/\\\"/g, \"&quot;\")\r\n        .replace(/\\'/g, \"&#39;\");\r\n    }\r\n\r\n    /**\r\n     * Replace the characters `&amp; &lt; &gt; &quot; &#39;` with `& < > \" '`.\r\n     * @param {string} unsafe\r\n     * @returns {string} unescapedString\r\n     */\r\n    static unescapeHTML(unsafe) {\r\n      return unsafe\r\n        .replace(/\\&amp;/g, \"&\")\r\n        .replace(/\\&lt;/g, \"<\")\r\n        .replace(/\\&gt;/g, \">\")\r\n        .replace(/\\&quot;/g, '\"')\r\n        .replace(/\\&\\#39;/g, \"'\");\r\n    }\r\n  }\r\n\r\n  class GoogleHelper {\r\n    static get googleTranslateTKK() {\r\n      return \"448487.932609646\";\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} num\r\n     * @param {string} optString\r\n     * @returns {number}\r\n     */\r\n    static shiftLeftOrRightThenSumOrXor(num, optString) {\r\n      for (let i = 0; i < optString.length - 2; i += 3) {\r\n        /** @type {string|number} */\r\n        let acc = optString.charAt(i + 2);\r\n        if (\"a\" <= acc) {\r\n          acc = acc.charCodeAt(0) - 87;\r\n        } else {\r\n          acc = Number(acc);\r\n        }\r\n        if (optString.charAt(i + 1) == \"+\") {\r\n          acc = num >>> acc;\r\n        } else {\r\n          acc = num << acc;\r\n        }\r\n        if (optString.charAt(i) == \"+\") {\r\n          num += acc & 4294967295;\r\n        } else {\r\n          num ^= acc;\r\n        }\r\n      }\r\n      return num;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} query\r\n     * @returns {Array<number>}\r\n     */\r\n    static transformQuery(query) {\r\n      /** @type {Array<number>} */\r\n      const bytesArray = [];\r\n      let idx = 0;\r\n      for (let i = 0; i < query.length; i++) {\r\n        let charCode = query.charCodeAt(i);\r\n\r\n        if (128 > charCode) {\r\n          bytesArray[idx++] = charCode;\r\n        } else {\r\n          if (2048 > charCode) {\r\n            bytesArray[idx++] = (charCode >> 6) | 192;\r\n          } else {\r\n            if (\r\n              55296 == (charCode & 64512) &&\r\n              i + 1 < query.length &&\r\n              56320 == (query.charCodeAt(i + 1) & 64512)\r\n            ) {\r\n              charCode =\r\n                65536 +\r\n                ((charCode & 1023) << 10) +\r\n                (query.charCodeAt(++i) & 1023);\r\n              bytesArray[idx++] = (charCode >> 18) | 240;\r\n              bytesArray[idx++] = ((charCode >> 12) & 63) | 128;\r\n            } else {\r\n              bytesArray[idx++] = (charCode >> 12) | 224;\r\n            }\r\n            bytesArray[idx++] = ((charCode >> 6) & 63) | 128;\r\n          }\r\n          bytesArray[idx++] = (charCode & 63) | 128;\r\n        }\r\n      }\r\n      return bytesArray;\r\n    }\r\n\r\n    /**\r\n     * Calculates the hash (TK) of a query for google translator.\r\n     * @param {string} query\r\n     * @returns {string}\r\n     */\r\n    static calcHash(query) {\r\n      const windowTkk = GoogleHelper.googleTranslateTKK;\r\n      const tkkSplited = windowTkk.split(\".\");\r\n      const tkkIndex = Number(tkkSplited[0]) || 0;\r\n      const tkkKey = Number(tkkSplited[1]) || 0;\r\n\r\n      const bytesArray = GoogleHelper.transformQuery(query);\r\n\r\n      let encondingRound = tkkIndex;\r\n      for (const item of bytesArray) {\r\n        encondingRound += item;\r\n        encondingRound = GoogleHelper.shiftLeftOrRightThenSumOrXor(\r\n          encondingRound,\r\n          \"+-a^+6\"\r\n        );\r\n      }\r\n      encondingRound = GoogleHelper.shiftLeftOrRightThenSumOrXor(\r\n        encondingRound,\r\n        \"+-3^+b+-f\"\r\n      );\r\n\r\n      encondingRound ^= tkkKey;\r\n      if (encondingRound <= 0) {\r\n        encondingRound = (encondingRound & 2147483647) + 2147483648;\r\n      }\r\n\r\n      const normalizedResult = encondingRound % 1000000;\r\n      return normalizedResult.toString() + \".\" + (normalizedResult ^ tkkIndex);\r\n    }\r\n  }\r\n\r\n  class YandexHelper {\r\n    /** @type {number} */\r\n    static #lastRequestSidTime = null;\r\n    /** @type {string} */\r\n    static #translateSid = null;\r\n    /** @type {boolean} */\r\n    static #SIDNotFound = false;\r\n    /** @type {Promise<void>} */\r\n    static #findPromise = null;\r\n\r\n    static get translateSid() {\r\n      return YandexHelper.#translateSid;\r\n    }\r\n\r\n    /**\r\n     * Find the SID of Yandex Translator. The SID value is used in translation requests.\r\n     * @returns {Promise<void>}\r\n     */\r\n    static async findSID() {\r\n      if (YandexHelper.#findPromise) return await YandexHelper.#findPromise;\r\n      YandexHelper.#findPromise = new Promise((resolve) => {\r\n        let updateYandexSid = false;\r\n        if (YandexHelper.#lastRequestSidTime) {\r\n          const date = new Date();\r\n          if (YandexHelper.#translateSid) {\r\n            date.setMinutes(date.getMinutes() - 30);\r\n          } else if (YandexHelper.#SIDNotFound) {\r\n            date.setMinutes(date.getMinutes() - 5);\r\n          } else {\r\n            date.setMinutes(date.getMinutes() - 1);\r\n          }\r\n          if (date.getTime() > YandexHelper.#lastRequestSidTime) {\r\n            updateYandexSid = true;\r\n          }\r\n        } else {\r\n          updateYandexSid = true;\r\n        }\r\n\r\n        if (updateYandexSid) {\r\n          YandexHelper.#lastRequestSidTime = Date.now();\r\n\r\n          const http = new XMLHttpRequest();\r\n          http.open(\r\n            \"GET\",\r\n            \"https://translate.yandex.net/website-widget/v1/widget.js?widgetId=ytWidget&pageLang=es&widgetTheme=light&autoMode=false\"\r\n          );\r\n          http.send();\r\n          http.onload = (e) => {\r\n            const result = http.responseText.match(/sid\\:\\s\\'[0-9a-f\\.]+/);\r\n            if (result && result[0] && result[0].length > 7) {\r\n              YandexHelper.#translateSid = result[0].substring(6);\r\n              YandexHelper.#SIDNotFound = false;\r\n            } else {\r\n              YandexHelper.#SIDNotFound = true;\r\n            }\r\n            resolve();\r\n          };\r\n          http.onerror =\r\n            http.onabort =\r\n            http.ontimeout =\r\n              (e) => {\r\n                console.error(e);\r\n                resolve();\r\n              };\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n\r\n      YandexHelper.#findPromise.finally(() => {\r\n        YandexHelper.#findPromise = null;\r\n      });\r\n\r\n      return await YandexHelper.#findPromise;\r\n    }\r\n  }\r\n\r\n  class BingHelper {\r\n    /** @type {number} */\r\n    static #lastRequestAuthTime = null;\r\n    /** @type {string} */\r\n    static #translateAuth = null;\r\n    /** @type {boolean} */\r\n    static #AuthNotFound = false;\r\n    /** @type {Promise<void>} */\r\n    static #authPromise = null;\r\n\r\n    static get translateAuth() {\r\n      return BingHelper.#translateAuth;\r\n    }\r\n\r\n    /**\r\n     * Find the SID (IID and IG) of Bing Translator. The SID value is used in translation requests.\r\n     * @returns {Promise<void>}\r\n     */\r\n    static async findAuth() {\r\n      if (BingHelper.#authPromise) return await BingHelper.#authPromise;\r\n\r\n      BingHelper.#authPromise = new Promise((resolve) => {\r\n        let updateBingAuth = false;\r\n        if (BingHelper.#lastRequestAuthTime) {\r\n          const date = new Date();\r\n          if (BingHelper.#translateAuth) {\r\n            date.setMinutes(date.getMinutes() - 30);\r\n          } else if (BingHelper.#AuthNotFound) {\r\n            date.setMinutes(date.getMinutes() - 5);\r\n          } else {\r\n            date.setMinutes(date.getMinutes() - 2);\r\n          }\r\n          if (date.getTime() > BingHelper.#lastRequestAuthTime) {\r\n            updateBingAuth = true;\r\n          }\r\n        } else {\r\n          updateBingAuth = true;\r\n        }\r\n\r\n        if (updateBingAuth) {\r\n          BingHelper.#lastRequestAuthTime = Date.now();\r\n\r\n          const http = new XMLHttpRequest();\r\n          http.open(\"GET\", \"https://edge.microsoft.com/translate/auth\");\r\n          http.send();\r\n          http.onload = (e) => {\r\n            if (http.responseText && http.responseText.length > 1) {\r\n              BingHelper.#translateAuth = http.responseText;\r\n              BingHelper.#AuthNotFound = false;\r\n            } else {\r\n              BingHelper.#AuthNotFound = true;\r\n            }\r\n            resolve();\r\n          };\r\n          http.onerror =\r\n            http.onabort =\r\n            http.ontimeout =\r\n              (e) => {\r\n                console.error(e);\r\n                resolve();\r\n              };\r\n        } else {\r\n          resolve();\r\n        }\r\n      });\r\n\r\n      BingHelper.#authPromise.finally(() => {\r\n        BingHelper.#authPromise = null;\r\n      });\r\n\r\n      return await BingHelper.#authPromise;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a string with additional parameters to be concatenated to the request URL.\r\n   * @callback callback_cbParameters\r\n   * @param {string} sourceLanguage\r\n   * @param {string} targetLanguage\r\n   * @param {Array<TranslationInfo>} requests\r\n   * @returns {string}\r\n   */\r\n\r\n  /**\r\n   * Takes `sourceArray` and returns a request string to the translation service.\r\n   * @callback callback_cbTransformRequest\r\n   * @param {string[]} sourceArray\r\n   * @returns {string}\r\n   */\r\n\r\n  /**\r\n   * @typedef {{text: string, detectedLanguage: string}} Service_Single_Result_Response\r\n   */\r\n\r\n  /**\r\n   * Receives the response from the *http request* and returns `Service_Single_Result_Response[]`.\r\n   *\r\n   * Returns a string with the body of a request of type **POST**.\r\n   * @callback callback_cbParseResponse\r\n   * @param {Object} response\r\n   * @returns {Array<Service_Single_Result_Response>}\r\n   */\r\n\r\n  /**\r\n   * Takes a string formatted with the translated text and returns a `resultArray`.\r\n   * @callback callback_cbTransformResponse\r\n   * @param {String} response\r\n   * @param {boolean} dontSortResults\r\n   * @returns {string[]} resultArray\r\n   */\r\n\r\n  /**\r\n   * Return extra headers for the request.\r\n   * @callback callback_cbGetExtraHeaders\r\n   * @returns {Array<{name: string, value: string}>} headers\r\n   */\r\n\r\n  /** @typedef {\"complete\" | \"translating\" | \"error\"} TranslationStatus */\r\n  /**\r\n   * @typedef {Object} TranslationInfo\r\n   * @property {String} originalText\r\n   * @property {String} translatedText\r\n   * @property {String} detectedLanguage\r\n   * @property {TranslationStatus} status\r\n   * @property {Promise<void>} waitTranlate\r\n   */\r\n\r\n  /**\r\n   * Base class to create new translation services.\r\n   */\r\n  class Service {\r\n    /**\r\n     * Initializes the **Service** class with information about the new translation service.\r\n     * @param {string} serviceName\r\n     * @param {string} baseURL\r\n     * @param {\"GET\" | \"POST\"} xhrMethod\r\n     * @param {callback_cbTransformRequest} cbTransformRequest Takes `sourceArray` and returns a request string to the translation service.\r\n     * @param {callback_cbParseResponse} cbParseResponse Receives the response from the *http request* and returns `Service_Single_Result_Response[]`.\r\n     * @param {callback_cbTransformResponse} cbTransformResponse Takes a string formatted with the translated text and returns a `resultArray`.\r\n     * @param {callback_cbParameters} cbGetExtraParameters Returns a string with additional parameters to be concatenated to the request URL.\r\n     * @param {callback_cbParameters} cbGetRequestBody Returns a string with the body of a request of type **POST**.\r\n     * @param {callback_cbGetExtraHeaders} cbGetExtraHeaders Return extra headers for the request.\r\n     */\r\n    constructor(\r\n      serviceName,\r\n      baseURL,\r\n      xhrMethod = \"GET\",\r\n      cbTransformRequest,\r\n      cbParseResponse,\r\n      cbTransformResponse,\r\n      cbGetExtraParameters = null,\r\n      cbGetRequestBody = null,\r\n      cbGetExtraHeaders = null\r\n    ) {\r\n      this.serviceName = serviceName;\r\n      this.baseURL = baseURL;\r\n      this.xhrMethod = xhrMethod;\r\n      this.cbTransformRequest = cbTransformRequest;\r\n      this.cbParseResponse = cbParseResponse;\r\n      this.cbTransformResponse = cbTransformResponse;\r\n      this.cbGetExtraParameters = cbGetExtraParameters;\r\n      this.cbGetRequestBody = cbGetRequestBody;\r\n      this.cbGetExtraHeaders = cbGetExtraHeaders;\r\n\r\n      /**\r\n       * @type {Map<string, TranslationInfo>}\r\n       *\r\n       * It works as an in-memory translation cache.\r\n       * Ensures that two identical requests share the same `XMLHttpRequest`.\r\n       * */\r\n      this.translationsInProgress = new Map();\r\n    }\r\n\r\n    /**\r\n     * Removes all translations with `status` **error** and are in `translationsInProgress`.\r\n     *\r\n     * Sometimes there is a device translation error due to internet connection problems.\r\n     * Clearing translationsInProgress ensures that the translation will be retried.\r\n     */\r\n    removeTranslationsWithError() {\r\n      this.translationsInProgress.forEach((transInfo, key) => {\r\n        if (transInfo.status === \"error\") {\r\n          this.translationsInProgress.delete(key);\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Receives the `sourceArray2d` parameter and prepares the requests.\r\n     * Calls `cbTransformRequest` for each `sourceArray` of `sourceArray2d`.\r\n     * The `currentTranslationsInProgress` array will be the **final result** with requests already completed or in progress. And the `requests` array will only contain the new requests that need to be made.\r\n     *\r\n     * Checks if there is already an identical request in progress or if it is already in the translation cache.\r\n     * If it doesn't exist, add it to `requests` to make a new *http request*.\r\n     *\r\n     * Requests longer than **800 characters** will be split into new requests.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<string[]>} sourceArray2d\r\n     * @returns {Promise<[Array<TranslationInfo[]>, TranslationInfo[]]>} `requests`, `currentTranslationsInProgress`\r\n     */\r\n    async getRequests(sourceLanguage, targetLanguage, sourceArray2d) {\r\n      /** @type {Array<TranslationInfo[]>} */\r\n      const requests = [];\r\n      /** @type {TranslationInfo[]} */\r\n      const currentTranslationsInProgress = [];\r\n\r\n      let currentRequest = [];\r\n      let currentSize = 0;\r\n\r\n      for (const sourceArray of sourceArray2d) {\r\n        const requestString = this.fixString(\r\n          this.cbTransformRequest(sourceArray)\r\n        );\r\n        const requestHash = [\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requestString,\r\n        ].join(\", \");\r\n\r\n        const progressInfo = this.translationsInProgress.get(requestHash);\r\n        if (progressInfo) {\r\n          currentTranslationsInProgress.push(progressInfo);\r\n        } else {\r\n          /** @type {TranslationStatus} */\r\n          let status = \"translating\";\r\n          /** @type {() => void} */\r\n          let promise_resolve = null;\r\n\r\n          /** @type {TranslationInfo} */\r\n          const progressInfo = {\r\n            originalText: requestString,\r\n            translatedText: null,\r\n            detectedLanguage: null,\r\n            get status() {\r\n              return status;\r\n            },\r\n            set status(_status) {\r\n              status = _status;\r\n              promise_resolve();\r\n            },\r\n            waitTranlate: new Promise((resolve) => (promise_resolve = resolve)),\r\n          };\r\n\r\n          currentTranslationsInProgress.push(progressInfo);\r\n          this.translationsInProgress.set(requestHash, progressInfo);\r\n\r\n          //cast\r\n          const cacheEntry = await translationCache.get(\r\n            this.serviceName,\r\n            sourceLanguage,\r\n            targetLanguage,\r\n            requestString\r\n          );\r\n          if (cacheEntry) {\r\n            progressInfo.translatedText = cacheEntry.translatedText;\r\n            progressInfo.detectedLanguage = cacheEntry.detectedLanguage;\r\n            progressInfo.status = \"complete\";\r\n            //this.translationsInProgress.delete([sourceLanguage, targetLanguage, requestString])\r\n          } else {\r\n            currentRequest.push(progressInfo);\r\n            currentSize += progressInfo.originalText.length;\r\n            if (currentSize > 800) {\r\n              requests.push(currentRequest);\r\n              currentSize = 0;\r\n              currentRequest = [];\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentRequest.length > 0) {\r\n        requests.push(currentRequest);\r\n        currentRequest = [];\r\n        currentSize = 0;\r\n      }\r\n\r\n      return [requests, currentTranslationsInProgress];\r\n    }\r\n\r\n    /**\r\n     * Makes a request using the *XMLHttpRequest* API. Returns a promise that will be resolved with the result of the request. If the request fails, the promise will be rejected.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<TranslationInfo>} requests\r\n     * @returns {Promise<*>}\r\n     */\r\n    async makeRequest(sourceLanguage, targetLanguage, requests) {\r\n      return await new Promise((resolve, reject) => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(\r\n          this.xhrMethod,\r\n          this.baseURL +\r\n            (this.cbGetExtraParameters\r\n              ? this.cbGetExtraParameters(\r\n                  sourceLanguage,\r\n                  targetLanguage,\r\n                  requests\r\n                )\r\n              : \"\")\r\n        );\r\n\r\n        if (this.cbGetExtraHeaders) {\r\n          const headers = this.cbGetExtraHeaders();\r\n          headers.forEach((header) => {\r\n            xhr.setRequestHeader(header.name, header.value);\r\n          });\r\n        }\r\n\r\n        xhr.responseType = \"json\";\r\n\r\n        xhr.onload = (event) => {\r\n          resolve(xhr.response);\r\n        };\r\n\r\n        xhr.onerror =\r\n          xhr.onabort =\r\n          xhr.ontimeout =\r\n            (event) => {\r\n              console.error(event);\r\n              reject();\r\n            };\r\n\r\n        xhr.send(\r\n          this.cbGetExtraParameters\r\n            ? this.cbGetRequestBody(sourceLanguage, targetLanguage, requests)\r\n            : undefined\r\n        );\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Translates the `sourceArray2d`.\r\n     *\r\n     * If `dontSaveInPersistentCache` is **true** then the translation result will not be saved in the on-disk translation cache, only in the in-memory cache.\r\n     *\r\n     * The `dontSortResults` parameter is only valid when using the ***google*** translation service, if its value is **true** then the translation result will not be sorted.\r\n     * @param {string} sourceLanguage\r\n     * @param {string} targetLanguage\r\n     * @param {Array<string[]>} sourceArray2d\r\n     * @param {boolean} dontSaveInPersistentCache\r\n     * @param {boolean} dontSortResults\r\n     * @returns {Promise<string[][]>}\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache = false,\r\n      dontSortResults = false\r\n    ) {\r\n      const [requests, currentTranslationsInProgress] = await this.getRequests(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d\r\n      );\r\n      /** @type {Promise<void>[]} */\r\n      const promises = [];\r\n\r\n      for (const request of requests) {\r\n        promises.push(\r\n          this.makeRequest(sourceLanguage, targetLanguage, request)\r\n            .then((response) => {\r\n              const results = this.cbParseResponse(response);\r\n              for (const idx in request) {\r\n                const result = results[idx];\r\n                this.cbTransformResponse(result.text, dontSortResults); // apenas para gerar error\r\n                const transInfo = request[idx];\r\n                transInfo.detectedLanguage = result.detectedLanguage || \"und\";\r\n                transInfo.translatedText = result.text;\r\n                transInfo.status = \"complete\";\r\n\r\n                if (\r\n                  dontSaveInPersistentCache === false &&\r\n                  transInfo.translatedText\r\n                ) {\r\n                  translationCache.set(\r\n                    this.serviceName,\r\n                    sourceLanguage,\r\n                    targetLanguage,\r\n                    transInfo.originalText,\r\n                    transInfo.translatedText,\r\n                    transInfo.detectedLanguage\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              console.error(e);\r\n              for (const transInfo of request) {\r\n                transInfo.status = \"error\";\r\n                //this.translationsInProgress.delete([sourceLanguage, targetLanguage, transInfo.originalText])\r\n              }\r\n            })\r\n        );\r\n      }\r\n      await Promise.all(\r\n        currentTranslationsInProgress.map((transInfo) => transInfo.waitTranlate)\r\n      );\r\n      return currentTranslationsInProgress.map((transInfo) =>\r\n        this.cbTransformResponse(transInfo.translatedText, dontSortResults)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * https://github.com/FilipePS/Traduzir-paginas-web/issues/484\r\n     * @param {string} str\r\n     * @returns {string} fixedStr\r\n     */\r\n    fixString(str) {\r\n      return str.replace(/\\u200b/g, \" \");\r\n    }\r\n  }\r\n\r\n  const googleService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"google\",\r\n        \"https://translate.googleapis.com/translate_a/t?anno=3&client=te&v=1.0&format=html\",\r\n        \"POST\",\r\n        function cbTransformRequest(sourceArray) {\r\n          sourceArray = sourceArray.map((text) => Utils.escapeHTML(text));\r\n          if (sourceArray.length > 1) {\r\n            sourceArray = sourceArray.map(\r\n              (text, index) => `<a i=${index}>${text}</a>`\r\n            );\r\n          }\r\n          // the <pre> tag is to preserve the text formating\r\n          return `<pre>${sourceArray.join(\"\")}</pre>`;\r\n        },\r\n        function cbParseResponse(response) {\r\n          /** @type {[Service_Single_Result_Response]} */\r\n          let responseJson;\r\n          if (typeof response === \"string\") {\r\n            responseJson = [{ text: response, detectedLanguage: null }];\r\n          } else if (typeof response[0] === \"string\") {\r\n            responseJson = response.map(\r\n              /** @returns {Service_Single_Result_Response} */ (\r\n                /** @type {string} */ value\r\n              ) => ({ text: value, detectedLanguage: null })\r\n            );\r\n          } else {\r\n            responseJson = response.map(\r\n              /** @returns {Service_Single_Result_Response} */ (\r\n                /** @type {[string, string]} */ value\r\n              ) => ({ text: value[0], detectedLanguage: value[1] })\r\n            );\r\n          }\r\n          return responseJson;\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          // remove the <pre> tag from the response\r\n          if (result.indexOf(\"<pre\") !== -1) {\r\n            result = result.replace(\"</pre>\", \"\");\r\n            const index = result.indexOf(\">\");\r\n            result = result.slice(index + 1);\r\n          }\r\n\r\n          /** @type {string[]} */\r\n          const sentences = []; // each translated sentence is inside of <b> tag\r\n\r\n          // The main objective is to remove the original text of each sentense that is inside the <i> tags.\r\n          // Keeping only the <a> tags\r\n          let idx = 0;\r\n          while (true) {\r\n            // each translated sentence is inside of <b> tag\r\n            const sentenceStartIndex = result.indexOf(\"<b>\", idx);\r\n            if (sentenceStartIndex === -1) break;\r\n\r\n            // the <i> tag is the original text in each sentence\r\n            const sentenceFinalIndex = result.indexOf(\r\n              \"<i>\",\r\n              sentenceStartIndex\r\n            );\r\n\r\n            if (sentenceFinalIndex === -1) {\r\n              sentences.push(result.slice(sentenceStartIndex + 3));\r\n              break;\r\n            } else {\r\n              sentences.push(\r\n                result.slice(sentenceStartIndex + 3, sentenceFinalIndex)\r\n              );\r\n            }\r\n            idx = sentenceFinalIndex;\r\n          }\r\n\r\n          // maybe the response don't have any sentence (does not have <i> and <b> tags), is this case just use de result\r\n          result = sentences.length > 0 ? sentences.join(\" \") : result;\r\n          // Remove the remaining </b> tags (usually the last)\r\n          result = result.replace(/\\<\\/b\\>/g, \"\");\r\n          // Capture each <a i={number}> and put it in an array, the </a> will be ignored\r\n          // maybe the same index appears several times\r\n          // maybe some text will be outside of <a i={number}> (Usually text before the first <a> tag, and some whitespace between the <a> tags),\r\n          // in this case, The outside text will be placed inside the <a i={number}> closer\r\n          // https://github.com/FilipePS/Traduzir-paginas-web/issues/449\r\n          // TODO lidar com tags dentro de tags e tags vazias\r\n          // https://de.wikipedia.org/wiki/Wikipedia:Hauptseite\r\n          // \"{\\\"originalText\\\":\\\"<pre><a i=0>\\\\nFür den </a><a i=1>37. Schreib­wettbewerb</a><a i=2> und den </a><a i=3>18. Miniaturwettbewerb</a><a i=4> können ab sofort Artikel nominiert werden.</a></pre>\\\",\\\"translatedText\\\":\\\"<pre><a i=0>\\\\n</a>Artigos já podem ser indicados <a i=0>para o</a> <a i=1>37º Concurso de Redação <a i=2>e</a></a> <a i=3><a i=4>18º</a> Concurso de Miniaturas</a> .</pre>\\\",\\\"detectedLanguage\\\":\\\"de\\\",\\\"status\\\":\\\"complete\\\",\\\"waitTranlate\\\":{}}\"\r\n          let resultArray = [];\r\n          let lastEndPos = 0;\r\n          for (const r of result.matchAll(\r\n            /(\\<a\\si\\=[0-9]+\\>)([^\\<\\>]*(?=\\<\\/a\\>))*/g\r\n          )) {\r\n            const fullText = r[0];\r\n            const fullLength = r[0].length;\r\n            const pos = r.index;\r\n            // if it is bigger then it has text outside the tags\r\n            if (pos > lastEndPos) {\r\n              const aTag = r[1];\r\n              const insideText = r[2] || \"\";\r\n              const outsideText = result\r\n                .slice(lastEndPos, pos)\r\n                .replace(/\\<\\/a\\>/g, \"\");\r\n              resultArray.push(aTag + outsideText + insideText);\r\n            } else {\r\n              resultArray.push(fullText);\r\n            }\r\n            lastEndPos = pos + fullLength;\r\n          }\r\n          // captures the final text outside the <a> tag\r\n          {\r\n            const lastOutsideText = result\r\n              .slice(lastEndPos)\r\n              .replace(/\\<\\/a\\>/g, \"\");\r\n            if (resultArray.length > 0) {\r\n              resultArray[resultArray.length - 1] += lastOutsideText;\r\n            }\r\n          }\r\n          // this is the old method, don't capture text outside of <a> tags\r\n          // let resultArray = result.match(\r\n          //   /\\<a\\si\\=[0-9]+\\>[^\\<\\>]*(?=\\<\\/a\\>)/g\r\n          // );\r\n\r\n          if (dontSortResults) {\r\n            // Should not sort the <a i={number}> of Google Translate result\r\n            // Instead of it, join the texts without sorting\r\n            // https://github.com/FilipePS/Traduzir-paginas-web/issues/163\r\n\r\n            if (resultArray && resultArray.length > 0) {\r\n              // get the text inside of <a i={number}>\r\n              // the indexes is not needed in this case\r\n              resultArray = resultArray.map((value) => {\r\n                const resultStartAtIndex = value.indexOf(\">\");\r\n                return value.slice(resultStartAtIndex + 1);\r\n              });\r\n            } else {\r\n              // maybe the response don't have any <a i={number}>\r\n              resultArray = [result];\r\n            }\r\n\r\n            // unescapeHTML\r\n            resultArray = resultArray.map((value) => Utils.unescapeHTML(value));\r\n\r\n            return resultArray;\r\n          } else {\r\n            // Sort Google translate results to keep the links with the correct name\r\n            // Note: the links may also disappear; http://web.archive.org/web/20220919162911/https://de.wikipedia.org/wiki/Wikipedia:Hauptseite\r\n            // each inline tag has a index starting with 0 <a i={number}>\r\n            let indexes;\r\n            if (resultArray && resultArray.length > 0) {\r\n              // get the indexed of <a i={number}>\r\n              indexes = resultArray\r\n                .map((value) => parseInt(value.match(/[0-9]+(?=\\>)/g)[0]))\r\n                .filter((value) => !isNaN(value));\r\n              // get the text inside of <a i={number}>\r\n              resultArray = resultArray.map((value) => {\r\n                const resultStartAtIndex = value.indexOf(\">\");\r\n                return value.slice(resultStartAtIndex + 1);\r\n              });\r\n            } else {\r\n              // maybe the response don't have any <a i={number}>\r\n              resultArray = [result];\r\n              indexes = [0];\r\n            }\r\n\r\n            // unescapeHTML\r\n            resultArray = resultArray.map((value) => Utils.unescapeHTML(value));\r\n\r\n            /** @type {string[]} */\r\n            const finalResulArray = [];\r\n            // sorte de results and put in finalResulArray\r\n            for (const j in indexes) {\r\n              if (finalResulArray[indexes[j]]) {\r\n                finalResulArray[indexes[j]] += \" \" + resultArray[j];\r\n              } else {\r\n                finalResulArray[indexes[j]] = resultArray[j];\r\n              }\r\n            }\r\n\r\n            return finalResulArray;\r\n          }\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return `&sl=${sourceLanguage}&tl=${targetLanguage}&tk=${GoogleHelper.calcHash(\r\n            requests.map((info) => info.originalText).join(\"\")\r\n          )}`;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return requests\r\n            .map((info) => `&q=${encodeURIComponent(info.originalText)}`)\r\n            .join(\"\");\r\n        },\r\n        function cbGetExtraHeaders() {\r\n          return [\r\n            {\r\n              name: \"Content-Type\",\r\n              value: \"application/x-www-form-urlencoded\",\r\n            },\r\n          ];\r\n        }\r\n      );\r\n    }\r\n  })();\r\n\r\n  const yandexService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"yandex\",\r\n        \"https://translate.yandex.net/api/v1/tr.json/translate?srv=tr-url-widget\",\r\n        \"GET\",\r\n        function cbTransformRequest(sourceArray) {\r\n          return sourceArray\r\n            .map((value) => Utils.escapeHTML(value))\r\n            .join(\"<wbr>\");\r\n        },\r\n        function cbParseResponse(response) {\r\n          const lang = response.lang;\r\n          const detectedLanguage = lang ? lang.split(\"-\")[0] : null;\r\n          return response.text.map(\r\n            /** @return {Service_Single_Result_Response} */ (\r\n              /** @type {string} */ text\r\n            ) => ({ text, detectedLanguage })\r\n          );\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          return result\r\n            .split(\"<wbr>\")\r\n            .map((value) => Utils.unescapeHTML(value));\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return `&id=${YandexHelper.translateSid}-0-0&format=html&lang=${\r\n            sourceLanguage === \"auto\" ? \"\" : sourceLanguage + \"-\"\r\n          }${targetLanguage}${requests\r\n            .map((info) => `&text=${encodeURIComponent(info.originalText)}`)\r\n            .join(\"\")}`;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return undefined;\r\n        },\r\n        function cbGetExtraHeaders() {\r\n          return [\r\n            {\r\n              name: \"Content-Type\",\r\n              value: \"application/x-www-form-urlencoded\",\r\n            },\r\n          ];\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @param {boolean} dontSortResults This parameter is not needed in this translation service\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      await YandexHelper.findSID();\r\n      if (!YandexHelper.translateSid) return;\r\n      if (sourceLanguage.startsWith(\"zh\")) sourceLanguage = \"zh\";\r\n      if (targetLanguage.startsWith(\"zh\")) targetLanguage = \"zh\";\r\n      return await super.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults\r\n      );\r\n    }\r\n  })();\r\n\r\n  const bingService = new (class extends Service {\r\n    constructor() {\r\n      super(\r\n        \"bing\",\r\n        \"https://api-edge.cognitive.microsofttranslator.com/translate?api-version=3.0&includeSentenceLength=true\",\r\n        \"POST\",\r\n        function cbTransformRequest(sourceArray) {\r\n          let id = 10;\r\n          return sourceArray\r\n            .map((value) => {\r\n              const r = `<b${id}>${Utils.escapeHTML(value)}</b${id}>`;\r\n              id++;\r\n              return r;\r\n            })\r\n            .join(\"\");\r\n        },\r\n        function cbParseResponse(response) {\r\n          return response.map(\r\n            /** @return {Service_Single_Result_Response} */\r\n            (/** @type {object} */ r) => ({\r\n              text: r.translations[0].text,\r\n              detectedLanguage: r.detectedLanguage?.language,\r\n            })\r\n          );\r\n        },\r\n        function cbTransformResponse(result, dontSortResults) {\r\n          const resultArray = []\r\n\r\n          const parser = new DOMParser();\r\n          const doc = parser.parseFromString(result, \"text/html\");\r\n          let currText = \"\"\r\n          doc.body.childNodes.forEach((node) => {\r\n            if (dontSortResults) {\r\n              if (node.nodeName == \"#text\") {\r\n                currText += node.textContent\r\n              } else {\r\n                resultArray.push(currText + node.textContent);\r\n                currText = \"\"\r\n              }\r\n            } else {\r\n              if (node.nodeName == \"#text\") {\r\n                currText += node.textContent\r\n              } else {\r\n                const id = parseInt(node.nodeName.slice(1)) - 10\r\n                resultArray[id] = currText + node.textContent;\r\n                currText = \"\"\r\n              }\r\n            }\r\n          });\r\n\r\n          return resultArray;\r\n        },\r\n        function cbGetExtraParameters(\r\n          sourceLanguage,\r\n          targetLanguage,\r\n          requests\r\n        ) {\r\n          return `${\r\n            sourceLanguage !== \"auto-detect\" ? \"&from=\" + sourceLanguage : \"\"\r\n          }&to=${targetLanguage}`;\r\n        },\r\n        function cbGetRequestBody(sourceLanguage, targetLanguage, requests) {\r\n          return JSON.stringify(\r\n            requests.map((info) => ({\r\n              text: info.originalText,\r\n            }))\r\n          );\r\n        },\r\n        function cbGetExtraHeaders() {\r\n          return [\r\n            {\r\n              name: \"Content-Type\",\r\n              value: \"application/json\",\r\n            },\r\n            {\r\n              name: \"authorization\",\r\n              value: \"Bearer \" + BingHelper.translateAuth,\r\n            },\r\n          ];\r\n        }\r\n      );\r\n    }\r\n\r\n    /**\r\n     * @param {string[][]} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n     * @param {boolean} dontSortResults - This parameter is not needed in this translation service\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      /** @type {{search: string, replace: string}[]} */\r\n      const replacements = [\r\n        {\r\n          search: \"auto\",\r\n          replace: \"auto-detect\",\r\n        },\r\n        {\r\n          search: \"zh-CN\",\r\n          replace: \"zh-Hans\",\r\n        },\r\n        {\r\n          search: \"zh-TW\",\r\n          replace: \"zh-Hant\",\r\n        },\r\n        {\r\n          search: \"tl\",\r\n          replace: \"fil\",\r\n        },\r\n        {\r\n          search: \"hmn\",\r\n          replace: \"mww\",\r\n        },\r\n        {\r\n          search: \"ckb\",\r\n          replace: \"kmr\",\r\n        },\r\n        {\r\n          search: \"mn\",\r\n          replace: \"mn-Cyrl\",\r\n        },\r\n        {\r\n          search: \"no\",\r\n          replace: \"nb\",\r\n        },\r\n        {\r\n          search: \"sr\",\r\n          replace: \"sr-Cyrl\",\r\n        },\r\n      ];\r\n      replacements.forEach((r) => {\r\n        if (targetLanguage === r.search) {\r\n          targetLanguage = r.replace;\r\n        }\r\n        if (sourceLanguage === r.search) {\r\n          sourceLanguage = r.replace;\r\n        }\r\n      });\r\n\r\n      await BingHelper.findAuth();\r\n      if (!BingHelper.translateAuth) return;\r\n\r\n      return await super.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        sourceArray2d,\r\n        dontSaveInPersistentCache,\r\n        dontSortResults\r\n      );\r\n    }\r\n  })();\r\n\r\n  const deeplService = new (class {\r\n    constructor() {\r\n      this.DeepLTab = null;\r\n    }\r\n    /**\r\n     *\r\n     * @param {string} sourceLanguage - This parameter is not used\r\n     * @param {*} targetLanguage\r\n     * @param {*} sourceArray2d - Only the string `sourceArray2d[0][0]` will be translated.\r\n     * @param {*} dontSaveInPersistentCache - This parameter is not used\r\n     * @param {*} dontSortResults - This parameter is not used\r\n     * @returns\r\n     */\r\n    async translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults = false\r\n    ) {\r\n      return await new Promise((resolve) => {\r\n        const waitFirstTranslationResult = () => {\r\n          const listener = (request, sender, sendResponse) => {\r\n            if (request.action === \"DeepL_firstTranslationResult\") {\r\n              resolve([[request.result]]);\r\n              chrome.runtime.onMessage.removeListener(listener);\r\n            }\r\n          };\r\n          chrome.runtime.onMessage.addListener(listener);\r\n\r\n          setTimeout(() => {\r\n            chrome.runtime.onMessage.removeListener(listener);\r\n            resolve([[\"\"]]);\r\n          }, 8000);\r\n        };\r\n\r\n        if (this.DeepLTab) {\r\n          chrome.tabs.get(this.DeepLTab.id, (tab) => {\r\n            checkedLastError();\r\n            if (tab) {\r\n              //chrome.tabs.update(tab.id, {active: true})\r\n              chrome.tabs.sendMessage(\r\n                tab.id,\r\n                {\r\n                  action: \"translateTextWithDeepL\",\r\n                  text: sourceArray2d[0][0],\r\n                  targetLanguage,\r\n                },\r\n                {\r\n                  frameId: 0,\r\n                },\r\n                (response) => {\r\n                  checkedLastError();\r\n                  resolve([[response]]);\r\n                }\r\n              );\r\n            } else {\r\n              chrome.tabs.create(\r\n                {\r\n                  url: `https://www.deepl.com/#!${targetLanguage}!#${encodeURIComponent(\r\n                    sourceArray2d[0][0]\r\n                  )}`,\r\n                },\r\n                (tab) => {\r\n                  this.DeepLTab = tab;\r\n                  waitFirstTranslationResult();\r\n                }\r\n              );\r\n              // resolve([[\"\"]])\r\n            }\r\n          });\r\n        } else {\r\n          chrome.tabs.create(\r\n            {\r\n              url: `https://www.deepl.com/#!${targetLanguage}!#${encodeURIComponent(\r\n                sourceArray2d[0][0]\r\n              )}`,\r\n            },\r\n            (tab) => {\r\n              this.DeepLTab = tab;\r\n              waitFirstTranslationResult();\r\n            }\r\n          );\r\n          // resolve([[\"\"]])\r\n        }\r\n      });\r\n    }\r\n  })();\r\n\r\n  /** @type {Map<string, Service>} */\r\n  const serviceList = new Map();\r\n\r\n  serviceList.set(\"google\", googleService);\r\n  serviceList.set(\"yandex\", yandexService);\r\n  serviceList.set(\"bing\", bingService);\r\n  serviceList.set(\r\n    \"deepl\",\r\n    /** @type {Service} */ /** @type {?} */ (deeplService)\r\n  );\r\n\r\n  translationService.translateHTML = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    sourceArray2d,\r\n    dontSaveInPersistentCache = false,\r\n    dontSortResults = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      true\r\n    );\r\n    const service = serviceList.get(serviceName) || serviceList.get(\"google\");\r\n    return await service.translate(\r\n      sourceLanguage,\r\n      targetLanguage,\r\n      sourceArray2d,\r\n      dontSaveInPersistentCache,\r\n      dontSortResults\r\n    );\r\n  };\r\n\r\n  translationService.translateText = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    sourceArray,\r\n    dontSaveInPersistentCache = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      false\r\n    );\r\n    const service = serviceList.get(serviceName) || serviceList.get(\"google\");\r\n    return (\r\n      await service.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        [sourceArray],\r\n        dontSaveInPersistentCache\r\n      )\r\n    )[0];\r\n  };\r\n\r\n  translationService.translateSingleText = async (\r\n    serviceName,\r\n    sourceLanguage,\r\n    targetLanguage,\r\n    originalText,\r\n    dontSaveInPersistentCache = false\r\n  ) => {\r\n    serviceName = twpLang.getAlternativeService(\r\n      targetLanguage,\r\n      serviceName,\r\n      false\r\n    );\r\n    const service = serviceList.get(serviceName) || serviceList.get(\"google\");\r\n    return (\r\n      await service.translate(\r\n        sourceLanguage,\r\n        targetLanguage,\r\n        [[originalText]],\r\n        dontSaveInPersistentCache\r\n      )\r\n    )[0][0];\r\n  };\r\n\r\n  chrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\r\n    // If the translation request came from an incognito window, the translation should not be cached on disk.\r\n    let dontSaveInPersistentCache = true\r\n    if (twpConfig.get(\"enableDiskCache\") !== \"yes\") {\r\n      dontSaveInPersistentCache = true\r\n    } else {\r\n      dontSaveInPersistentCache = sender.tab ? sender.tab.incognito : false;\r\n    }\r\n\r\n    if (request.action === \"translateHTML\") {\r\n      translationService\r\n        .translateHTML(\r\n          request.translationService,\r\n          \"auto\",\r\n          request.targetLanguage,\r\n          request.sourceArray2d,\r\n          dontSaveInPersistentCache,\r\n          request.dontSortResults\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"translateText\") {\r\n      translationService\r\n        .translateText(\r\n          request.translationService,\r\n          \"auto\",\r\n          request.targetLanguage,\r\n          request.sourceArray,\r\n          dontSaveInPersistentCache\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"translateSingleText\") {\r\n      translationService\r\n        .translateSingleText(\r\n          request.translationService,\r\n          \"auto\",\r\n          request.targetLanguage,\r\n          request.source,\r\n          dontSaveInPersistentCache\r\n        )\r\n        .then((results) => sendResponse(results))\r\n        .catch((e) => {\r\n          sendResponse();\r\n          console.error(e);\r\n        });\r\n\r\n      return true;\r\n    } else if (request.action === \"removeTranslationsWithError\") {\r\n      serviceList.forEach((service) => {\r\n        if (service.removeTranslationsWithError) {\r\n          service.removeTranslationsWithError();\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return translationService;\r\n})();\r\n"],"mappings":"AAAA,YAAY;;AAAC,SAAAA,gCAAAC,QAAA,EAAAC,gBAAA,EAAAC,UAAA,EAAAC,KAAA,IAAAC,8BAAA,CAAAJ,QAAA,EAAAC,gBAAA,GAAAI,uCAAA,CAAAH,UAAA,UAAAI,wBAAA,CAAAN,QAAA,EAAAE,UAAA,EAAAC,KAAA,UAAAA,KAAA;AAAA,SAAAG,yBAAAN,QAAA,EAAAE,UAAA,EAAAC,KAAA,QAAAD,UAAA,CAAAK,GAAA,IAAAL,UAAA,CAAAK,GAAA,CAAAC,IAAA,CAAAR,QAAA,EAAAG,KAAA,iBAAAD,UAAA,CAAAO,QAAA,cAAAC,SAAA,gDAAAR,UAAA,CAAAC,KAAA,GAAAA,KAAA;AAAA,SAAAQ,gCAAAX,QAAA,EAAAC,gBAAA,EAAAC,UAAA,IAAAE,8BAAA,CAAAJ,QAAA,EAAAC,gBAAA,GAAAI,uCAAA,CAAAH,UAAA,iBAAAU,wBAAA,CAAAZ,QAAA,EAAAE,UAAA;AAAA,SAAAG,wCAAAH,UAAA,EAAAW,MAAA,QAAAX,UAAA,KAAAY,SAAA,cAAAJ,SAAA,mBAAAG,MAAA;AAAA,SAAAT,+BAAAJ,QAAA,EAAAC,gBAAA,QAAAD,QAAA,KAAAC,gBAAA,cAAAS,SAAA;AAAA,SAAAE,yBAAAZ,QAAA,EAAAE,UAAA,QAAAA,UAAA,CAAAa,GAAA,WAAAb,UAAA,CAAAa,GAAA,CAAAP,IAAA,CAAAR,QAAA,YAAAE,UAAA,CAAAC,KAAA;AAEb,MAAMa,kBAAkB,GAAI,YAAY;EACtC,MAAMA,kBAAkB,GAAG,CAAC,CAAC;EAE7B,MAAMC,KAAK,CAAC;IACV;AACJ;AACA;AACA;AACA;IACI,OAAOC,UAAUA,CAACC,MAAM,EAAE;MACxB,OAAOA,MAAM,CACVC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CACvBA,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CACtBA,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CACtBA,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC,CACxBA,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC;IAC5B;;IAEA;AACJ;AACA;AACA;AACA;IACI,OAAOC,YAAYA,CAACF,MAAM,EAAE;MAC1B,OAAOA,MAAM,CACVC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CACvBA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CACtBA,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CACtBA,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC,CACxBA,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC;IAC7B;EACF;EAEA,MAAME,YAAY,CAAC;IACjB,WAAWC,kBAAkBA,CAAA,EAAG;MAC9B,OAAO,kBAAkB;IAC3B;;IAEA;AACJ;AACA;AACA;AACA;AACA;IACI,OAAOC,4BAA4BA,CAACC,GAAG,EAAEC,SAAS,EAAE;MAClD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAE;QAChD;QACA,IAAIE,GAAG,GAAGH,SAAS,CAACI,MAAM,CAACH,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,GAAG,IAAIE,GAAG,EAAE;UACdA,GAAG,GAAGA,GAAG,CAACE,UAAU,CAAC,CAAC,CAAC,GAAG,EAAE;QAC9B,CAAC,MAAM;UACLF,GAAG,GAAGG,MAAM,CAACH,GAAG,CAAC;QACnB;QACA,IAAIH,SAAS,CAACI,MAAM,CAACH,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE;UAClCE,GAAG,GAAGJ,GAAG,KAAKI,GAAG;QACnB,CAAC,MAAM;UACLA,GAAG,GAAGJ,GAAG,IAAII,GAAG;QAClB;QACA,IAAIH,SAAS,CAACI,MAAM,CAACH,CAAC,CAAC,IAAI,GAAG,EAAE;UAC9BF,GAAG,IAAII,GAAG,GAAG,UAAU;QACzB,CAAC,MAAM;UACLJ,GAAG,IAAII,GAAG;QACZ;MACF;MACA,OAAOJ,GAAG;IACZ;;IAEA;AACJ;AACA;AACA;AACA;IACI,OAAOQ,cAAcA,CAACC,KAAK,EAAE;MAC3B;MACA,MAAMC,UAAU,GAAG,EAAE;MACrB,IAAIC,GAAG,GAAG,CAAC;MACX,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGO,KAAK,CAACN,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,IAAIU,QAAQ,GAAGH,KAAK,CAACH,UAAU,CAACJ,CAAC,CAAC;QAElC,IAAI,GAAG,GAAGU,QAAQ,EAAE;UAClBF,UAAU,CAACC,GAAG,EAAE,CAAC,GAAGC,QAAQ;QAC9B,CAAC,MAAM;UACL,IAAI,IAAI,GAAGA,QAAQ,EAAE;YACnBF,UAAU,CAACC,GAAG,EAAE,CAAC,GAAIC,QAAQ,IAAI,CAAC,GAAI,GAAG;UAC3C,CAAC,MAAM;YACL,IACE,KAAK,KAAKA,QAAQ,GAAG,KAAK,CAAC,IAC3BV,CAAC,GAAG,CAAC,GAAGO,KAAK,CAACN,MAAM,IACpB,KAAK,KAAKM,KAAK,CAACH,UAAU,CAACJ,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAC1C;cACAU,QAAQ,GACN,KAAK,IACJ,CAACA,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC,IACxBH,KAAK,CAACH,UAAU,CAAC,EAAEJ,CAAC,CAAC,GAAG,IAAI,CAAC;cAChCQ,UAAU,CAACC,GAAG,EAAE,CAAC,GAAIC,QAAQ,IAAI,EAAE,GAAI,GAAG;cAC1CF,UAAU,CAACC,GAAG,EAAE,CAAC,GAAKC,QAAQ,IAAI,EAAE,GAAI,EAAE,GAAI,GAAG;YACnD,CAAC,MAAM;cACLF,UAAU,CAACC,GAAG,EAAE,CAAC,GAAIC,QAAQ,IAAI,EAAE,GAAI,GAAG;YAC5C;YACAF,UAAU,CAACC,GAAG,EAAE,CAAC,GAAKC,QAAQ,IAAI,CAAC,GAAI,EAAE,GAAI,GAAG;UAClD;UACAF,UAAU,CAACC,GAAG,EAAE,CAAC,GAAIC,QAAQ,GAAG,EAAE,GAAI,GAAG;QAC3C;MACF;MACA,OAAOF,UAAU;IACnB;;IAEA;AACJ;AACA;AACA;AACA;IACI,OAAOG,QAAQA,CAACJ,KAAK,EAAE;MACrB,MAAMK,SAAS,GAAGjB,YAAY,CAACC,kBAAkB;MACjD,MAAMiB,UAAU,GAAGD,SAAS,CAACE,KAAK,CAAC,GAAG,CAAC;MACvC,MAAMC,QAAQ,GAAGV,MAAM,CAACQ,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;MAC3C,MAAMG,MAAM,GAAGX,MAAM,CAACQ,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;MAEzC,MAAML,UAAU,GAAGb,YAAY,CAACW,cAAc,CAACC,KAAK,CAAC;MAErD,IAAIU,cAAc,GAAGF,QAAQ;MAC7B,KAAK,MAAMG,IAAI,IAAIV,UAAU,EAAE;QAC7BS,cAAc,IAAIC,IAAI;QACtBD,cAAc,GAAGtB,YAAY,CAACE,4BAA4B,CACxDoB,cAAc,EACd,QACF,CAAC;MACH;MACAA,cAAc,GAAGtB,YAAY,CAACE,4BAA4B,CACxDoB,cAAc,EACd,WACF,CAAC;MAEDA,cAAc,IAAID,MAAM;MACxB,IAAIC,cAAc,IAAI,CAAC,EAAE;QACvBA,cAAc,GAAG,CAACA,cAAc,GAAG,UAAU,IAAI,UAAU;MAC7D;MAEA,MAAME,gBAAgB,GAAGF,cAAc,GAAG,OAAO;MACjD,OAAOE,gBAAgB,CAACC,QAAQ,CAAC,CAAC,GAAG,GAAG,IAAID,gBAAgB,GAAGJ,QAAQ,CAAC;IAC1E;EACF;EAEA,MAAMM,YAAY,CAAC;IAUjB,WAAWC,YAAYA,CAAA,EAAG;MACxB,OAAAtC,+BAAA,CAAOqC,YAAY,EAXjBA,YAAY,EAAAE,aAAA;IAYhB;;IAEA;AACJ;AACA;AACA;IACI,aAAaC,OAAOA,CAAA,EAAG;MACrB,IAAAxC,+BAAA,CAAIqC,YAAY,EAnBdA,YAAY,EAAAI,YAAA,GAmBiB,OAAO,MAAAzC,+BAAA,CAAMqC,YAAY,EAnBtDA,YAAY,EAAAI,YAAA,CAmBuD;MACrErD,+BAAA,CAAAiD,YAAY,EApBVA,YAAY,EAAAI,YAAA,EAoBc,IAAIC,OAAO,CAAEC,OAAO,IAAK;QACnD,IAAIC,eAAe,GAAG,KAAK;QAC3B,IAAA5C,+BAAA,CAAIqC,YAAY,EAtBhBA,YAAY,EAAAQ,mBAAA,GAsB0B;UACpC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;UACvB,IAAA/C,+BAAA,CAAIqC,YAAY,EAxBlBA,YAAY,EAAAE,aAAA,GAwBsB;YAC9BO,IAAI,CAACE,UAAU,CAACF,IAAI,CAACG,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;UACzC,CAAC,MAAM,IAAAjD,+BAAA,CAAIqC,YAAY,EA1BzBA,YAAY,EAAAa,YAAA,GA0B4B;YACpCJ,IAAI,CAACE,UAAU,CAACF,IAAI,CAACG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;UACxC,CAAC,MAAM;YACLH,IAAI,CAACE,UAAU,CAACF,IAAI,CAACG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;UACxC;UACA,IAAIH,IAAI,CAACK,OAAO,CAAC,CAAC,GAAAnD,+BAAA,CAAGqC,YAAY,EA/BnCA,YAAY,EAAAQ,mBAAA,CA+B2C,EAAE;YACrDD,eAAe,GAAG,IAAI;UACxB;QACF,CAAC,MAAM;UACLA,eAAe,GAAG,IAAI;QACxB;QAEA,IAAIA,eAAe,EAAE;UACnBxD,+BAAA,CAAAiD,YAAY,EAvCdA,YAAY,EAAAQ,mBAAA,EAuCyBE,IAAI,CAACK,GAAG,CAAC,CAAC;UAE7C,MAAMC,IAAI,GAAG,IAAIC,cAAc,CAAC,CAAC;UACjCD,IAAI,CAACE,IAAI,CACP,KAAK,EACL,yHACF,CAAC;UACDF,IAAI,CAACG,IAAI,CAAC,CAAC;UACXH,IAAI,CAACI,MAAM,GAAIC,CAAC,IAAK;YACnB,MAAMC,MAAM,GAAGN,IAAI,CAACO,YAAY,CAACC,KAAK,CAAC,sBAAsB,CAAC;YAC9D,IAAIF,MAAM,IAAIA,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,CAAC1C,MAAM,GAAG,CAAC,EAAE;cAC/C7B,+BAAA,CAAAiD,YAAY,EAlDlBA,YAAY,EAAAE,aAAA,EAkDuBoB,MAAM,CAAC,CAAC,CAAC,CAACG,SAAS,CAAC,CAAC,CAAC;cACnD1E,+BAAA,CAAAiD,YAAY,EAnDlBA,YAAY,EAAAa,YAAA,EAmDsB,KAAK;YACnC,CAAC,MAAM;cACL9D,+BAAA,CAAAiD,YAAY,EArDlBA,YAAY,EAAAa,YAAA,EAqDsB,IAAI;YAClC;YACAP,OAAO,CAAC,CAAC;UACX,CAAC;UACDU,IAAI,CAACU,OAAO,GACVV,IAAI,CAACW,OAAO,GACZX,IAAI,CAACY,SAAS,GACXP,CAAC,IAAK;YACLQ,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC;YAChBf,OAAO,CAAC,CAAC;UACX,CAAC;QACP,CAAC,MAAM;UACLA,OAAO,CAAC,CAAC;QACX;MACF,CAAC,CAAC;MAEF3C,+BAAA,CAAAqC,YAAY,EArEVA,YAAY,EAAAI,YAAA,EAqEY2B,OAAO,CAAC,MAAM;QACtChF,+BAAA,CAAAiD,YAAY,EAtEZA,YAAY,EAAAI,YAAA,EAsEgB,IAAI;MAClC,CAAC,CAAC;MAEF,OAAO,MAAAzC,+BAAA,CAAMqC,YAAY,EAzEvBA,YAAY,EAAAI,YAAA,CAyEwB;IACxC;EACF;EA1EE;EAAA,IAAAI,mBAAA;IAAA/C,QAAA;IAAAN,KAAA,EAC6B;EAAI;EACjC;EAAA,IAAA+C,aAAA;IAAAzC,QAAA;IAAAN,KAAA,EACuB;EAAI;EAC3B;EAAA,IAAA0D,YAAA;IAAApD,QAAA;IAAAN,KAAA,EACsB;EAAK;EAC3B;EAAA,IAAAiD,YAAA;IAAA3C,QAAA;IAAAN,KAAA,EACsB;EAAI;EAqE5B,MAAM6E,UAAU,CAAC;IAUf,WAAWC,aAAaA,CAAA,EAAG;MACzB,OAAAtE,+BAAA,CAAOqE,UAAU,EAXfA,UAAU,EAAAE,cAAA;IAYd;;IAEA;AACJ;AACA;AACA;IACI,aAAaC,QAAQA,CAAA,EAAG;MACtB,IAAAxE,+BAAA,CAAIqE,UAAU,EAnBZA,UAAU,EAAAI,YAAA,GAmBiB,OAAO,MAAAzE,+BAAA,CAAMqE,UAAU,EAnBlDA,UAAU,EAAAI,YAAA,CAmBqD;MAEjErF,+BAAA,CAAAiF,UAAU,EArBRA,UAAU,EAAAI,YAAA,EAqBc,IAAI/B,OAAO,CAAEC,OAAO,IAAK;QACjD,IAAI+B,cAAc,GAAG,KAAK;QAC1B,IAAA1E,+BAAA,CAAIqE,UAAU,EAvBdA,UAAU,EAAAM,oBAAA,GAuB2B;UACnC,MAAM7B,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;UACvB,IAAA/C,+BAAA,CAAIqE,UAAU,EAzBhBA,UAAU,EAAAE,cAAA,GAyBuB;YAC7BzB,IAAI,CAACE,UAAU,CAACF,IAAI,CAACG,UAAU,CAAC,CAAC,GAAG,EAAE,CAAC;UACzC,CAAC,MAAM,IAAAjD,+BAAA,CAAIqE,UAAU,EA3BvBA,UAAU,EAAAO,aAAA,GA2B6B;YACnC9B,IAAI,CAACE,UAAU,CAACF,IAAI,CAACG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;UACxC,CAAC,MAAM;YACLH,IAAI,CAACE,UAAU,CAACF,IAAI,CAACG,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC;UACxC;UACA,IAAIH,IAAI,CAACK,OAAO,CAAC,CAAC,GAAAnD,+BAAA,CAAGqE,UAAU,EAhCjCA,UAAU,EAAAM,oBAAA,CAgC4C,EAAE;YACpDD,cAAc,GAAG,IAAI;UACvB;QACF,CAAC,MAAM;UACLA,cAAc,GAAG,IAAI;QACvB;QAEA,IAAIA,cAAc,EAAE;UAClBtF,+BAAA,CAAAiF,UAAU,EAxCZA,UAAU,EAAAM,oBAAA,EAwC0B5B,IAAI,CAACK,GAAG,CAAC,CAAC;UAE5C,MAAMC,IAAI,GAAG,IAAIC,cAAc,CAAC,CAAC;UACjCD,IAAI,CAACE,IAAI,CAAC,KAAK,EAAE,2CAA2C,CAAC;UAC7DF,IAAI,CAACG,IAAI,CAAC,CAAC;UACXH,IAAI,CAACI,MAAM,GAAIC,CAAC,IAAK;YACnB,IAAIL,IAAI,CAACO,YAAY,IAAIP,IAAI,CAACO,YAAY,CAAC3C,MAAM,GAAG,CAAC,EAAE;cACrD7B,+BAAA,CAAAiF,UAAU,EA/ChBA,UAAU,EAAAE,cAAA,EA+CwBlB,IAAI,CAACO,YAAY;cAC7CxE,+BAAA,CAAAiF,UAAU,EAhDhBA,UAAU,EAAAO,aAAA,EAgDuB,KAAK;YAClC,CAAC,MAAM;cACLxF,+BAAA,CAAAiF,UAAU,EAlDhBA,UAAU,EAAAO,aAAA,EAkDuB,IAAI;YACjC;YACAjC,OAAO,CAAC,CAAC;UACX,CAAC;UACDU,IAAI,CAACU,OAAO,GACVV,IAAI,CAACW,OAAO,GACZX,IAAI,CAACY,SAAS,GACXP,CAAC,IAAK;YACLQ,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC;YAChBf,OAAO,CAAC,CAAC;UACX,CAAC;QACP,CAAC,MAAM;UACLA,OAAO,CAAC,CAAC;QACX;MACF,CAAC,CAAC;MAEF3C,+BAAA,CAAAqE,UAAU,EAlERA,UAAU,EAAAI,YAAA,EAkEYL,OAAO,CAAC,MAAM;QACpChF,+BAAA,CAAAiF,UAAU,EAnEVA,UAAU,EAAAI,YAAA,EAmEgB,IAAI;MAChC,CAAC,CAAC;MAEF,OAAO,MAAAzE,+BAAA,CAAMqE,UAAU,EAtErBA,UAAU,EAAAI,YAAA,CAsEwB;IACtC;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;AACA;AACA;;EAEE;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;EAEE;AACF;AACA;EAhII;EAAA,IAAAE,oBAAA;IAAA7E,QAAA;IAAAN,KAAA,EAC8B;EAAI;EAClC;EAAA,IAAA+E,cAAA;IAAAzE,QAAA;IAAAN,KAAA,EACwB;EAAI;EAC5B;EAAA,IAAAoF,aAAA;IAAA9E,QAAA;IAAAN,KAAA,EACuB;EAAK;EAC5B;EAAA,IAAAiF,YAAA;IAAA3E,QAAA;IAAAN,KAAA,EACsB;EAAI;EA0H5B,MAAMqF,OAAO,CAAC;IACZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACIC,WAAWA,CACTC,WAAW,EACXC,OAAO,EACPC,SAAS,GAAG,KAAK,EACjBC,kBAAkB,EAClBC,eAAe,EACfC,mBAAmB,EACnBC,oBAAoB,GAAG,IAAI,EAC3BC,gBAAgB,GAAG,IAAI,EACvBC,iBAAiB,GAAG,IAAI,EACxB;MACA,IAAI,CAACR,WAAW,GAAGA,WAAW;MAC9B,IAAI,CAACC,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACC,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;MAC5C,IAAI,CAACC,eAAe,GAAGA,eAAe;MACtC,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;MAC9C,IAAI,CAACC,oBAAoB,GAAGA,oBAAoB;MAChD,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;MACxC,IAAI,CAACC,iBAAiB,GAAGA,iBAAiB;;MAE1C;AACN;AACA;AACA;AACA;AACA;MACM,IAAI,CAACC,sBAAsB,GAAG,IAAIC,GAAG,CAAC,CAAC;IACzC;;IAEA;AACJ;AACA;AACA;AACA;AACA;IACIC,2BAA2BA,CAAA,EAAG;MAC5B,IAAI,CAACF,sBAAsB,CAACG,OAAO,CAAC,CAACC,SAAS,EAAEC,GAAG,KAAK;QACtD,IAAID,SAAS,CAACE,MAAM,KAAK,OAAO,EAAE;UAChC,IAAI,CAACN,sBAAsB,CAACO,MAAM,CAACF,GAAG,CAAC;QACzC;MACF,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,MAAMG,WAAWA,CAACC,cAAc,EAAEC,cAAc,EAAEC,aAAa,EAAE;MAC/D;MACA,MAAMC,QAAQ,GAAG,EAAE;MACnB;MACA,MAAMC,6BAA6B,GAAG,EAAE;MAExC,IAAIC,cAAc,GAAG,EAAE;MACvB,IAAIC,WAAW,GAAG,CAAC;MAEnB,KAAK,MAAMC,WAAW,IAAIL,aAAa,EAAE;QACvC,MAAMM,aAAa,GAAG,IAAI,CAACC,SAAS,CAClC,IAAI,CAACxB,kBAAkB,CAACsB,WAAW,CACrC,CAAC;QACD,MAAMG,WAAW,GAAG,CAClBV,cAAc,EACdC,cAAc,EACdO,aAAa,CACd,CAACG,IAAI,CAAC,IAAI,CAAC;QAEZ,MAAMC,YAAY,GAAG,IAAI,CAACrB,sBAAsB,CAACpF,GAAG,CAACuG,WAAW,CAAC;QACjE,IAAIE,YAAY,EAAE;UAChBR,6BAA6B,CAACS,IAAI,CAACD,YAAY,CAAC;QAClD,CAAC,MAAM;UACL;UACA,IAAIf,MAAM,GAAG,aAAa;UAC1B;UACA,IAAIiB,eAAe,GAAG,IAAI;;UAE1B;UACA,MAAMF,YAAY,GAAG;YACnBG,YAAY,EAAEP,aAAa;YAC3BQ,cAAc,EAAE,IAAI;YACpBC,gBAAgB,EAAE,IAAI;YACtB,IAAIpB,MAAMA,CAAA,EAAG;cACX,OAAOA,MAAM;YACf,CAAC;YACD,IAAIA,MAAMA,CAACqB,OAAO,EAAE;cAClBrB,MAAM,GAAGqB,OAAO;cAChBJ,eAAe,CAAC,CAAC;YACnB,CAAC;YACDK,YAAY,EAAE,IAAI1E,OAAO,CAAEC,OAAO,IAAMoE,eAAe,GAAGpE,OAAQ;UACpE,CAAC;UAED0D,6BAA6B,CAACS,IAAI,CAACD,YAAY,CAAC;UAChD,IAAI,CAACrB,sBAAsB,CAAC5F,GAAG,CAAC+G,WAAW,EAAEE,YAAY,CAAC;;UAE1D;UACA,MAAMQ,UAAU,GAAG,MAAMC,gBAAgB,CAAClH,GAAG,CAC3C,IAAI,CAAC2E,WAAW,EAChBkB,cAAc,EACdC,cAAc,EACdO,aACF,CAAC;UACD,IAAIY,UAAU,EAAE;YACdR,YAAY,CAACI,cAAc,GAAGI,UAAU,CAACJ,cAAc;YACvDJ,YAAY,CAACK,gBAAgB,GAAGG,UAAU,CAACH,gBAAgB;YAC3DL,YAAY,CAACf,MAAM,GAAG,UAAU;YAChC;UACF,CAAC,MAAM;YACLQ,cAAc,CAACQ,IAAI,CAACD,YAAY,CAAC;YACjCN,WAAW,IAAIM,YAAY,CAACG,YAAY,CAAC/F,MAAM;YAC/C,IAAIsF,WAAW,GAAG,GAAG,EAAE;cACrBH,QAAQ,CAACU,IAAI,CAACR,cAAc,CAAC;cAC7BC,WAAW,GAAG,CAAC;cACfD,cAAc,GAAG,EAAE;YACrB;UACF;QACF;MACF;MAEA,IAAIA,cAAc,CAACrF,MAAM,GAAG,CAAC,EAAE;QAC7BmF,QAAQ,CAACU,IAAI,CAACR,cAAc,CAAC;QAC7BA,cAAc,GAAG,EAAE;QACnBC,WAAW,GAAG,CAAC;MACjB;MAEA,OAAO,CAACH,QAAQ,EAAEC,6BAA6B,CAAC;IAClD;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,MAAMkB,WAAWA,CAACtB,cAAc,EAAEC,cAAc,EAAEE,QAAQ,EAAE;MAC1D,OAAO,MAAM,IAAI1D,OAAO,CAAC,CAACC,OAAO,EAAE6E,MAAM,KAAK;QAC5C,MAAMC,GAAG,GAAG,IAAInE,cAAc,CAAC,CAAC;QAChCmE,GAAG,CAAClE,IAAI,CACN,IAAI,CAAC0B,SAAS,EACd,IAAI,CAACD,OAAO,IACT,IAAI,CAACK,oBAAoB,GACtB,IAAI,CAACA,oBAAoB,CACvBY,cAAc,EACdC,cAAc,EACdE,QACF,CAAC,GACD,EAAE,CACV,CAAC;QAED,IAAI,IAAI,CAACb,iBAAiB,EAAE;UAC1B,MAAMmC,OAAO,GAAG,IAAI,CAACnC,iBAAiB,CAAC,CAAC;UACxCmC,OAAO,CAAC/B,OAAO,CAAEgC,MAAM,IAAK;YAC1BF,GAAG,CAACG,gBAAgB,CAACD,MAAM,CAACE,IAAI,EAAEF,MAAM,CAACnI,KAAK,CAAC;UACjD,CAAC,CAAC;QACJ;QAEAiI,GAAG,CAACK,YAAY,GAAG,MAAM;QAEzBL,GAAG,CAAChE,MAAM,GAAIsE,KAAK,IAAK;UACtBpF,OAAO,CAAC8E,GAAG,CAACO,QAAQ,CAAC;QACvB,CAAC;QAEDP,GAAG,CAAC1D,OAAO,GACT0D,GAAG,CAACzD,OAAO,GACXyD,GAAG,CAACxD,SAAS,GACV8D,KAAK,IAAK;UACT7D,OAAO,CAACC,KAAK,CAAC4D,KAAK,CAAC;UACpBP,MAAM,CAAC,CAAC;QACV,CAAC;QAELC,GAAG,CAACjE,IAAI,CACN,IAAI,CAAC6B,oBAAoB,GACrB,IAAI,CAACC,gBAAgB,CAACW,cAAc,EAAEC,cAAc,EAAEE,QAAQ,CAAC,GAC/DjG,SACN,CAAC;MACH,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,MAAM8H,SAASA,CACbhC,cAAc,EACdC,cAAc,EACdC,aAAa,EACb+B,yBAAyB,GAAG,KAAK,EACjCC,eAAe,GAAG,KAAK,EACvB;MACA,MAAM,CAAC/B,QAAQ,EAAEC,6BAA6B,CAAC,GAAG,MAAM,IAAI,CAACL,WAAW,CACtEC,cAAc,EACdC,cAAc,EACdC,aACF,CAAC;MACD;MACA,MAAMiC,QAAQ,GAAG,EAAE;MAEnB,KAAK,MAAMC,OAAO,IAAIjC,QAAQ,EAAE;QAC9BgC,QAAQ,CAACtB,IAAI,CACX,IAAI,CAACS,WAAW,CAACtB,cAAc,EAAEC,cAAc,EAAEmC,OAAO,CAAC,CACtDC,IAAI,CAAEN,QAAQ,IAAK;UAClB,MAAMO,OAAO,GAAG,IAAI,CAACpD,eAAe,CAAC6C,QAAQ,CAAC;UAC9C,KAAK,MAAMvG,GAAG,IAAI4G,OAAO,EAAE;YACzB,MAAM1E,MAAM,GAAG4E,OAAO,CAAC9G,GAAG,CAAC;YAC3B,IAAI,CAAC2D,mBAAmB,CAACzB,MAAM,CAAC6E,IAAI,EAAEL,eAAe,CAAC,CAAC,CAAC;YACxD,MAAMvC,SAAS,GAAGyC,OAAO,CAAC5G,GAAG,CAAC;YAC9BmE,SAAS,CAACsB,gBAAgB,GAAGvD,MAAM,CAACuD,gBAAgB,IAAI,KAAK;YAC7DtB,SAAS,CAACqB,cAAc,GAAGtD,MAAM,CAAC6E,IAAI;YACtC5C,SAAS,CAACE,MAAM,GAAG,UAAU;YAE7B,IACEoC,yBAAyB,KAAK,KAAK,IACnCtC,SAAS,CAACqB,cAAc,EACxB;cACAK,gBAAgB,CAAC1H,GAAG,CAClB,IAAI,CAACmF,WAAW,EAChBkB,cAAc,EACdC,cAAc,EACdN,SAAS,CAACoB,YAAY,EACtBpB,SAAS,CAACqB,cAAc,EACxBrB,SAAS,CAACsB,gBACZ,CAAC;YACH;UACF;QACF,CAAC,CAAC,CACDuB,KAAK,CAAE/E,CAAC,IAAK;UACZQ,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC;UAChB,KAAK,MAAMkC,SAAS,IAAIyC,OAAO,EAAE;YAC/BzC,SAAS,CAACE,MAAM,GAAG,OAAO;YAC1B;UACF;QACF,CAAC,CACL,CAAC;MACH;;MACA,MAAMpD,OAAO,CAACgG,GAAG,CACfrC,6BAA6B,CAACsC,GAAG,CAAE/C,SAAS,IAAKA,SAAS,CAACwB,YAAY,CACzE,CAAC;MACD,OAAOf,6BAA6B,CAACsC,GAAG,CAAE/C,SAAS,IACjD,IAAI,CAACR,mBAAmB,CAACQ,SAAS,CAACqB,cAAc,EAAEkB,eAAe,CACpE,CAAC;IACH;;IAEA;AACJ;AACA;AACA;AACA;IACIzB,SAASA,CAACkC,GAAG,EAAE;MACb,OAAOA,GAAG,CAACnI,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC;IACpC;EACF;EAEA,MAAMoI,aAAa,GAAG,IAAK,cAAchE,OAAO,CAAC;IAC/CC,WAAWA,CAAA,EAAG;MACZ,KAAK,CACH,QAAQ,EACR,mFAAmF,EACnF,MAAM,EACN,SAASI,kBAAkBA,CAACsB,WAAW,EAAE;QACvCA,WAAW,GAAGA,WAAW,CAACmC,GAAG,CAAEH,IAAI,IAAKlI,KAAK,CAACC,UAAU,CAACiI,IAAI,CAAC,CAAC;QAC/D,IAAIhC,WAAW,CAACvF,MAAM,GAAG,CAAC,EAAE;UAC1BuF,WAAW,GAAGA,WAAW,CAACmC,GAAG,CAC3B,CAACH,IAAI,EAAEM,KAAK,KAAM,QAAOA,KAAM,IAAGN,IAAK,MACzC,CAAC;QACH;QACA;QACA,OAAQ,QAAOhC,WAAW,CAACI,IAAI,CAAC,EAAE,CAAE,QAAO;MAC7C,CAAC,EACD,SAASzB,eAAeA,CAAC6C,QAAQ,EAAE;QACjC;QACA,IAAIe,YAAY;QAChB,IAAI,OAAOf,QAAQ,KAAK,QAAQ,EAAE;UAChCe,YAAY,GAAG,CAAC;YAAEP,IAAI,EAAER,QAAQ;YAAEd,gBAAgB,EAAE;UAAK,CAAC,CAAC;QAC7D,CAAC,MAAM,IAAI,OAAOc,QAAQ,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;UAC1Ce,YAAY,GAAGf,QAAQ,CAACW,GAAG,EACzB,gDAAiD,EAC/C,qBAAsBnJ,KAAK,MACvB;YAAEgJ,IAAI,EAAEhJ,KAAK;YAAE0H,gBAAgB,EAAE;UAAK,CAAC,CAC/C,CAAC;QACH,CAAC,MAAM;UACL6B,YAAY,GAAGf,QAAQ,CAACW,GAAG,EACzB,gDAAiD,EAC/C,+BAAgCnJ,KAAK,MACjC;YAAEgJ,IAAI,EAAEhJ,KAAK,CAAC,CAAC,CAAC;YAAE0H,gBAAgB,EAAE1H,KAAK,CAAC,CAAC;UAAE,CAAC,CACtD,CAAC;QACH;QACA,OAAOuJ,YAAY;MACrB,CAAC,EACD,SAAS3D,mBAAmBA,CAACzB,MAAM,EAAEwE,eAAe,EAAE;QACpD;QACA,IAAIxE,MAAM,CAACqF,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;UACjCrF,MAAM,GAAGA,MAAM,CAAClD,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;UACrC,MAAMqI,KAAK,GAAGnF,MAAM,CAACqF,OAAO,CAAC,GAAG,CAAC;UACjCrF,MAAM,GAAGA,MAAM,CAACsF,KAAK,CAACH,KAAK,GAAG,CAAC,CAAC;QAClC;;QAEA;QACA,MAAMI,SAAS,GAAG,EAAE,CAAC,CAAC;;QAEtB;QACA;QACA,IAAIzH,GAAG,GAAG,CAAC;QACX,OAAO,IAAI,EAAE;UACX;UACA,MAAM0H,kBAAkB,GAAGxF,MAAM,CAACqF,OAAO,CAAC,KAAK,EAAEvH,GAAG,CAAC;UACrD,IAAI0H,kBAAkB,KAAK,CAAC,CAAC,EAAE;;UAE/B;UACA,MAAMC,kBAAkB,GAAGzF,MAAM,CAACqF,OAAO,CACvC,KAAK,EACLG,kBACF,CAAC;UAED,IAAIC,kBAAkB,KAAK,CAAC,CAAC,EAAE;YAC7BF,SAAS,CAACpC,IAAI,CAACnD,MAAM,CAACsF,KAAK,CAACE,kBAAkB,GAAG,CAAC,CAAC,CAAC;YACpD;UACF,CAAC,MAAM;YACLD,SAAS,CAACpC,IAAI,CACZnD,MAAM,CAACsF,KAAK,CAACE,kBAAkB,GAAG,CAAC,EAAEC,kBAAkB,CACzD,CAAC;UACH;UACA3H,GAAG,GAAG2H,kBAAkB;QAC1B;;QAEA;QACAzF,MAAM,GAAGuF,SAAS,CAACjI,MAAM,GAAG,CAAC,GAAGiI,SAAS,CAACtC,IAAI,CAAC,GAAG,CAAC,GAAGjD,MAAM;QAC5D;QACAA,MAAM,GAAGA,MAAM,CAAClD,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;QACvC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,IAAI4I,WAAW,GAAG,EAAE;QACpB,IAAIC,UAAU,GAAG,CAAC;QAClB,KAAK,MAAMC,CAAC,IAAI5F,MAAM,CAAC6F,QAAQ,CAC7B,2CACF,CAAC,EAAE;UACD,MAAMC,QAAQ,GAAGF,CAAC,CAAC,CAAC,CAAC;UACrB,MAAMG,UAAU,GAAGH,CAAC,CAAC,CAAC,CAAC,CAACtI,MAAM;UAC9B,MAAM0I,GAAG,GAAGJ,CAAC,CAACT,KAAK;UACnB;UACA,IAAIa,GAAG,GAAGL,UAAU,EAAE;YACpB,MAAMM,IAAI,GAAGL,CAAC,CAAC,CAAC,CAAC;YACjB,MAAMM,UAAU,GAAGN,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;YAC7B,MAAMO,WAAW,GAAGnG,MAAM,CACvBsF,KAAK,CAACK,UAAU,EAAEK,GAAG,CAAC,CACtBlJ,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;YAC1B4I,WAAW,CAACvC,IAAI,CAAC8C,IAAI,GAAGE,WAAW,GAAGD,UAAU,CAAC;UACnD,CAAC,MAAM;YACLR,WAAW,CAACvC,IAAI,CAAC2C,QAAQ,CAAC;UAC5B;UACAH,UAAU,GAAGK,GAAG,GAAGD,UAAU;QAC/B;QACA;QACA;UACE,MAAMK,eAAe,GAAGpG,MAAM,CAC3BsF,KAAK,CAACK,UAAU,CAAC,CACjB7I,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;UAC1B,IAAI4I,WAAW,CAACpI,MAAM,GAAG,CAAC,EAAE;YAC1BoI,WAAW,CAACA,WAAW,CAACpI,MAAM,GAAG,CAAC,CAAC,IAAI8I,eAAe;UACxD;QACF;QACA;QACA;QACA;QACA;;QAEA,IAAI5B,eAAe,EAAE;UACnB;UACA;UACA;;UAEA,IAAIkB,WAAW,IAAIA,WAAW,CAACpI,MAAM,GAAG,CAAC,EAAE;YACzC;YACA;YACAoI,WAAW,GAAGA,WAAW,CAACV,GAAG,CAAEnJ,KAAK,IAAK;cACvC,MAAMwK,kBAAkB,GAAGxK,KAAK,CAACwJ,OAAO,CAAC,GAAG,CAAC;cAC7C,OAAOxJ,KAAK,CAACyJ,KAAK,CAACe,kBAAkB,GAAG,CAAC,CAAC;YAC5C,CAAC,CAAC;UACJ,CAAC,MAAM;YACL;YACAX,WAAW,GAAG,CAAC1F,MAAM,CAAC;UACxB;;UAEA;UACA0F,WAAW,GAAGA,WAAW,CAACV,GAAG,CAAEnJ,KAAK,IAAKc,KAAK,CAACI,YAAY,CAAClB,KAAK,CAAC,CAAC;UAEnE,OAAO6J,WAAW;QACpB,CAAC,MAAM;UACL;UACA;UACA;UACA,IAAIY,OAAO;UACX,IAAIZ,WAAW,IAAIA,WAAW,CAACpI,MAAM,GAAG,CAAC,EAAE;YACzC;YACAgJ,OAAO,GAAGZ,WAAW,CAClBV,GAAG,CAAEnJ,KAAK,IAAK0K,QAAQ,CAAC1K,KAAK,CAACqE,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACzDsG,MAAM,CAAE3K,KAAK,IAAK,CAAC4K,KAAK,CAAC5K,KAAK,CAAC,CAAC;YACnC;YACA6J,WAAW,GAAGA,WAAW,CAACV,GAAG,CAAEnJ,KAAK,IAAK;cACvC,MAAMwK,kBAAkB,GAAGxK,KAAK,CAACwJ,OAAO,CAAC,GAAG,CAAC;cAC7C,OAAOxJ,KAAK,CAACyJ,KAAK,CAACe,kBAAkB,GAAG,CAAC,CAAC;YAC5C,CAAC,CAAC;UACJ,CAAC,MAAM;YACL;YACAX,WAAW,GAAG,CAAC1F,MAAM,CAAC;YACtBsG,OAAO,GAAG,CAAC,CAAC,CAAC;UACf;;UAEA;UACAZ,WAAW,GAAGA,WAAW,CAACV,GAAG,CAAEnJ,KAAK,IAAKc,KAAK,CAACI,YAAY,CAAClB,KAAK,CAAC,CAAC;;UAEnE;UACA,MAAM6K,eAAe,GAAG,EAAE;UAC1B;UACA,KAAK,MAAMC,CAAC,IAAIL,OAAO,EAAE;YACvB,IAAII,eAAe,CAACJ,OAAO,CAACK,CAAC,CAAC,CAAC,EAAE;cAC/BD,eAAe,CAACJ,OAAO,CAACK,CAAC,CAAC,CAAC,IAAI,GAAG,GAAGjB,WAAW,CAACiB,CAAC,CAAC;YACrD,CAAC,MAAM;cACLD,eAAe,CAACJ,OAAO,CAACK,CAAC,CAAC,CAAC,GAAGjB,WAAW,CAACiB,CAAC,CAAC;YAC9C;UACF;UAEA,OAAOD,eAAe;QACxB;MACF,CAAC,EACD,SAAShF,oBAAoBA,CAC3BY,cAAc,EACdC,cAAc,EACdE,QAAQ,EACR;QACA,OAAQ,OAAMH,cAAe,OAAMC,cAAe,OAAMvF,YAAY,CAACgB,QAAQ,CAC3EyE,QAAQ,CAACuC,GAAG,CAAE4B,IAAI,IAAKA,IAAI,CAACvD,YAAY,CAAC,CAACJ,IAAI,CAAC,EAAE,CACnD,CAAE,EAAC;MACL,CAAC,EACD,SAAStB,gBAAgBA,CAACW,cAAc,EAAEC,cAAc,EAAEE,QAAQ,EAAE;QAClE,OAAOA,QAAQ,CACZuC,GAAG,CAAE4B,IAAI,IAAM,MAAKC,kBAAkB,CAACD,IAAI,CAACvD,YAAY,CAAE,EAAC,CAAC,CAC5DJ,IAAI,CAAC,EAAE,CAAC;MACb,CAAC,EACD,SAASrB,iBAAiBA,CAAA,EAAG;QAC3B,OAAO,CACL;UACEsC,IAAI,EAAE,cAAc;UACpBrI,KAAK,EAAE;QACT,CAAC,CACF;MACH,CACF,CAAC;IACH;EACF,CAAC,CAAE,CAAC;EAEJ,MAAMiL,aAAa,GAAG,IAAK,cAAc5F,OAAO,CAAC;IAC/CC,WAAWA,CAAA,EAAG;MACZ,KAAK,CACH,QAAQ,EACR,yEAAyE,EACzE,KAAK,EACL,SAASI,kBAAkBA,CAACsB,WAAW,EAAE;QACvC,OAAOA,WAAW,CACfmC,GAAG,CAAEnJ,KAAK,IAAKc,KAAK,CAACC,UAAU,CAACf,KAAK,CAAC,CAAC,CACvCoH,IAAI,CAAC,OAAO,CAAC;MAClB,CAAC,EACD,SAASzB,eAAeA,CAAC6C,QAAQ,EAAE;QACjC,MAAM0C,IAAI,GAAG1C,QAAQ,CAAC0C,IAAI;QAC1B,MAAMxD,gBAAgB,GAAGwD,IAAI,GAAGA,IAAI,CAAC5I,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;QACzD,OAAOkG,QAAQ,CAACQ,IAAI,CAACG,GAAG,EACtB,+CAAgD,EAC9C,qBAAsBH,IAAI,MACtB;UAAEA,IAAI;UAAEtB;QAAiB,CAAC,CAClC,CAAC;MACH,CAAC,EACD,SAAS9B,mBAAmBA,CAACzB,MAAM,EAAEwE,eAAe,EAAE;QACpD,OAAOxE,MAAM,CACV7B,KAAK,CAAC,OAAO,CAAC,CACd6G,GAAG,CAAEnJ,KAAK,IAAKc,KAAK,CAACI,YAAY,CAAClB,KAAK,CAAC,CAAC;MAC9C,CAAC,EACD,SAAS6F,oBAAoBA,CAC3BY,cAAc,EACdC,cAAc,EACdE,QAAQ,EACR;QACA,OAAQ,OAAM/D,YAAY,CAACC,YAAa,yBACtC2D,cAAc,KAAK,MAAM,GAAG,EAAE,GAAGA,cAAc,GAAG,GACnD,GAAEC,cAAe,GAAEE,QAAQ,CACzBuC,GAAG,CAAE4B,IAAI,IAAM,SAAQC,kBAAkB,CAACD,IAAI,CAACvD,YAAY,CAAE,EAAC,CAAC,CAC/DJ,IAAI,CAAC,EAAE,CAAE,EAAC;MACf,CAAC,EACD,SAAStB,gBAAgBA,CAACW,cAAc,EAAEC,cAAc,EAAEE,QAAQ,EAAE;QAClE,OAAOjG,SAAS;MAClB,CAAC,EACD,SAASoF,iBAAiBA,CAAA,EAAG;QAC3B,OAAO,CACL;UACEsC,IAAI,EAAE,cAAc;UACpBrI,KAAK,EAAE;QACT,CAAC,CACF;MACH,CACF,CAAC;IACH;;IAEA;AACJ;AACA;IACI,MAAMyI,SAASA,CACbhC,cAAc,EACdC,cAAc,EACdC,aAAa,EACb+B,yBAAyB,EACzBC,eAAe,GAAG,KAAK,EACvB;MACA,MAAM9F,YAAY,CAACG,OAAO,CAAC,CAAC;MAC5B,IAAI,CAACH,YAAY,CAACC,YAAY,EAAE;MAChC,IAAI2D,cAAc,CAAC0E,UAAU,CAAC,IAAI,CAAC,EAAE1E,cAAc,GAAG,IAAI;MAC1D,IAAIC,cAAc,CAACyE,UAAU,CAAC,IAAI,CAAC,EAAEzE,cAAc,GAAG,IAAI;MAC1D,OAAO,MAAM,KAAK,CAAC+B,SAAS,CAC1BhC,cAAc,EACdC,cAAc,EACdC,aAAa,EACb+B,yBAAyB,EACzBC,eACF,CAAC;IACH;EACF,CAAC,CAAE,CAAC;EAEJ,MAAMyC,WAAW,GAAG,IAAK,cAAc/F,OAAO,CAAC;IAC7CC,WAAWA,CAAA,EAAG;MACZ,KAAK,CACH,MAAM,EACN,yGAAyG,EACzG,MAAM,EACN,SAASI,kBAAkBA,CAACsB,WAAW,EAAE;QACvC,IAAIqE,EAAE,GAAG,EAAE;QACX,OAAOrE,WAAW,CACfmC,GAAG,CAAEnJ,KAAK,IAAK;UACd,MAAM+J,CAAC,GAAI,KAAIsB,EAAG,IAAGvK,KAAK,CAACC,UAAU,CAACf,KAAK,CAAE,MAAKqL,EAAG,GAAE;UACvDA,EAAE,EAAE;UACJ,OAAOtB,CAAC;QACV,CAAC,CAAC,CACD3C,IAAI,CAAC,EAAE,CAAC;MACb,CAAC,EACD,SAASzB,eAAeA,CAAC6C,QAAQ,EAAE;QACjC,OAAOA,QAAQ,CAACW,GAAG,EACjB;QACA,EAAC,qBAAsBY,CAAC;UAAA,IAAAuB,mBAAA;UAAA,OAAM;YAC5BtC,IAAI,EAAEe,CAAC,CAACwB,YAAY,CAAC,CAAC,CAAC,CAACvC,IAAI;YAC5BtB,gBAAgB,GAAA4D,mBAAA,GAAEvB,CAAC,CAACrC,gBAAgB,cAAA4D,mBAAA,uBAAlBA,mBAAA,CAAoBE;UACxC,CAAC;QAAA,CACH,CAAC;MACH,CAAC,EACD,SAAS5F,mBAAmBA,CAACzB,MAAM,EAAEwE,eAAe,EAAE;QACpD,MAAMkB,WAAW,GAAG,EAAE;QAEtB,MAAM4B,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;QAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,eAAe,CAACzH,MAAM,EAAE,WAAW,CAAC;QACvD,IAAI0H,QAAQ,GAAG,EAAE;QACjBF,GAAG,CAACG,IAAI,CAACC,UAAU,CAAC5F,OAAO,CAAE6F,IAAI,IAAK;UACpC,IAAIrD,eAAe,EAAE;YACnB,IAAIqD,IAAI,CAACC,QAAQ,IAAI,OAAO,EAAE;cAC5BJ,QAAQ,IAAIG,IAAI,CAACE,WAAW;YAC9B,CAAC,MAAM;cACLrC,WAAW,CAACvC,IAAI,CAACuE,QAAQ,GAAGG,IAAI,CAACE,WAAW,CAAC;cAC7CL,QAAQ,GAAG,EAAE;YACf;UACF,CAAC,MAAM;YACL,IAAIG,IAAI,CAACC,QAAQ,IAAI,OAAO,EAAE;cAC5BJ,QAAQ,IAAIG,IAAI,CAACE,WAAW;YAC9B,CAAC,MAAM;cACL,MAAMb,EAAE,GAAGX,QAAQ,CAACsB,IAAI,CAACC,QAAQ,CAACxC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;cAChDI,WAAW,CAACwB,EAAE,CAAC,GAAGQ,QAAQ,GAAGG,IAAI,CAACE,WAAW;cAC7CL,QAAQ,GAAG,EAAE;YACf;UACF;QACF,CAAC,CAAC;QAEF,OAAOhC,WAAW;MACpB,CAAC,EACD,SAAShE,oBAAoBA,CAC3BY,cAAc,EACdC,cAAc,EACdE,QAAQ,EACR;QACA,OAAQ,GACNH,cAAc,KAAK,aAAa,GAAG,QAAQ,GAAGA,cAAc,GAAG,EAChE,OAAMC,cAAe,EAAC;MACzB,CAAC,EACD,SAASZ,gBAAgBA,CAACW,cAAc,EAAEC,cAAc,EAAEE,QAAQ,EAAE;QAClE,OAAOuF,IAAI,CAACC,SAAS,CACnBxF,QAAQ,CAACuC,GAAG,CAAE4B,IAAI,KAAM;UACtB/B,IAAI,EAAE+B,IAAI,CAACvD;QACb,CAAC,CAAC,CACJ,CAAC;MACH,CAAC,EACD,SAASzB,iBAAiBA,CAAA,EAAG;QAC3B,OAAO,CACL;UACEsC,IAAI,EAAE,cAAc;UACpBrI,KAAK,EAAE;QACT,CAAC,EACD;UACEqI,IAAI,EAAE,eAAe;UACrBrI,KAAK,EAAE,SAAS,GAAG6E,UAAU,CAACC;QAChC,CAAC,CACF;MACH,CACF,CAAC;IACH;;IAEA;AACJ;AACA;AACA;IACI,MAAM2D,SAASA,CACbhC,cAAc,EACdC,cAAc,EACdC,aAAa,EACb+B,yBAAyB,EACzBC,eAAe,GAAG,KAAK,EACvB;MACA;MACA,MAAM0D,YAAY,GAAG,CACnB;QACEC,MAAM,EAAE,MAAM;QACdrL,OAAO,EAAE;MACX,CAAC,EACD;QACEqL,MAAM,EAAE,OAAO;QACfrL,OAAO,EAAE;MACX,CAAC,EACD;QACEqL,MAAM,EAAE,OAAO;QACfrL,OAAO,EAAE;MACX,CAAC,EACD;QACEqL,MAAM,EAAE,IAAI;QACZrL,OAAO,EAAE;MACX,CAAC,EACD;QACEqL,MAAM,EAAE,KAAK;QACbrL,OAAO,EAAE;MACX,CAAC,EACD;QACEqL,MAAM,EAAE,KAAK;QACbrL,OAAO,EAAE;MACX,CAAC,EACD;QACEqL,MAAM,EAAE,IAAI;QACZrL,OAAO,EAAE;MACX,CAAC,EACD;QACEqL,MAAM,EAAE,IAAI;QACZrL,OAAO,EAAE;MACX,CAAC,EACD;QACEqL,MAAM,EAAE,IAAI;QACZrL,OAAO,EAAE;MACX,CAAC,CACF;MACDoL,YAAY,CAAClG,OAAO,CAAE4D,CAAC,IAAK;QAC1B,IAAIrD,cAAc,KAAKqD,CAAC,CAACuC,MAAM,EAAE;UAC/B5F,cAAc,GAAGqD,CAAC,CAAC9I,OAAO;QAC5B;QACA,IAAIwF,cAAc,KAAKsD,CAAC,CAACuC,MAAM,EAAE;UAC/B7F,cAAc,GAAGsD,CAAC,CAAC9I,OAAO;QAC5B;MACF,CAAC,CAAC;MAEF,MAAM4D,UAAU,CAACG,QAAQ,CAAC,CAAC;MAC3B,IAAI,CAACH,UAAU,CAACC,aAAa,EAAE;MAE/B,OAAO,MAAM,KAAK,CAAC2D,SAAS,CAC1BhC,cAAc,EACdC,cAAc,EACdC,aAAa,EACb+B,yBAAyB,EACzBC,eACF,CAAC;IACH;EACF,CAAC,CAAE,CAAC;EAEJ,MAAM4D,YAAY,GAAG,IAAK,MAAM;IAC9BjH,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACkH,QAAQ,GAAG,IAAI;IACtB;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACI,MAAM/D,SAASA,CACbhC,cAAc,EACdC,cAAc,EACdC,aAAa,EACb+B,yBAAyB,EACzBC,eAAe,GAAG,KAAK,EACvB;MACA,OAAO,MAAM,IAAIzF,OAAO,CAAEC,OAAO,IAAK;QACpC,MAAMsJ,0BAA0B,GAAGA,CAAA,KAAM;UACvC,MAAMC,QAAQ,GAAGA,CAAC7D,OAAO,EAAE8D,MAAM,EAAEC,YAAY,KAAK;YAClD,IAAI/D,OAAO,CAACnI,MAAM,KAAK,8BAA8B,EAAE;cACrDyC,OAAO,CAAC,CAAC,CAAC0F,OAAO,CAAC1E,MAAM,CAAC,CAAC,CAAC;cAC3B0I,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,cAAc,CAACN,QAAQ,CAAC;YACnD;UACF,CAAC;UACDG,MAAM,CAACC,OAAO,CAACC,SAAS,CAACE,WAAW,CAACP,QAAQ,CAAC;UAE9CQ,UAAU,CAAC,MAAM;YACfL,MAAM,CAACC,OAAO,CAACC,SAAS,CAACC,cAAc,CAACN,QAAQ,CAAC;YACjDvJ,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UACjB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC;QAED,IAAI,IAAI,CAACqJ,QAAQ,EAAE;UACjBK,MAAM,CAACM,IAAI,CAACvM,GAAG,CAAC,IAAI,CAAC4L,QAAQ,CAACnB,EAAE,EAAG+B,GAAG,IAAK;YACzCC,gBAAgB,CAAC,CAAC;YAClB,IAAID,GAAG,EAAE;cACP;cACAP,MAAM,CAACM,IAAI,CAACG,WAAW,CACrBF,GAAG,CAAC/B,EAAE,EACN;gBACE3K,MAAM,EAAE,wBAAwB;gBAChCsI,IAAI,EAAErC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzBD;cACF,CAAC,EACD;gBACE6G,OAAO,EAAE;cACX,CAAC,EACA/E,QAAQ,IAAK;gBACZ6E,gBAAgB,CAAC,CAAC;gBAClBlK,OAAO,CAAC,CAAC,CAACqF,QAAQ,CAAC,CAAC,CAAC;cACvB,CACF,CAAC;YACH,CAAC,MAAM;cACLqE,MAAM,CAACM,IAAI,CAACK,MAAM,CAChB;gBACEC,GAAG,EAAG,2BAA0B/G,cAAe,KAAIsE,kBAAkB,CACnErE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CACpB,CAAE;cACJ,CAAC,EACAyG,GAAG,IAAK;gBACP,IAAI,CAACZ,QAAQ,GAAGY,GAAG;gBACnBX,0BAA0B,CAAC,CAAC;cAC9B,CACF,CAAC;cACD;YACF;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UACLI,MAAM,CAACM,IAAI,CAACK,MAAM,CAChB;YACEC,GAAG,EAAG,2BAA0B/G,cAAe,KAAIsE,kBAAkB,CACnErE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CACpB,CAAE;UACJ,CAAC,EACAyG,GAAG,IAAK;YACP,IAAI,CAACZ,QAAQ,GAAGY,GAAG;YACnBX,0BAA0B,CAAC,CAAC;UAC9B,CACF,CAAC;UACD;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAE,CAAC;;EAEJ;EACA,MAAMiB,WAAW,GAAG,IAAIzH,GAAG,CAAC,CAAC;EAE7ByH,WAAW,CAACtN,GAAG,CAAC,QAAQ,EAAEiJ,aAAa,CAAC;EACxCqE,WAAW,CAACtN,GAAG,CAAC,QAAQ,EAAE6K,aAAa,CAAC;EACxCyC,WAAW,CAACtN,GAAG,CAAC,MAAM,EAAEgL,WAAW,CAAC;EACpCsC,WAAW,CAACtN,GAAG,CACb,OAAO,EACP,uBAAuB,gBAAkBmM,YAC3C,CAAC;EAED1L,kBAAkB,CAAC8M,aAAa,GAAG,OACjCpI,WAAW,EACXkB,cAAc,EACdC,cAAc,EACdC,aAAa,EACb+B,yBAAyB,GAAG,KAAK,EACjCC,eAAe,GAAG,KAAK,KACpB;IACHpD,WAAW,GAAGqI,OAAO,CAACC,qBAAqB,CACzCnH,cAAc,EACdnB,WAAW,EACX,IACF,CAAC;IACD,MAAMuI,OAAO,GAAGJ,WAAW,CAAC9M,GAAG,CAAC2E,WAAW,CAAC,IAAImI,WAAW,CAAC9M,GAAG,CAAC,QAAQ,CAAC;IACzE,OAAO,MAAMkN,OAAO,CAACrF,SAAS,CAC5BhC,cAAc,EACdC,cAAc,EACdC,aAAa,EACb+B,yBAAyB,EACzBC,eACF,CAAC;EACH,CAAC;EAED9H,kBAAkB,CAACkN,aAAa,GAAG,OACjCxI,WAAW,EACXkB,cAAc,EACdC,cAAc,EACdM,WAAW,EACX0B,yBAAyB,GAAG,KAAK,KAC9B;IACHnD,WAAW,GAAGqI,OAAO,CAACC,qBAAqB,CACzCnH,cAAc,EACdnB,WAAW,EACX,KACF,CAAC;IACD,MAAMuI,OAAO,GAAGJ,WAAW,CAAC9M,GAAG,CAAC2E,WAAW,CAAC,IAAImI,WAAW,CAAC9M,GAAG,CAAC,QAAQ,CAAC;IACzE,OAAO,CACL,MAAMkN,OAAO,CAACrF,SAAS,CACrBhC,cAAc,EACdC,cAAc,EACd,CAACM,WAAW,CAAC,EACb0B,yBACF,CAAC,EACD,CAAC,CAAC;EACN,CAAC;EAED7H,kBAAkB,CAACmN,mBAAmB,GAAG,OACvCzI,WAAW,EACXkB,cAAc,EACdC,cAAc,EACdc,YAAY,EACZkB,yBAAyB,GAAG,KAAK,KAC9B;IACHnD,WAAW,GAAGqI,OAAO,CAACC,qBAAqB,CACzCnH,cAAc,EACdnB,WAAW,EACX,KACF,CAAC;IACD,MAAMuI,OAAO,GAAGJ,WAAW,CAAC9M,GAAG,CAAC2E,WAAW,CAAC,IAAImI,WAAW,CAAC9M,GAAG,CAAC,QAAQ,CAAC;IACzE,OAAO,CACL,MAAMkN,OAAO,CAACrF,SAAS,CACrBhC,cAAc,EACdC,cAAc,EACd,CAAC,CAACc,YAAY,CAAC,CAAC,EAChBkB,yBACF,CAAC,EACD,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC;EAEDmE,MAAM,CAACC,OAAO,CAACC,SAAS,CAACE,WAAW,CAAC,CAACpE,OAAO,EAAE8D,MAAM,EAAEC,YAAY,KAAK;IACtE;IACA,IAAIlE,yBAAyB,GAAG,IAAI;IACpC,IAAIuF,SAAS,CAACrN,GAAG,CAAC,iBAAiB,CAAC,KAAK,KAAK,EAAE;MAC9C8H,yBAAyB,GAAG,IAAI;IAClC,CAAC,MAAM;MACLA,yBAAyB,GAAGiE,MAAM,CAACS,GAAG,GAAGT,MAAM,CAACS,GAAG,CAACc,SAAS,GAAG,KAAK;IACvE;IAEA,IAAIrF,OAAO,CAACnI,MAAM,KAAK,eAAe,EAAE;MACtCG,kBAAkB,CACf8M,aAAa,CACZ9E,OAAO,CAAChI,kBAAkB,EAC1B,MAAM,EACNgI,OAAO,CAACnC,cAAc,EACtBmC,OAAO,CAAClC,aAAa,EACrB+B,yBAAyB,EACzBG,OAAO,CAACF,eACV,CAAC,CACAG,IAAI,CAAEC,OAAO,IAAK6D,YAAY,CAAC7D,OAAO,CAAC,CAAC,CACxCE,KAAK,CAAE/E,CAAC,IAAK;QACZ0I,YAAY,CAAC,CAAC;QACdlI,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC;MAClB,CAAC,CAAC;MAEJ,OAAO,IAAI;IACb,CAAC,MAAM,IAAI2E,OAAO,CAACnI,MAAM,KAAK,eAAe,EAAE;MAC7CG,kBAAkB,CACfkN,aAAa,CACZlF,OAAO,CAAChI,kBAAkB,EAC1B,MAAM,EACNgI,OAAO,CAACnC,cAAc,EACtBmC,OAAO,CAAC7B,WAAW,EACnB0B,yBACF,CAAC,CACAI,IAAI,CAAEC,OAAO,IAAK6D,YAAY,CAAC7D,OAAO,CAAC,CAAC,CACxCE,KAAK,CAAE/E,CAAC,IAAK;QACZ0I,YAAY,CAAC,CAAC;QACdlI,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC;MAClB,CAAC,CAAC;MAEJ,OAAO,IAAI;IACb,CAAC,MAAM,IAAI2E,OAAO,CAACnI,MAAM,KAAK,qBAAqB,EAAE;MACnDG,kBAAkB,CACfmN,mBAAmB,CAClBnF,OAAO,CAAChI,kBAAkB,EAC1B,MAAM,EACNgI,OAAO,CAACnC,cAAc,EACtBmC,OAAO,CAACsF,MAAM,EACdzF,yBACF,CAAC,CACAI,IAAI,CAAEC,OAAO,IAAK6D,YAAY,CAAC7D,OAAO,CAAC,CAAC,CACxCE,KAAK,CAAE/E,CAAC,IAAK;QACZ0I,YAAY,CAAC,CAAC;QACdlI,OAAO,CAACC,KAAK,CAACT,CAAC,CAAC;MAClB,CAAC,CAAC;MAEJ,OAAO,IAAI;IACb,CAAC,MAAM,IAAI2E,OAAO,CAACnI,MAAM,KAAK,6BAA6B,EAAE;MAC3DgN,WAAW,CAACvH,OAAO,CAAE2H,OAAO,IAAK;QAC/B,IAAIA,OAAO,CAAC5H,2BAA2B,EAAE;UACvC4H,OAAO,CAAC5H,2BAA2B,CAAC,CAAC;QACvC;MACF,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;EAEF,OAAOrF,kBAAkB;AAC3B,CAAC,CAAE,CAAC"}